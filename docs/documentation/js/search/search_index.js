var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/ButtonComponent.html",[0,0.418,1,0.927]],["body/components/ButtonComponent.html",[0,0.583,1,1.419,2,1.312,3,0.148,4,0.127,5,0.852,6,1.392,7,0.959,8,0.959,9,0.106,10,2.42,11,0.803,12,2.631,13,0.023,14,2.056,15,1.639,16,2.056,17,1.639,18,1.479,19,4.861,20,1.479,21,4.129,22,0.315,23,0.76,24,1.149,25,4.129,26,1.741,27,4.587,28,4.819,29,5.333,30,6.096,31,1.148,32,0.654,33,2.116,34,0.826,35,2.844,36,1.114,37,2.844,38,2.844,39,2.844,40,2.844,41,4.861,42,4.538,43,2.844,44,0.523,45,0.802,46,0.427,47,0.458,48,0.975,49,0.246,50,1.721,51,0.289,52,2.844,53,2.844,54,2.844,55,1.227,56,2.28,57,2.844,58,2.36,59,2.42,60,2.14,61,0.148,62,0.106,63,2.42,64,2.844,65,2.844,66,2.844,67,2.14,68,4.129,69,4.129,70,2.844,71,0.852,72,5.572,73,4.135,74,2.844,75,2.037,76,1.931,77,2.42,78,2.631,79,2.844,80,2.61,81,4.129,82,3.107,83,2.844,84,4.446,85,2.42,86,2.844,87,2.36,88,2.844,89,2.42,90,2.844,91,2.42,92,2.42,93,2.42,94,2.42,95,2.844,96,4.129,97,2.844,98,2.844,99,2.037,100,2.844,101,3.309,102,3.107,103,2.844,104,4.129,105,2.36,106,2.844,107,2.844,108,1.931,109,5.333,110,4.129,111,1.931,112,3.13,113,1.31,114,1.931,115,1.931,116,1.507,117,3.658,118,1.403,119,1.764,120,4.129,121,1.31,122,2.42,123,3.107,124,4.129,125,2.844,126,2.844,127,2.844,128,2.844,129,2.42,130,2.14,131,2.844,132,2.844,133,1.227,134,2.42,135,2.42,136,0.713,137,1.392,138,1.166,139,0.757,140,1.799,141,0.959,142,0.959,143,0.757,144,1.676,145,0.975,146,1.392,147,0.713,148,0.959,149,0.757,150,1.035,151,0.959,152,0.757,153,0.959,154,0.757,155,0.959,156,0.757,157,0.757,158,0.959,159,0.757,160,1.696,161,0.959,162,0.757,163,0.959,164,0.757,165,0.959,166,0.757,167,0.959,168,0.757,169,0.959,170,0.757,171,0.594,172,0.904,173,0.713,174,0.904,175,0.959,176,0.009,177,0.013,178,0.009]],["title/components/CoreInputComponent.html",[0,0.418,143,0.927]],["body/components/CoreInputComponent.html",[0,0.542,1,0.667,2,1.196,3,0.13,4,0.112,5,0.751,6,1.269,7,0.846,8,0.846,9,0.093,11,0.708,13,0.023,14,2.018,15,0.846,16,0.846,17,0.846,18,1.348,20,1.348,22,0.277,23,0.693,24,1.304,26,1.348,27,2.832,31,1.422,32,0.722,33,2.206,34,0.929,36,1.048,44,1.134,45,0.97,46,0.958,47,0.992,48,1.556,49,0.27,50,1.701,51,0.255,61,0.13,62,0.093,67,1.888,71,0.751,84,2.832,136,0.629,137,1.269,138,1.062,139,0.667,140,1.693,141,0.846,142,0.846,143,1.503,144,1.666,145,1.454,146,1.269,147,0.629,148,0.846,149,0.667,150,0.944,151,0.846,152,0.667,153,0.846,154,0.667,155,0.846,156,0.667,157,0.667,158,0.846,159,0.667,160,1.611,161,0.846,162,0.667,163,0.846,164,0.667,165,0.846,166,0.667,167,0.846,168,0.667,169,0.846,170,0.667,171,0.524,172,0.797,173,0.629,174,0.797,175,0.846,176,0.008,177,0.012,178,0.008,179,4.545,180,5.037,181,1.703,182,1.196,183,1.618,184,3.399,185,1.624,186,2.556,187,3.399,188,2.832,189,2.802,190,2.151,191,1.624,192,4.517,193,3.202,194,0.944,195,3.843,196,4.517,197,1.797,198,2.832,199,2.832,200,2.802,201,3.202,202,2.832,203,2.832,204,2.832,205,2.832,206,3.336,207,3.399,208,1.856,209,2.832,210,0.629,211,1.888,212,3.834,213,3.202,214,3.763,215,1.888,216,2.134,217,2.134,218,2.832,219,3.25,220,2.508,221,2.832,222,2.508,223,3.202,224,2.508,225,2.832,226,2.508,227,3.777,228,2.832,229,2.508,230,1.888,231,2.508,232,2.832,233,3.202,234,2.508,235,1.196,236,3.843,237,2.134,238,2.508,239,1.434,240,1.434,241,0.797,242,2.508,243,2.134,244,2.508,245,1.703,246,2.508,247,2.508,248,2.508,249,2.134,250,2.134,251,1.888,252,1.888,253,2.134,254,2.134,255,2.134,256,2.134,257,2.134,258,1.083,259,0.629,260,2.508,261,2.508]],["title/components/CoreSelectComponent.html",[0,0.418,147,0.873]],["body/components/CoreSelectComponent.html",[0,0.449,1,0.496,2,0.949,3,0.097,4,0.083,5,0.558,6,1.007,7,0.628,8,0.628,9,0.069,11,0.526,12,1.844,13,0.024,14,1.913,15,0.628,16,0.628,17,0.628,18,1.07,20,1.07,22,0.33,23,0.55,24,1.309,26,1.07,27,3.523,31,1.18,32,0.675,33,1.532,34,0.93,36,0.978,42,3.639,44,1.004,45,0.887,46,0.82,47,0.95,48,1.578,49,0.223,50,1.63,51,0.189,55,1.613,56,1.532,58,1.065,59,1.585,61,0.097,62,0.111,63,1.585,67,1.402,71,1.281,75,1.473,78,0.919,80,1.723,84,3.523,85,1.585,87,2.137,91,1.585,92,1.585,93,1.585,94,1.585,99,0.919,108,1.265,112,0.987,113,1.723,114,1.265,115,1.265,116,0.987,118,0.919,119,1.156,121,1.723,123,1.402,130,1.402,133,1.289,136,0.467,137,1.007,138,0.843,139,0.496,140,1.443,141,0.628,142,0.628,143,0.496,144,1.57,145,1.329,146,1.007,147,1.253,148,0.628,149,0.496,150,0.749,151,0.628,152,0.496,153,0.628,154,0.496,155,0.628,156,0.496,157,0.496,158,0.628,159,0.496,160,1.402,161,0.628,162,0.496,163,0.628,164,0.496,165,0.628,166,0.496,167,0.628,168,0.496,169,0.628,170,0.496,171,0.624,172,0.592,173,0.467,174,0.592,175,0.628,176,0.006,177,0.01,178,0.006,179,4.539,182,0.949,183,1.339,184,2.813,185,1.289,186,2.028,187,2.813,188,2.248,189,2.32,190,1.707,191,2.02,194,0.749,197,1.532,198,2.248,199,2.248,202,2.248,203,2.248,204,2.248,205,2.248,206,2.905,207,2.813,208,1.473,210,0.467,211,1.402,212,3.393,218,2.248,219,3.121,221,2.248,225,2.248,227,3.219,228,2.248,230,2.248,232,1.402,239,1.065,240,1.065,241,0.592,243,2.541,251,1.402,252,1.402,258,2.156,259,1.448,262,4.539,263,1.585,264,2.648,265,3.739,266,2.987,267,3.739,268,3.739,269,3.739,270,3.219,271,4.277,272,2.987,273,3.639,274,3.181,275,2.248,276,2.987,277,3.181,278,2.987,279,4.682,280,2.987,281,1.863,282,1.863,283,1.863,284,1.863,285,2.987,286,1.863,287,2.987,288,1.863,289,1.863,290,1.863,291,2.987,292,1.863,293,1.863,294,1.863,295,1.863,296,1.863,297,1.863,298,1.863,299,1.863,300,1.863,301,2.987,302,1.863,303,2.987,304,1.863,305,2.987,306,1.863,307,2.987,308,1.863,309,1.863,310,1.863,311,1.863,312,1.402,313,1.265,314,1.863,315,1.863,316,1.863,317,1.863,318,1.863,319,1.863,320,4.682,321,4.277,322,2.541,323,2.987,324,1.863,325,4.997,326,1.863,327,1.863,328,1.863,329,4.277,330,1.863,331,2.987,332,4.277,333,1.863,334,2.987,335,2.987,336,1.863,337,1.863,338,2.987,339,1.863,340,1.863,341,1.863,342,1.863,343,1.863,344,1.585,345,1.265,346,2.541,347,1.863,348,2.541,349,1.156,350,2.813,351,2.028,352,1.585,353,1.156,354,2.987,355,1.585,356,1.585,357,1.402,358,2.987,359,1.844,360,0.858,361,1.863,362,1.853,363,1.156,364,1.402,365,2.248,366,1.863,367,1.065,368,1.863,369,0.987,370,1.402,371,1.265,372,1.265,373,1.402,374,1.585,375,1.265,376,1.853,377,1.863,378,1.863,379,1.863,380,1.863]],["title/directives/CoreSelectOptionDirective.html",[139,0.927,173,0.873]],["body/directives/CoreSelectOptionDirective.html",[3,0.207,4,0.177,9,0.148,11,1.123,12,1.962,13,0.023,14,1.559,22,0.681,24,1.133,26,1.864,31,1.548,32,0.725,33,1.864,34,0.947,44,0.958,45,0.782,46,0.782,47,0.641,48,1.37,49,0.311,50,1.123,51,0.404,60,4.367,61,0.207,62,0.194,139,1.385,145,0.939,147,1.455,171,1.088,172,1.264,173,1.305,174,1.654,176,0.013,177,0.017,178,0.013,179,4.652,208,2.568,210,0.997,211,2.993,212,4.451,240,2.274,241,1.264,245,2.701,259,0.997,262,4.652,264,3.691,275,3.917,312,2.993,374,3.384,381,3.384,382,5.206,383,5.206,384,5.206,385,5.803,386,3.978,387,3.978,388,3.978,389,5.206,390,3.978,391,3.978,392,3.978,393,3.978,394,3.978,395,3.384,396,3.978,397,3.978,398,2.493,399,3.978,400,3.978,401,3.978,402,3.978,403,3.978,404,5.206,405,5.206,406,3.978,407,3.978,408,3.978,409,3.978,410,3.978]],["title/components/CoreTableColumnComponent.html",[0,0.418,149,0.927]],["body/components/CoreTableColumnComponent.html",[0,0.593,1,0.778,2,1.338,3,0.152,4,0.13,5,1.261,6,0.986,7,0.986,8,0.986,9,0.109,11,0.825,13,0.023,14,2.064,15,0.986,16,0.986,17,0.986,18,1.508,20,1.508,22,0.323,23,0.775,24,1.246,26,1.508,31,1.485,32,0.68,33,1.047,34,0.921,36,0.88,45,0.742,47,0.471,48,0.994,49,0.251,50,1.735,51,0.297,58,1.671,61,0.152,62,0.109,71,1.261,118,1.442,136,0.733,137,1.42,138,1.189,139,0.778,140,1.822,141,0.986,142,0.986,143,0.778,144,1.709,145,1.451,146,1.42,147,0.733,148,0.986,149,1.437,150,1.802,151,0.986,152,0.778,153,0.986,154,0.778,155,0.986,156,0.778,157,0.778,158,0.986,159,0.778,160,1.715,161,0.986,162,0.778,163,0.986,164,0.778,165,0.986,166,0.778,167,0.986,168,0.778,169,0.986,170,0.778,171,1.246,172,0.929,173,0.733,174,0.929,175,0.986,176,0.009,177,0.013,178,0.009,182,1.338,183,1.768,191,1.817,197,1.935,208,2.077,210,1.238,258,2.13,259,1.697,353,1.813,367,1.671,411,3.805,412,5.009,413,2.487,414,3.583,415,3.583,416,2.275,417,4.937,418,4.211,419,4.2,420,3.715,421,4.937,422,2.822,423,3.352,424,4.937,425,4.2,426,4.211,427,2.616,428,2.923,429,2.923,430,2.923,431,2.923,432,2.923,433,2.923,434,2.923,435,2.923,436,2.923,437,2.923,438,2.923,439,2.923,440,2.923,441,2.487,442,1.985,443,1.671,444,4.211,445,4.211,446,4.937,447,4.211,448,2.199,449,2.923,450,3.169,451,4.211,452,1.985,453,1.347,454,2.923,455,2.923,456,3.583,457,4.211]],["title/components/CoreTableComponent.html",[0,0.418,152,0.927]],["body/components/CoreTableComponent.html",[0,0.461,1,0.516,2,0.981,3,0.101,4,0.086,5,0.581,6,0.654,7,0.654,8,0.654,9,0.072,11,0.548,13,0.024,14,1.929,15,0.654,16,0.654,17,0.654,18,1.105,20,1.105,22,0.341,23,0.568,24,1.303,26,1.105,31,0.729,32,0.691,33,1.568,34,0.915,36,1.115,44,1.05,45,0.913,46,0.879,47,0.942,48,1.347,49,0.318,50,1.236,51,0.197,56,0.695,61,0.101,62,0.072,71,0.581,75,0.957,78,1.522,87,1.109,112,1.635,113,0.894,116,1.635,117,1.46,121,0.894,122,1.651,136,0.486,137,1.041,138,0.871,139,0.516,140,1.476,141,0.654,142,0.654,143,0.516,144,1.584,145,1.347,146,1.041,147,0.486,148,0.654,149,0.516,150,1.276,151,0.654,152,1.165,153,0.654,154,0.821,155,0.654,156,0.516,157,0.516,158,0.654,159,0.516,160,1.431,161,0.654,162,0.516,163,0.654,164,0.516,165,0.654,166,0.516,167,0.654,168,0.516,169,0.654,170,0.516,171,1.288,172,0.617,173,0.486,174,0.617,175,0.654,176,0.006,177,0.01,178,0.006,182,0.981,183,1.376,185,1.332,190,1.109,194,0.774,197,1.568,208,1.522,210,0.486,212,1.318,241,0.981,258,1.658,259,1.584,362,1.204,369,1.028,373,1.46,375,1.318,376,1.204,398,1.935,411,3.763,416,0.894,419,2.625,420,3.294,422,2.502,423,4.124,427,3.162,442,2.095,443,1.764,448,1.46,450,2.322,452,2.609,453,1.77,458,4.953,459,1.651,460,3.841,461,3.086,462,3.086,463,3.539,464,3.841,465,3.086,466,3.841,467,3.294,468,2.891,469,5.088,470,3.086,471,3.086,472,3.086,473,3.086,474,4.378,475,2.625,476,3.086,477,3.086,478,3.086,479,3.623,480,3.841,481,3.841,482,3.841,483,1.651,484,2.502,485,3.086,486,2.322,487,2.531,488,1.94,489,2.383,490,1.94,491,3.086,492,3.841,493,3.841,494,1.94,495,3.086,496,3.268,497,1.94,498,3.086,499,1.94,500,3.086,501,1.94,502,1.94,503,1.94,504,3.086,505,1.94,506,3.086,507,1.94,508,3.086,509,3.086,510,2.609,511,1.94,512,3.086,513,1.94,514,4.065,515,2.095,516,1.94,517,1.94,518,3.086,519,1.94,520,1.94,521,1.94,522,1.94,523,1.94,524,1.94,525,1.204,526,1.94,527,1.94,528,1.109,529,1.318,530,0.894,531,1.318,532,1.651,533,1.651,534,1.94,535,1.651,536,1.46,537,1.94,538,1.94,539,3.841,540,2.322,541,3.841,542,1.94,543,1.94,544,1.94,545,1.94,546,2.625,547,3.086,548,1.94,549,1.94,550,1.94,551,1.94,552,1.94,553,1.651,554,1.94,555,1.94,556,1.94,557,1.94,558,1.94,559,1.94,560,1.94,561,1.94,562,1.94,563,3.086,564,3.086,565,0.837,566,3.086,567,3.086,568,1.94,569,1.94,570,1.94,571,3.086,572,2.625,573,1.94,574,1.94,575,1.651,576,1.94,577,1.94,578,1.204,579,1.94,580,3.086,581,1.94,582,1.94,583,3.268,584,1.46,585,2.625,586,1.94,587,3.086,588,1.94]],["title/components/CoreTableFilterComponent.html",[0,0.418,154,0.927]],["body/components/CoreTableFilterComponent.html",[0,0.608,1,0.814,2,1.383,3,0.159,4,0.136,5,0.916,6,1.032,7,1.032,8,1.032,9,0.114,11,0.864,13,0.023,14,2.077,15,1.032,16,1.032,17,1.032,18,1.558,20,1.558,22,0.338,23,0.801,24,1.276,26,1.558,31,1.302,32,0.689,34,0.891,36,1.442,44,1.015,45,0.936,46,0.829,47,0.889,48,1.503,49,0.302,50,1.645,51,0.31,61,0.159,62,0.114,80,2.541,133,2.38,136,0.767,137,1.467,138,1.228,139,0.814,140,1.86,141,1.032,142,1.032,143,0.814,144,1.72,145,1.503,146,1.467,147,0.767,148,1.032,149,0.814,150,1.791,151,1.032,152,0.814,153,1.032,154,1.468,155,1.032,156,0.814,157,0.814,158,1.032,159,0.814,160,1.745,161,1.032,162,0.814,163,1.032,164,0.814,165,1.032,166,0.814,167,1.032,168,0.814,169,1.032,170,0.814,171,0.639,172,0.972,173,0.767,174,0.972,175,1.032,176,0.01,177,0.014,178,0.01,182,1.383,183,1.813,197,1.975,210,0.767,240,1.749,241,0.972,360,2.005,411,3.704,414,3.702,415,3.702,416,2.333,441,2.603,442,2.077,443,1.749,463,3.757,531,4.399,533,2.603,589,2.603,590,2.683,591,5.064,592,4.351,593,4.351,594,4.351,595,4.351,596,5.064,597,3.059,598,4.351,599,3.142,600,3.059,601,3.059,602,3.059,603,4.351,604,3.059,605,4.351,606,3.059,607,4.351,608,3.059,609,5.064,610,5.064,611,4.351,612,3.059,613,3.059]],["title/injectables/CoreTableService.html",[463,2.162,614,1.846]],["body/injectables/CoreTableService.html",[3,0.15,4,0.128,9,0.107,13,0.024,22,0.319,23,0.768,24,1.266,31,1.551,32,0.734,33,2.126,34,0.893,36,1.4,44,0.902,45,0.736,46,0.736,47,0.789,48,0.985,49,0.32,51,0.293,55,1.245,61,0.15,62,0.107,71,1.778,133,2.115,171,1.24,176,0.009,177,0.013,178,0.009,191,1.8,194,1.046,210,1.228,219,3.092,235,1.557,241,1.887,258,1.8,259,1.626,264,2.845,357,3.139,360,2.258,398,2.587,411,3.708,416,2.474,448,2.171,450,4.468,463,3.04,467,4.04,479,3.327,510,3.646,530,1.329,565,1.8,590,2.845,614,2.21,615,1.959,616,2.171,617,4.169,618,4.169,619,4.9,620,3.549,621,3.549,622,3.549,623,4.171,624,4.171,625,4.338,626,2.884,627,4.171,628,2.884,629,4.171,630,4.169,631,4.568,632,3.687,633,2.884,634,3.549,635,2.884,636,4.171,637,4.171,638,2.884,639,3.687,640,2.884,641,4.9,642,2.884,643,2.884,644,2.884,645,1.959,646,2.884,647,1.79,648,2.884,649,2.884,650,2.884,651,2.884,652,2.884,653,2.884,654,4.171,655,2.884,656,2.884,657,4.9,658,3.549,659,3.549,660,2.884,661,2.884,662,2.884,663,2.884,664,2.884,665,6.388,666,5.369,667,2.454,668,2.454,669,2.884,670,2.884,671,2.884,672,2.884]],["title/classes/FilterModel.html",[62,0.13,625,2.366]],["body/classes/FilterModel.html",[3,0.253,4,0.216,9,0.181,13,0.023,22,0.538,24,1.306,31,1.503,32,0.763,34,0.89,36,1.235,61,0.253,62,0.181,176,0.016,177,0.019,178,0.016,194,1.482,357,4.447,625,4.013,658,5.028,659,5.028,667,5.028,668,5.028,673,2.399,674,4.138,675,5.417,676,4.863,677,5.91,678,5.91,679,4.863,680,4.863]],["title/modules/G43CommonModule.html",[681,1.411,682,2.622]],["body/modules/G43CommonModule.html",[3,0.277,4,0.237,9,0.198,13,0.023,49,0.372,51,0.54,61,0.277,62,0.198,176,0.017,177,0.02,178,0.017,682,4.693,683,2.453,684,5.323,685,5.323,686,3.565,687,3.87,688,5.306,689,3.043,690,5.323,691,2.82,692,3.043,693,2.82]],["title/classes/G43CoreService.html",[62,0.13,694,2.162]],["body/classes/G43CoreService.html",[3,0.135,4,0.116,9,0.097,13,0.024,22,0.288,23,0.711,32,0.711,34,0.851,36,1.067,44,1.239,45,0.891,46,0.891,47,1.002,49,0.326,61,0.201,62,0.097,144,0.652,145,1.469,176,0.008,177,0.012,178,0.008,200,4.33,210,0.652,219,1.282,235,1.228,241,1.228,259,1.587,363,1.613,453,2.637,487,3.403,530,1.198,565,1.122,645,1.766,647,1.613,673,1.282,694,2.398,695,3.068,696,4.681,697,1.956,698,2.909,699,3.844,700,3.289,701,3.289,702,2.909,703,2.909,704,2.212,705,3.844,706,3.472,707,2.92,708,2.6,709,3.844,710,2.212,711,4.078,712,2.6,713,3.844,714,2.212,715,2.6,716,2.6,717,3.469,718,2.625,719,3.844,720,2.909,721,4.763,722,2.909,723,3.469,724,3.844,725,2.909,726,4.306,727,2.6,728,4.763,729,3.133,730,2.909,731,1.956,732,2.909,733,3.469,734,2.6,735,2.909,736,2.638,737,2.625,738,2.212,739,2.6,740,2.212,741,2.6,742,1.766,743,1.766,744,2.212,745,2.212,746,2.212,747,1.282,748,1.766,749,0.931,750,3.886,751,4.645,752,2.212,753,3.844,754,2.212,755,1.956,756,3.289,757,5.179,758,1.956,759,1.956,760,2.212,761,2.212,762,4.581,763,3.844,764,2.212,765,3.289,766,2.445,767,4.346,768,4.346,769,4.346,770,1.956,771,2.212,772,2.212,773,2.212,774,2.212,775,2.212,776,2.212,777,2.212,778,2.212,779,2.212,780,2.212,781,2.212,782,2.212,783,2.212,784,2.212,785,2.212,786,2.212,787,3.289,788,2.212,789,2.212,790,2.212,791,2.212,792,2.212,793,2.212,794,2.212]],["title/pipes/G43FileSizePipe.html",[766,1.846,795,2.162]],["body/pipes/G43FileSizePipe.html",[3,0.224,4,0.191,9,0.224,11,1.215,13,0.023,23,0.792,24,1.008,31,1.016,32,0.476,34,0.602,36,1.144,44,0.792,45,0.905,46,0.647,47,0.693,49,0.257,51,0.437,55,1.857,56,1.541,61,0.224,62,0.16,71,1.289,73,5.125,105,2.459,171,1.258,176,0.014,177,0.017,178,0.014,182,1.367,235,1.367,258,2.363,259,1.079,359,2.701,565,2.889,689,3.13,766,2.902,795,3.398,796,3.237,797,3.398,798,3.237,799,5.476,800,5.476,801,6.341,802,4.302,803,5.476,804,4.659,805,4.121,806,3.66,807,3.66,808,3.66,809,3.66,810,3.66,811,3.66,812,3.66,813,3.66,814,3.66,815,4.121,816,3.66,817,3.66,818,3.66,819,3.66,820,3.66,821,3.66,822,3.66,823,3.66,824,5.476,825,6.024,826,4.302,827,4.302,828,4.302,829,4.302,830,4.302,831,5.476,832,4.302,833,4.302,834,4.302,835,3.237,836,4.302,837,4.659,838,4.302]],["title/components/G43InputComponent.html",[0,0.418,156,0.927]],["body/components/G43InputComponent.html",[0,0.706,1,1.089,2,1.685,3,0.213,4,0.182,5,1.588,6,1.38,7,1.38,8,1.38,9,0.152,11,1.155,13,0.023,14,2.149,15,1.38,16,1.38,17,1.38,22,0.453,23,0.976,24,1.186,34,0.742,45,0.884,47,0.659,48,0.966,49,0.244,50,1.661,51,0.415,61,0.213,62,0.152,136,1.026,137,1.788,138,1.497,139,1.089,140,2.099,141,1.38,142,1.38,143,1.089,144,1.788,145,1.252,146,1.788,147,1.026,148,1.38,149,1.089,150,1.329,151,1.38,152,1.089,153,1.38,154,1.089,155,1.38,156,1.656,157,1.089,158,1.38,159,1.089,160,1.931,161,1.38,162,1.089,163,1.38,164,1.089,165,1.38,166,1.089,167,1.38,168,1.089,169,1.38,170,1.089,171,0.855,172,1.3,173,1.026,174,1.3,175,1.38,176,0.013,177,0.017,178,0.013,181,2.779,182,1.685,183,2.107,197,2.229,210,1.475,215,3.079,839,3.995,840,5.005,841,5.883,842,4.092]],["title/modules/G43InputModule.html",[681,1.411,843,2.366]],["body/modules/G43InputModule.html",[1,1.872,3,0.212,4,0.181,9,0.152,13,0.023,49,0.411,51,0.414,61,0.212,62,0.152,136,1.022,143,1.872,144,1.022,147,1.764,156,1.872,170,1.872,173,1.655,176,0.013,177,0.017,178,0.013,180,3.069,185,1.76,239,2.331,262,3.593,264,2.161,395,3.47,681,1.652,683,1.879,686,3.025,691,3.112,692,2.331,693,3.112,839,2.769,843,4.916,844,2.161,845,2.53,846,3.47,847,3.47,848,3.47,849,3.283,850,2.53,851,2.331,852,4.078,853,3.283,854,2.331,855,4.501,856,5.291,857,4.078,858,4.997,859,5.873,860,4.078,861,4.078,862,3.069]],["title/injectables/G43InputService.html",[614,1.846,863,2.622]],["body/injectables/G43InputService.html",[3,0.277,4,0.237,9,0.198,13,0.023,24,1.148,34,0.744,49,0.318,51,0.54,61,0.277,62,0.198,176,0.017,177,0.02,178,0.017,210,1.659,614,3.305,615,3.614,839,4.235,863,4.693,864,4.528,865,5.323,866,4.528,867,4.528]],["title/interfaces/G43Notification.html",[707,1.992,749,1.248]],["body/interfaces/G43Notification.html",[3,0.305,4,0.213,9,0.178,13,0.023,22,0.531,23,1.078,32,0.7,34,0.885,44,1.165,45,0.951,46,0.951,47,1.02,48,1.624,49,0.286,51,0.487,61,0.305,176,0.015,177,0.019,178,0.015,235,1.524,565,2.07,695,3.251,707,3.35,736,2.742,747,3.251,749,1.718,868,2.541,869,3.609,870,4.986,871,4.986,872,4.986,873,5.86,874,4.796,875,5.86,876,4.796,877,5.86,878,4.796,879,3.609,880,4.08,881,3.257,882,4.08]],["title/classes/G43RestApiHandler.html",[62,0.13,883,2.622]],["body/classes/G43RestApiHandler.html",[3,0.175,4,0.15,9,0.126,13,0.024,22,0.373,23,0.858,24,1.112,32,0.591,34,0.747,36,1.115,44,1.06,45,0.7,46,0.7,47,0.544,49,0.278,55,2.696,58,3.052,61,0.175,62,0.126,176,0.011,177,0.015,178,0.011,194,1.168,210,0.846,219,2.981,235,1.072,241,1.83,259,1.566,398,2.332,468,4.017,479,4.243,487,2.829,510,2.291,530,1.555,546,3.965,565,2.859,618,5.636,621,3.965,634,5.141,673,1.664,698,3.507,702,2.539,703,2.539,723,2.291,733,3.91,742,2.291,750,4.103,883,3.507,884,4.899,885,4.899,886,2.871,887,3.374,888,3.965,889,3.965,890,4.66,891,4.66,892,4.66,893,3.507,894,4.66,895,4.542,896,4.66,897,4.66,898,5.758,899,3.374,900,4.66,901,6.042,902,6.042,903,6.042,904,5.339,905,2.871,906,3.374,907,4.66,908,5.339,909,5.339,910,5.339,911,5.339,912,5.339,913,5.339,914,5.339,915,5.339,916,3.374,917,5.339,918,3.374,919,4.66,920,4.66,921,3.374,922,3.374,923,4.66,924,3.374,925,3.374,926,4.66]],["title/pipes/G43SafePipe.html",[766,1.846,927,2.162]],["body/pipes/G43SafePipe.html",[3,0.258,4,0.221,9,0.185,11,1.401,13,0.023,23,0.913,24,1.182,32,0.549,34,0.694,44,0.913,45,0.899,46,0.746,47,0.8,49,0.357,51,0.504,61,0.258,62,0.185,105,2.837,176,0.016,177,0.019,178,0.016,182,1.577,240,2.837,241,1.577,259,1.244,689,3.42,729,3.37,766,2.63,796,3.735,797,3.712,804,5.09,927,3.712,928,4.222,929,5.983,930,5.983,931,4.963,932,6.423,933,5.983,934,3.735,935,3.735,936,4.963,937,4.963,938,4.963]],["title/classes/G43Service.html",[62,0.13,939,2.622]],["body/classes/G43Service.html",[3,0.141,4,0.121,9,0.249,13,0.023,22,0.3,23,0.734,31,1.117,32,0.758,34,0.917,36,1.473,44,1.273,45,1.044,46,0.975,47,1.057,49,0.332,61,0.141,62,0.101,71,1.417,144,1,145,0.641,176,0.009,177,0.013,178,0.009,191,1.722,200,4.394,210,0.68,235,1.268,259,1.457,453,2.18,487,3.541,530,1.25,565,2.042,645,1.843,673,1.338,694,3.968,695,2.867,698,3.002,699,3.56,700,3.394,701,3.394,702,3.002,703,3.002,704,3.394,705,3.925,706,3.925,707,2.982,709,3.002,710,2.308,711,3.824,713,4.52,714,2.308,717,2.709,718,1.843,719,3.002,720,2.042,721,3.002,722,2.042,723,2.709,724,2.042,725,2.042,726,3.002,728,3.002,729,4.185,730,2.042,731,2.042,732,2.042,733,2.709,735,2.042,736,2.281,737,1.843,738,2.308,740,2.308,742,1.843,747,1.338,748,1.843,750,2.709,753,2.042,755,2.042,759,2.042,763,2.042,939,3.002,940,2.308,941,3.989,942,3.989,943,3.989,944,3.989,945,3.989,946,2.713,947,3.989,948,5.216,949,2.713,950,3.989,951,6.163,952,2.713,953,4.731,954,3.989,955,4.437,956,2.713,957,3.989,958,4.731,959,2.713,960,3.989,961,6.007,962,2.713,963,2.713,964,2.713,965,2.713,966,2.713,967,2.713,968,2.713,969,2.713,970,2.713,971,2.713,972,2.713,973,2.713,974,2.713,975,2.713,976,2.713,977,2.713,978,5.216,979,3.989,980,3.989,981,3.989]],["title/interfaces/G43ServiceParams.html",[711,2.162,749,1.248]],["body/interfaces/G43ServiceParams.html",[3,0.156,4,0.134,9,0.112,13,0.024,22,0.332,32,0.701,36,1.257,44,0.922,46,0.983,47,0.484,49,0.345,61,0.223,62,0.112,144,0.753,145,0.709,176,0.01,177,0.014,178,0.01,194,1.076,200,4.002,219,1.481,235,1.364,241,1.364,259,1.617,363,3.109,453,2.666,487,3.189,530,1.383,565,1.296,632,3.231,645,2.039,647,1.863,694,1.863,695,1.481,696,2.259,697,2.259,699,2.259,705,3.231,706,2.259,707,2.454,709,3.231,711,3.734,717,2.915,718,2.039,719,3.231,720,2.259,721,5.034,722,2.259,723,2.915,724,4.354,725,2.259,726,4.115,728,4.924,729,3.929,730,2.259,732,2.259,733,2.915,735,2.259,736,1.716,737,2.039,742,2.039,743,2.039,744,2.554,745,2.554,746,2.554,747,1.481,748,2.039,749,1.075,750,4.38,751,5.391,752,2.554,753,4.662,754,4.264,755,3.771,756,4.653,757,5.635,758,2.259,759,2.259,760,2.554,761,2.554,762,4.768,763,4.115,764,2.554,765,3.653,766,2.655,767,4.653,768,4.653,769,4.653,770,2.259,771,2.554,772,2.554,773,2.554,774,2.554,775,2.554,776,2.554,777,2.554,778,2.554,779,2.554,780,2.554,781,2.554,782,2.554,783,2.554,784,2.554,785,2.554,786,2.554,787,3.653,788,2.554,789,2.554,790,2.554,791,2.554,792,2.554,793,2.554,794,2.554,868,1.591]],["title/modules/G43SharedPipesModule.html",[681,1.411,687,2.162]],["body/modules/G43SharedPipesModule.html",[3,0.245,4,0.209,9,0.215,13,0.023,49,0.391,51,0.477,61,0.245,62,0.175,136,1.179,144,1.452,176,0.015,177,0.018,178,0.015,185,2.03,681,1.905,683,2.167,686,3.31,687,4.408,688,4.001,689,2.688,691,3.324,692,2.688,693,3.324,795,4.45,797,2.918,844,2.492,845,2.918,849,3.592,850,2.918,851,2.688,853,3.592,854,2.688,927,4.45,982,4.001,983,4.001,984,4.001,985,4.703,986,4.703,987,4.703]],["title/modules/G43TestingModule.html",[681,1.411,988,2.622]],["body/modules/G43TestingModule.html",[3,0.306,4,0.215,9,0.18,13,0.024,49,0.411,51,0.491,61,0.251,62,0.18,176,0.015,177,0.019,178,0.015,185,2.086,186,3.283,346,5.403,683,2.228,686,3.366,691,2.561,692,2.764,693,2.561,736,2.764,747,2.385,748,3.283,853,3.654,854,2.764,870,4.113,871,4.113,872,4.113,879,3.638,881,3.999,934,3.638,988,4.431,989,4.834,990,4.834,991,5.889,992,4.834,993,5.889,994,4.834,995,5.889,996,4.834,997,4.834,998,4.834]],["title/interfaces/G43Translation.html",[484,1.992,749,1.248]],["body/interfaces/G43Translation.html",[3,0.225,4,0.193,9,0.161,13,0.023,22,0.479,23,1.012,32,0.726,33,1.97,34,0.889,36,1.508,44,1.17,45,0.956,46,1.054,47,1.024,48,1.299,49,0.328,51,0.44,61,0.286,176,0.014,177,0.018,178,0.014,194,1.379,235,1.377,484,3.145,487,3.202,528,2.477,530,1.997,565,1.87,647,3.75,695,3.237,749,1.552,868,2.296,880,3.687,893,4.139,999,4.938,1000,3.261,1001,6.358,1002,5.501,1003,5.501,1004,4.333,1005,4.333,1006,5.501,1007,4.333,1008,5.501,1009,4.333,1010,5.501,1011,5.501,1012,4.333,1013,4.333,1014,4.333,1015,4.333,1016,4.333,1017,3.687]],["title/components/MenuComponent.html",[0,0.418,157,0.927]],["body/components/MenuComponent.html",[0,0.619,1,0.842,2,1.416,3,0.164,4,0.141,5,0.947,6,1.067,7,1.067,8,1.067,9,0.118,11,0.893,13,0.023,14,2.086,15,1.067,16,1.067,17,1.067,18,1.595,20,1.595,22,0.35,23,0.82,24,1.218,26,1.595,31,1.052,32,0.619,34,0.825,44,0.582,45,0.841,46,0.67,47,0.51,48,1.052,49,0.308,50,1.581,51,0.321,56,1.133,61,0.164,62,0.118,71,1.334,75,2.544,78,2.544,80,2.053,87,3.596,99,1.56,101,3.798,108,2.148,111,3.502,112,2.732,113,2.376,115,4.434,116,1.676,118,1.56,119,1.962,121,2.959,129,2.691,136,0.793,137,1.502,138,1.258,139,0.842,140,1.888,141,1.067,142,1.067,143,0.842,144,1.729,145,1.052,146,1.502,147,0.793,148,1.067,149,0.842,150,1.117,151,1.067,152,0.842,153,1.067,154,0.842,155,1.067,156,0.842,157,1.49,158,1.067,159,0.842,160,1.982,161,1.067,162,0.842,163,1.067,164,0.842,165,1.067,166,0.842,167,1.067,168,0.842,169,1.067,170,0.842,171,0.931,172,1.005,173,0.793,174,1.005,175,1.067,176,0.01,177,0.014,178,0.01,182,1.416,183,1.847,194,1.117,197,2.005,210,0.793,241,1.005,313,2.148,353,1.962,355,2.691,359,2.911,360,2.376,362,1.962,364,4.213,369,2.36,370,2.38,375,2.148,376,1.962,398,1.281,483,2.691,484,3.2,486,3.352,525,1.962,528,1.808,529,2.148,535,2.691,536,2.38,575,2.691,578,1.962,585,2.691,1018,2.691,1019,5.157,1020,4.455,1021,5.157,1022,5.157,1023,4.455,1024,3.502,1025,3.163,1026,3.2,1027,4.455,1028,4.455,1029,3.163,1030,3.163,1031,4.455,1032,2.691,1033,2.691,1034,3.163,1035,3.502,1036,2.38,1037,2.38,1038,3.163,1039,3.163,1040,3.163,1041,3.163,1042,3.163,1043,3.163]],["title/components/MenuContainerComponent.html",[0,0.418,159,0.927]],["body/components/MenuContainerComponent.html",[0,0.52,1,0.623,2,1.135,3,0.122,4,0.104,5,0.701,6,0.79,7,0.79,8,0.79,9,0.087,11,0.661,12,1.155,13,0.024,14,1.995,15,0.79,16,0.79,17,0.79,18,1.279,20,1.279,22,0.395,23,0.657,24,1.254,26,1.279,31,0.553,32,0.577,33,1.279,34,0.925,36,0.489,44,0.657,45,0.784,46,0.537,47,0.698,48,1.232,49,0.258,50,1.368,51,0.238,55,1.542,56,2.35,58,1.338,61,0.122,62,0.087,71,0.701,75,1.155,76,1.59,78,1.155,80,1.996,82,3.646,99,1.155,113,1.646,114,1.59,116,1.241,118,2.39,119,1.453,121,1.996,133,1.542,136,0.587,137,1.205,138,1.008,139,0.623,140,1.634,141,0.79,142,0.79,143,0.623,144,1.645,145,0.843,146,1.205,147,0.587,148,0.79,149,0.623,150,0.896,151,0.79,152,0.623,153,0.79,154,0.623,155,0.79,156,0.623,157,0.623,158,0.79,159,1.289,160,1.947,161,0.79,162,0.623,163,0.79,164,1.64,165,0.79,166,0.623,167,0.79,168,1.289,169,0.79,170,0.623,171,1.09,172,0.744,173,0.587,174,0.744,175,0.79,176,0.007,177,0.011,178,0.007,182,1.135,183,1.551,191,1.542,194,0.896,197,1.735,208,1.762,258,1.542,259,1.7,270,2.688,275,2.688,277,3.685,312,1.762,344,1.992,345,2.426,359,1.762,360,1.646,367,2.476,369,1.241,371,1.59,398,2.316,514,3.685,515,2.426,578,2.216,590,2.295,758,3.926,1035,1.59,1044,3.808,1045,4.134,1046,1.992,1047,2.688,1048,4.331,1049,3.572,1050,4.331,1051,4.331,1052,4.331,1053,4.846,1054,4.331,1055,4.331,1056,4.331,1057,4.331,1058,4.331,1059,4.331,1060,4.331,1061,2.341,1062,2.341,1063,2.341,1064,3.572,1065,2.341,1066,2.341,1067,3.572,1068,2.341,1069,3.572,1070,2.341,1071,2.341,1072,3.572,1073,3.039,1074,2.341,1075,2.341,1076,2.341,1077,2.341,1078,2.341,1079,2.341,1080,2.341,1081,2.341,1082,2.341,1083,2.341,1084,2.341,1085,2.341,1086,2.341,1087,2.341,1088,2.341,1089,2.341,1090,2.341,1091,1.59,1092,1.992,1093,1.59,1094,1.992,1095,3.572,1096,5.218,1097,2.341,1098,2.341,1099,5.218,1100,3.685,1101,4.846,1102,5.499,1103,1.992,1104,1.992,1105,3.572,1106,5.72,1107,2.341,1108,2.341,1109,3.572,1110,3.926,1111,1.762,1112,2.688,1113,3.039,1114,4.331,1115,2.341,1116,3.572,1117,2.426]],["title/components/MenuContentComponent.html",[0,0.418,162,0.927]],["body/components/MenuContentComponent.html",[0,0.64,1,0.897,2,1.48,3,0.175,4,0.15,5,1.009,6,1.136,7,1.136,8,1.136,9,0.125,11,0.951,12,2.632,13,0.023,14,2.103,15,1.136,16,1.136,17,1.136,18,1.667,20,1.667,22,0.373,23,0.857,24,1.201,32,0.515,34,0.746,44,0.62,45,0.865,46,0.506,47,0.543,48,1.099,49,0.278,50,0.951,51,0.342,56,1.667,61,0.175,62,0.173,80,2.145,82,4.817,87,1.926,105,1.926,113,1.553,114,2.288,115,3.162,118,2.297,119,2.889,121,1.553,136,0.845,137,1.57,138,1.314,139,0.897,140,1.941,141,1.136,142,1.136,143,0.897,144,1.744,145,1.099,146,1.57,147,0.845,148,1.136,149,0.897,150,1.167,151,1.136,152,0.897,153,1.136,154,0.897,155,1.136,156,0.897,157,0.897,158,1.136,159,1.703,160,2.073,161,1.136,162,1.531,163,1.136,164,0.897,165,1.136,166,0.897,167,1.136,168,0.897,169,1.136,170,0.897,171,0.704,172,1.071,173,0.845,174,1.071,175,1.136,176,0.011,177,0.015,178,0.011,182,1.48,183,1.911,189,2.091,194,1.167,197,2.061,210,0.845,241,1.695,349,2.091,359,2.297,362,2.091,365,2.536,367,1.926,369,1.785,515,2.288,525,2.091,590,1.785,1036,2.536,1044,3.289,1045,2.091,1047,4.33,1110,4.909,1111,2.536,1118,4.33,1119,2.867,1120,5.335,1121,4.656,1122,2.867,1123,3.37,1124,3.37,1125,2.867,1126,3.37,1127,2.536,1128,2.867,1129,2.867,1130,3.37,1131,3.37,1132,3.37,1133,4.656,1134,3.37,1135,2.867,1136,4.656,1137,3.37,1138,3.37,1139,5.335,1140,3.37,1141,3.37,1142,3.37,1143,3.37,1144,3.37,1145,3.37,1146,2.867,1147,2.867]],["title/components/MenuDrawerComponent.html",[0,0.418,164,0.927]],["body/components/MenuDrawerComponent.html",[0,0.533,1,0.649,2,1.17,3,0.127,4,0.108,5,0.73,6,0.822,7,0.822,8,0.822,9,0.091,11,0.688,12,2.19,13,0.023,14,2.009,15,0.822,16,0.822,17,0.822,18,1.319,20,1.319,22,0.407,23,0.678,24,1.283,26,1.319,31,1.369,32,0.689,34,0.924,44,0.678,45,0.798,46,0.554,47,0.856,48,1.443,49,0.22,50,1.637,51,0.247,56,2.267,61,0.127,62,0.137,71,1.673,75,2.44,76,3.015,78,1.203,80,2.673,89,2.074,99,1.817,101,3.069,102,2.772,105,2.828,111,1.655,112,1.292,113,1.123,116,1.292,118,2.44,121,2.046,133,1.59,134,2.074,135,2.074,136,0.611,137,1.242,138,1.04,139,0.649,140,1.668,141,0.822,142,0.822,143,0.649,144,1.657,145,0.87,146,1.242,147,0.611,148,0.822,149,0.649,150,0.923,151,0.822,152,0.649,153,0.822,154,0.649,155,0.822,156,0.649,157,0.649,158,0.822,159,1.543,160,1.963,161,0.822,162,0.649,163,0.822,164,1.316,165,0.822,166,0.649,167,0.822,168,0.649,169,0.822,170,0.649,171,1.212,172,0.775,173,0.611,174,0.775,175,0.822,176,0.008,177,0.012,178,0.008,182,1.17,183,1.59,189,1.513,191,1.59,194,0.923,197,1.772,208,1.817,210,0.611,241,1.411,245,1.655,258,2.292,259,0.611,270,3.723,273,4.209,313,1.655,345,3.359,349,1.513,351,3.359,359,2.19,362,1.513,367,2.828,369,1.952,370,1.834,371,1.655,398,1.798,515,1.655,525,1.513,578,1.513,835,2.772,1035,1.655,1036,3.341,1037,2.772,1044,3.808,1045,1.513,1047,3.723,1091,4.523,1100,4.209,1103,3.134,1104,3.134,1110,1.834,1111,1.834,1112,1.834,1113,2.074,1117,3.607,1122,2.074,1125,2.074,1127,1.834,1128,2.074,1129,2.074,1135,2.074,1146,2.074,1147,3.134,1148,2.074,1149,4.439,1150,3.683,1151,4.947,1152,4.439,1153,3.683,1154,2.438,1155,2.438,1156,2.438,1157,2.438,1158,3.683,1159,2.438,1160,2.438,1161,2.438,1162,2.438,1163,2.438,1164,3.683,1165,2.438,1166,2.438,1167,2.438,1168,2.438,1169,2.438,1170,2.074,1171,2.438,1172,2.438,1173,2.438,1174,3.683,1175,2.438,1176,2.438,1177,2.438,1178,2.438,1179,2.438,1180,2.438,1181,4.519,1182,3.683,1183,3.683,1184,2.438,1185,2.438,1186,3.683,1187,2.074,1188,2.074,1189,2.438,1190,2.438,1191,2.438,1192,2.438,1193,2.438]],["title/classes/MenuItem.html",[62,0.13,1026,2.162]],["body/classes/MenuItem.html",[3,0.203,4,0.174,5,1.993,9,0.146,13,0.023,22,0.433,23,0.948,24,1.305,28,5.81,31,0.924,32,0.747,34,0.93,36,1.492,44,1.126,45,0.865,46,0.955,47,0.83,49,0.234,51,0.397,61,0.203,62,0.146,71,1.172,176,0.012,177,0.016,178,0.012,194,1.291,206,4.128,210,0.981,219,1.93,235,1.637,259,1.291,673,1.93,731,2.945,895,5.204,1024,4.584,1026,4.128,1073,5.552,1194,5.744,1195,3.329,1196,6.356,1197,5.151,1198,5.151,1199,3.913,1200,3.913,1201,3.913,1202,3.913,1203,3.913,1204,3.913,1205,5.151,1206,3.913,1207,5.151,1208,3.913,1209,3.913,1210,3.913]],["title/components/MenuItemComponent.html",[0,0.418,166,0.927]],["body/components/MenuItemComponent.html",[0,0.606,1,0.81,2,1.378,3,0.158,4,0.135,5,0.912,6,1.027,7,1.027,8,1.027,9,0.113,11,0.859,12,2.491,13,0.023,14,2.076,15,1.027,16,1.027,17,1.027,18,1.553,20,1.553,22,0.337,23,0.798,24,1.234,26,1.553,32,0.559,34,0.813,36,0.636,44,0.798,45,0.874,46,0.827,47,0.814,48,1.024,49,0.347,50,1.426,51,0.309,55,1.314,56,2.165,60,4.141,61,0.158,62,0.161,75,1.501,76,3.429,78,2.139,87,1.74,99,2.139,101,2.69,105,1.74,108,2.067,111,2.067,112,1.613,113,1.403,121,1.998,136,0.763,137,1.462,138,1.224,139,0.81,140,1.856,141,1.027,142,1.027,143,0.81,144,1.719,145,1.024,146,1.462,147,0.763,148,1.027,149,0.81,150,1.087,151,1.027,152,0.81,153,1.027,154,0.81,155,1.027,156,0.81,157,0.81,158,1.027,159,0.81,160,2.026,161,1.027,162,0.81,163,1.027,164,0.81,165,1.027,166,1.464,167,1.027,168,0.81,169,1.027,170,0.81,171,0.636,172,0.967,173,0.763,174,0.967,175,1.027,176,0.01,177,0.014,178,0.01,182,1.378,183,1.808,197,1.971,210,0.763,240,1.74,241,1.378,259,1.516,264,1.613,348,2.59,349,1.889,350,2.29,351,2.944,352,2.59,353,2.69,356,2.59,359,1.501,363,2.69,364,2.29,365,2.29,372,2.067,373,2.29,375,2.067,376,1.889,398,1.233,452,2.944,453,1.403,484,3.146,486,3.8,487,2.675,510,3.429,525,1.889,528,1.74,529,2.067,530,1.403,536,2.29,553,2.59,572,3.688,1026,4.072,1032,2.59,1033,2.59,1044,3.456,1211,4.549,1212,2.59,1213,5.05,1214,4.335,1215,4.335,1216,3.044,1217,6.046,1218,4.335,1219,3.044,1220,5.503,1221,3.044,1222,3.044,1223,2.29,1224,3.044,1225,3.044,1226,3.044,1227,3.044,1228,5.05,1229,3.044,1230,3.044,1231,3.044,1232,3.044,1233,3.044,1234,3.044,1235,3.044,1236,3.044]],["title/modules/MenuModule.html",[681,1.411,1237,2.366]],["body/modules/MenuModule.html",[3,0.21,4,0.18,9,0.15,13,0.023,49,0.41,51,0.41,61,0.21,62,0.15,136,1.014,157,1.87,159,1.87,160,1.924,162,1.87,164,1.87,166,1.87,168,1.87,176,0.013,177,0.017,178,0.013,185,1.745,681,1.638,683,1.863,686,3.008,691,3.099,692,2.312,693,3.099,844,2.143,845,2.509,849,3.265,850,2.509,851,2.312,853,3.265,854,2.312,1045,2.509,1091,2.746,1092,3.441,1093,2.746,1094,3.441,1118,3.043,1127,3.043,1211,3.043,1223,3.043,1237,4.921,1238,3.441,1239,3.441,1240,3.441,1241,4.044,1242,5.262,1243,4.044,1244,4.044,1245,4.044]],["title/components/MenuTopComponent.html",[0,0.418,168,0.927]],["body/components/MenuTopComponent.html",[0,0.62,1,0.844,2,1.418,3,0.165,4,0.141,5,0.95,6,1.07,7,1.07,8,1.07,9,0.118,11,0.895,12,2.547,13,0.023,14,2.087,15,1.07,16,1.07,17,1.07,18,1.598,20,1.598,22,0.494,23,0.821,24,1.218,26,1.598,31,1.395,32,0.571,34,0.899,44,0.584,45,0.842,46,0.477,47,0.832,48,1.395,49,0.189,50,1.668,51,0.322,56,1.85,61,0.165,62,0.118,71,1.547,75,2.765,77,3.797,78,1.564,80,2.38,101,1.968,102,2.386,112,1.68,113,1.461,116,2.736,117,3.358,121,2.823,123,2.386,130,3.358,133,1.369,136,0.795,137,1.505,138,1.26,139,0.844,140,1.89,141,1.07,142,1.07,143,0.844,144,1.73,145,1.054,146,1.505,147,0.795,148,1.07,149,0.844,150,1.119,151,1.07,152,0.844,153,1.07,154,0.844,155,1.07,156,0.844,157,0.844,158,1.07,159,0.844,160,2.024,161,1.07,162,0.844,163,1.07,164,0.844,165,1.07,166,0.844,167,1.07,168,1.491,169,1.07,170,0.844,171,1.315,172,1.008,173,0.795,174,1.008,175,1.07,176,0.01,177,0.014,178,0.01,182,1.418,183,1.85,194,1.119,197,2.007,208,2.202,245,2.153,258,2.229,259,0.795,345,3.806,349,1.968,350,2.386,359,1.564,360,1.461,369,1.68,371,2.153,372,2.153,398,2.091,578,1.968,1035,2.153,1037,3.358,1044,3.735,1093,4.436,1112,3.358,1117,3.507,1170,2.698,1181,2.698,1187,2.698,1246,2.698,1247,5.164,1248,4.463,1249,5.164,1250,3.171,1251,4.463,1252,3.171,1253,3.171,1254,3.171,1255,3.171,1256,3.171,1257,3.171,1258,3.171,1259,3.171,1260,4.463,1261,3.171,1262,4.463,1263,4.463,1264,4.463,1265,3.171]],["title/components/NumberInputComponent.html",[0,0.418,170,0.927]],["body/components/NumberInputComponent.html",[0,0.554,1,0.692,2,1.228,3,0.135,4,0.116,5,0.779,6,0.877,7,0.877,8,0.877,9,0.097,11,0.734,13,0.023,14,2.029,15,0.877,16,0.877,17,0.877,18,1.384,20,1.384,22,0.288,23,0.711,24,1.292,26,1.384,31,1.437,32,0.711,33,1.955,34,0.919,36,1.453,44,1.12,45,0.965,46,0.951,47,1.002,48,1.552,49,0.231,50,1.615,51,0.264,56,0.931,61,0.135,62,0.097,71,0.779,136,0.652,137,1.304,138,1.091,139,0.692,140,1.723,141,0.877,142,0.877,143,0.692,144,1.676,145,0.913,146,1.304,147,0.652,148,0.877,149,0.692,150,0.969,151,0.877,152,0.692,153,0.877,154,0.692,155,0.877,156,0.692,157,0.692,158,0.877,159,0.692,160,1.635,161,0.877,162,0.692,163,0.877,164,0.692,165,0.877,166,0.692,167,0.877,168,0.692,169,0.877,170,1.523,171,1.272,172,0.826,173,0.652,174,0.826,175,0.877,176,0.008,177,0.012,178,0.008,181,1.766,182,1.228,183,1.652,184,3.472,185,1.668,186,2.625,187,3.472,188,2.909,189,2.863,190,2.21,191,1.668,193,3.289,194,0.969,195,3.925,197,1.83,198,2.909,199,2.909,200,2.863,201,3.289,202,2.909,203,2.909,204,2.909,205,2.909,206,2.863,207,3.472,213,2.212,215,1.956,216,2.212,217,2.212,218,2.909,221,2.909,223,3.289,225,2.909,227,3.844,228,2.909,230,1.956,232,2.909,233,3.289,235,1.228,236,3.925,237,2.212,239,1.486,249,2.212,250,2.212,251,1.956,252,1.956,253,2.212,254,2.212,255,2.212,256,2.212,257,2.212,258,1.122,259,0.969,398,2.317,862,4.991,1266,5.643,1267,4.614,1268,4.614,1269,3.865,1270,3.865,1271,2.6,1272,2.6,1273,2.6,1274,2.6,1275,2.6,1276,2.6,1277,2.6,1278,2.6,1279,5.109,1280,2.6,1281,2.6,1282,2.6]],["title/interfaces/TableColumnConfigInterface.html",[427,1.846,749,1.248]],["body/interfaces/TableColumnConfigInterface.html",[3,0.166,4,0.142,9,0.119,13,0.024,22,0.354,31,1.06,32,0.78,33,2.259,36,1.468,45,0.674,46,1.086,49,0.268,51,0.324,55,1.379,61,0.166,80,2.39,99,2.558,118,3.03,138,1.267,150,0.801,171,0.938,176,0.01,177,0.014,178,0.01,190,2.965,194,1.125,206,3.489,209,3.377,351,4.171,353,3.676,367,3.511,416,2.39,422,1.827,425,4.413,427,1.694,443,1.827,453,2.967,456,3.818,540,3.903,583,3.818,584,2.405,590,2.98,599,3.218,673,1.577,675,3.818,868,1.694,1024,3.819,1117,3.819,1283,1.983,1284,1.983,1285,5.186,1286,5.624,1287,5.624,1288,5.624,1289,4.785,1290,6.143,1291,5.624,1292,5.624,1293,4.413,1294,5.624,1295,4.488,1296,4.488,1297,4.488,1298,3.196,1299,2.719,1300,3.196,1301,4.488,1302,4.488,1303,4.488,1304,4.488,1305,4.488,1306,3.818,1307,2.719,1308,4.747,1309,4.488,1310,4.488,1311,4.488,1312,3.196,1313,3.196,1314,2.405,1315,3.196,1316,3.196]],["title/interfaces/TableConfigInterface.html",[489,2.162,749,1.248]],["body/interfaces/TableConfigInterface.html",[3,0.209,4,0.179,9,0.15,13,0.023,22,0.445,32,0.777,33,2.459,36,1.292,46,1.089,48,1.238,49,0.24,61,0.209,99,2.879,150,1.009,171,1.458,176,0.013,177,0.017,178,0.013,190,3.336,194,1.315,416,1.854,422,2.998,423,3.562,427,3.276,443,2.3,453,3.03,475,5.261,489,3.254,540,4.391,584,4.948,617,5.261,718,2.733,749,1.441,868,2.132,1283,2.497,1284,2.497,1289,3.423,1317,6.184,1318,6.184,1319,6.184,1320,6.184,1321,6.184,1322,6.184,1323,6.184,1324,6.184,1325,6.184,1326,4.024]],["title/interfaces/TableFilterConfigInterface.html",[599,2.162,749,1.248]],["body/interfaces/TableFilterConfigInterface.html",[3,0.215,4,0.184,5,1.984,9,0.154,13,0.024,22,0.457,32,0.78,33,2.372,36,1.442,46,1.046,49,0.319,50,1.507,51,0.42,61,0.215,133,2.696,138,1.507,171,1.235,176,0.013,177,0.017,178,0.013,194,1.338,209,4.016,264,3.427,274,4.541,360,2.879,590,3.132,599,3.312,630,5.029,631,5.029,743,2.807,749,1.48,868,2.19,1024,4.242,1283,2.565,1284,2.565,1306,4.541,1307,5.315,1327,6.247,1328,6.247,1329,6.247,1330,5.338,1331,4.541]],["title/classes/TableMaker.html",[62,0.13,1332,2.622]],["body/classes/TableMaker.html",[3,0.103,4,0.088,9,0.073,13,0.024,14,0.936,22,0.429,23,0.575,24,0.575,31,1.268,32,0.685,34,0.887,36,1.401,44,0.714,45,0.583,46,0.583,47,0.776,48,1.315,49,0.187,50,0.882,56,1.119,58,1.787,61,0.103,62,0.073,71,1.163,133,0.851,138,0.557,150,0.494,171,1.227,176,0.006,177,0.01,178,0.006,191,0.851,194,0.784,210,0.494,219,2.898,235,0.627,241,2.097,259,1.552,313,2.636,322,1.678,360,0.909,363,1.223,376,1.223,398,2.866,416,0.909,420,2.352,422,1.787,423,1.339,427,2.845,442,2.122,443,1.787,452,3,453,1.44,467,2.921,468,2.921,479,1.339,489,2.741,496,4.097,565,2.908,622,2.659,632,1.484,647,1.939,673,0.973,713,3.324,717,1.339,762,2.921,770,1.484,1293,3.303,1299,1.678,1308,1.484,1314,1.484,1332,2.352,1333,5.447,1334,1.678,1335,3.882,1336,3.882,1337,3.882,1338,4.816,1339,3.882,1340,4.418,1341,4.418,1342,4.418,1343,3.125,1344,3.125,1345,3.882,1346,1.972,1347,1.972,1348,1.972,1349,4.418,1350,5.124,1351,1.972,1352,1.972,1353,5.124,1354,1.972,1355,1.972,1356,1.972,1357,3.125,1358,3.125,1359,3.125,1360,3.125,1361,1.972,1362,3.125,1363,1.972,1364,1.972,1365,1.972,1366,1.972,1367,3.125,1368,5.124,1369,1.972,1370,3.125,1371,1.972,1372,3.125,1373,1.972,1374,1.972,1375,1.972,1376,1.972,1377,1.972,1378,1.972,1379,1.972,1380,1.972,1381,3.125,1382,1.972,1383,1.972,1384,1.972,1385,3.882,1386,1.972,1387,3.125,1388,1.972,1389,1.972,1390,1.972,1391,1.972,1392,1.972,1393,1.972,1394,1.972,1395,1.972,1396,1.972,1397,1.972,1398,1.972,1399,1.972,1400,3.125,1401,1.972,1402,1.972,1403,1.972,1404,4.418,1405,5.369,1406,4.418,1407,3.882,1408,3.125,1409,3.125,1410,1.972,1411,1.972,1412,1.972,1413,1.972,1414,3.882,1415,3.125,1416,5.569,1417,3.125,1418,1.972,1419,1.972,1420,3.125,1421,3.125,1422,3.125,1423,3.882,1424,3.882,1425,3.125,1426,1.972,1427,1.972,1428,1.972,1429,1.972,1430,1.972,1431,1.972,1432,3.125,1433,1.972,1434,3.125,1435,1.972,1436,1.972,1437,1.972,1438,5.124,1439,1.972,1440,4.418,1441,1.972,1442,1.972,1443,1.972,1444,1.972,1445,1.972,1446,1.972,1447,4.418,1448,3.125,1449,1.972,1450,1.678,1451,1.972,1452,1.972,1453,1.972,1454,1.972,1455,1.972,1456,1.972,1457,1.972,1458,1.972,1459,1.972,1460,1.972,1461,3.125,1462,1.972,1463,1.972,1464,1.972,1465,1.972,1466,1.972,1467,1.972,1468,1.972,1469,3.125,1470,1.972,1471,1.972]],["title/modules/TableMakerModule.html",[681,1.411,1472,2.366]],["body/modules/TableMakerModule.html",[3,0.227,4,0.194,9,0.162,13,0.023,49,0.401,51,0.443,61,0.227,62,0.162,136,1.094,149,1.89,150,1.598,152,1.89,154,1.89,176,0.014,177,0.018,178,0.014,185,1.883,239,2.495,412,3.284,458,3.284,531,2.964,532,3.713,681,1.767,683,2.011,686,3.159,691,3.213,692,2.495,693,3.213,844,2.312,845,2.708,849,3.429,850,2.708,851,2.495,853,3.429,854,2.495,855,4.702,858,5.159,1472,4.844,1473,3.713,1474,3.713,1475,3.713,1476,4.364,1477,4.364,1478,4.364,1479,4.364]],["title/injectables/TableService.html",[614,1.846,1480,2.622]],["body/injectables/TableService.html",[3,0.278,4,0.238,9,0.199,13,0.023,24,1.151,34,0.748,49,0.319,51,0.543,61,0.278,62,0.199,176,0.017,177,0.02,178,0.017,210,1.662,614,3.313,615,3.63,866,4.548,867,4.548,1480,4.705,1481,4.548,1482,5.346]],["title/coverage.html",[1483,4.053]],["body/coverage.html",[0,0.822,1,0.836,9,0.208,10,2.674,13,0.023,32,0.348,56,2.604,62,0.227,139,0.836,143,0.836,145,1.047,147,0.788,149,0.836,150,1.476,152,0.836,154,0.836,156,0.836,157,0.836,159,0.836,162,0.836,164,0.836,166,0.836,168,0.836,170,0.836,173,0.788,176,0.01,177,0.014,178,0.01,179,3.49,180,2.365,181,3.49,235,0.999,262,3.011,263,2.674,264,1.665,381,2.674,411,3.365,412,2.365,413,2.674,416,1.448,427,1.665,458,2.365,459,2.674,463,1.95,484,1.796,489,1.95,528,1.796,531,2.134,589,2.674,590,1.665,599,1.95,614,2.723,616,3.337,625,2.134,639,2.365,674,2.674,689,3.191,694,1.95,695,3.097,696,3.337,697,3.337,707,1.796,711,1.95,747,2.187,749,2.188,766,2.35,795,1.95,797,3.463,798,3.867,805,2.365,815,2.365,839,3.011,862,2.365,863,2.365,864,2.674,869,3.337,881,2.134,883,2.365,884,2.674,885,2.674,886,2.674,927,1.95,928,2.674,939,2.365,940,2.674,999,3.337,1000,3.337,1018,2.674,1026,1.95,1044,3.365,1045,1.95,1046,2.674,1091,2.134,1093,2.134,1118,2.365,1119,2.674,1148,2.674,1194,2.674,1195,2.674,1211,2.365,1212,2.674,1246,2.674,1266,2.674,1283,3.188,1284,3.188,1332,2.365,1333,2.674,1334,2.674,1480,2.365,1481,2.674,1483,2.674,1484,3.142,1485,3.142,1486,3.142,1487,5.139,1488,6.8,1489,6.89,1490,3.142,1491,3.142,1492,5.139,1493,3.142,1494,3.142,1495,3.142,1496,3.142,1497,3.142,1498,3.142,1499,3.773,1500,4.749,1501,4.749,1502,3.142,1503,5.139,1504,3.142,1505,4.435,1506,3.142,1507,4.435,1508,3.773,1509,4.435,1510,4.435,1511,3.773,1512,3.142,1513,3.142,1514,3.142,1515,3.142,1516,3.142,1517,3.142,1518,3.142,1519,3.142,1520,3.773,1521,3.142]],["title/dependencies.html",[844,2.221,1522,2.905]],["body/dependencies.html",[13,0.023,51,0.503,72,4.214,145,1.169,176,0.016,177,0.019,178,0.016,239,2.831,529,3.363,530,2.282,743,3.363,840,4.214,844,2.624,854,2.831,934,4.497,935,4.497,1223,3.727,1523,4.953,1524,7.071,1525,4.953,1526,4.214,1527,4.953,1528,4.953,1529,4.953,1530,4.953,1531,4.953,1532,4.953,1533,5.976,1534,4.953,1535,4.953,1536,4.953,1537,4.953,1538,4.953,1539,4.953,1540,4.953,1541,4.953,1542,4.953,1543,4.953,1544,4.953,1545,4.953]],["title/miscellaneous/enumerations.html",[1546,1.973,1547,3.567]],["body/miscellaneous/enumerations.html",[13,0.02,22,0.594,133,2.317,176,0.017,177,0.02,178,0.017,360,2.474,416,2.889,695,2.649,736,3.07,747,2.649,879,4.041,1283,3.332,1284,3.89,1308,4.718,1314,4.041,1450,4.568,1546,3.646,1547,4.568,1548,5.37,1549,6.269,1550,4.568,1551,6.269,1552,6.269,1553,5.37]],["title/index.html",[22,0.321,1554,2.905,1555,2.905]],["body/index.html",[0,0.744,4,0.204,13,0.018,45,0.688,160,1.706,176,0.015,177,0.018,178,0.015,235,1.455,422,2.617,620,3.895,737,3.867,837,4.845,851,2.617,888,3.895,889,3.895,893,4.664,905,3.895,955,3.895,1331,3.895,1526,4.845,1556,4.579,1557,5.695,1558,4.579,1559,6.199,1560,6.199,1561,4.579,1562,4.579,1563,4.579,1564,6.671,1565,6.896,1566,4.579,1567,4.579,1568,4.579,1569,4.579,1570,4.579,1571,4.579,1572,4.579,1573,4.579,1574,4.579,1575,4.579,1576,6.199,1577,4.579,1578,6.671,1579,4.579,1580,4.579,1581,4.579,1582,4.579,1583,4.579,1584,4.579,1585,4.579,1586,5.695,1587,6.486,1588,4.579,1589,5.695,1590,5.695,1591,4.579,1592,6.486,1593,4.579,1594,4.579,1595,4.579,1596,6.199,1597,4.579,1598,4.579,1599,4.579,1600,4.579,1601,4.579,1602,4.579,1603,4.579]],["title/modules.html",[683,2.195]],["body/modules.html",[13,0.02,176,0.017,177,0.02,178,0.017,682,4.023,683,2.463,687,3.317,843,3.63,935,5.142,988,4.023,1237,3.63,1472,3.63,1604,6.253,1605,6.253,1606,7.051,1607,6.833,1608,6.833]],["title/overview.html",[1609,4.053]],["body/overview.html",[1,1.737,2,1.152,13,0.023,55,1.565,136,0.909,139,0.965,143,1.737,147,1.636,149,1.737,152,1.737,154,1.737,156,1.737,157,1.737,159,1.737,162,1.737,164,1.737,166,1.737,168,1.737,170,1.737,173,1.389,176,0.012,177,0.016,178,0.012,185,1.565,372,2.463,615,2.463,673,1.789,681,1.469,683,1.671,687,4.118,691,1.922,693,1.922,795,4.05,796,2.729,835,2.729,843,4.84,844,1.922,845,2.25,846,3.085,847,3.085,848,3.085,849,3.038,850,2.25,851,2.073,868,1.922,927,4.05,982,3.085,983,3.085,984,3.085,1188,3.085,1237,4.853,1238,3.085,1239,3.085,1240,3.085,1472,4.658,1473,3.085,1474,3.085,1475,3.085,1609,3.085,1610,5.542]],["title/miscellaneous/variables.html",[1546,1.973,1611,3.567]],["body/miscellaneous/variables.html",[9,0.223,13,0.023,22,0.473,31,1.639,32,0.751,55,1.844,71,2.079,171,0.892,176,0.014,177,0.017,178,0.014,191,2.729,235,1.732,411,2.442,528,3.116,616,4.102,639,4.102,689,2.442,695,2.689,747,2.107,797,2.651,798,4.518,805,4.102,806,3.635,807,3.635,808,3.635,809,3.635,810,3.635,811,3.635,812,3.635,813,3.635,814,3.635,815,4.102,816,3.635,817,3.635,818,3.635,819,3.635,820,3.635,821,3.635,822,3.635,823,3.635,869,4.102,881,3.702,882,3.635,999,3.215,1000,4.102,1017,3.635,1499,3.635,1500,5.849,1501,5.849,1508,3.635,1511,3.635,1520,3.635,1546,2.901,1550,5.381,1611,3.635,1612,6.875,1613,4.272,1614,6.325,1615,6.325]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"modules/G43CommonModule.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"injectables/G43InputService.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"modules/TableMakerModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":56,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"pipes/G43FileSizePipe.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{},"coverage.html":{}}}],["0.0.2",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["0.0.3",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["0.0.7",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["0.0.8",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["0.10.1",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["0.2.8",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":1111,"title":{},"body":{"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["0.5",{"_index":1115,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["0/1",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1502,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1519,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1504,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":55,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"injectables/CoreTableService.html":{},"pipes/G43FileSizePipe.html":{},"classes/G43RestApiHandler.html":{},"components/MenuContainerComponent.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1)[0",{"_index":922,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["1.10.0",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["1.28571429em",{"_index":74,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1/4",{"_index":1498,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":915,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["100",{"_index":359,"title":{},"body":{"components/CoreSelectComponent.html":{},"pipes/G43FileSizePipe.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{}}}],["1000",{"_index":1180,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["100px",{"_index":361,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["100vh",{"_index":1113,"title":{},"body":{"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["100vw",{"_index":1112,"title":{},"body":{"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["10px",{"_index":1185,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["11.0.1",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1191,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["14",{"_index":1188,"title":{},"body":{"components/MenuDrawerComponent.html":{},"overview.html":{}}}],["140",{"_index":1031,"title":{},"body":{"components/MenuComponent.html":{}}}],["14px",{"_index":88,"title":{},"body":{"components/ButtonComponent.html":{}}}],["15",{"_index":77,"title":{},"body":{"components/ButtonComponent.html":{},"components/MenuTopComponent.html":{}}}],["150px",{"_index":368,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["16",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["160",{"_index":1164,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["16px",{"_index":135,"title":{},"body":{"components/ButtonComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["1em",{"_index":365,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuItemComponent.html":{}}}],["1px",{"_index":130,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/MenuTopComponent.html":{}}}],["2",{"_index":835,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"components/MenuDrawerComponent.html":{},"overview.html":{}}}],["200",{"_index":634,"title":{},"body":{"injectables/CoreTableService.html":{},"classes/G43RestApiHandler.html":{}}}],["20px",{"_index":585,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuComponent.html":{}}}],["23",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":89,"title":{},"body":{"components/ButtonComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["25",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":81,"title":{},"body":{"components/ButtonComponent.html":{}}}],["2px",{"_index":1187,"title":{},"body":{"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["3",{"_index":372,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"overview.html":{}}}],["3.2.0",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["3/13",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":1190,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["33",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":1263,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["38",{"_index":1264,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["3px",{"_index":575,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuComponent.html":{}}}],["4.0.0",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["4/7",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1235,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["401",{"_index":788,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["40px",{"_index":1034,"title":{},"body":{"components/MenuComponent.html":{}}}],["44",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":613,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["50",{"_index":117,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuTopComponent.html":{}}}],["504",{"_index":792,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["57",{"_index":1517,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":1186,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["6",{"_index":1610,"title":{},"body":{"overview.html":{}}}],["6.5.2",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["64285714em",{"_index":120,"title":{},"body":{"components/ButtonComponent.html":{}}}],["6px",{"_index":1189,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["6s",{"_index":83,"title":{},"body":{"components/ButtonComponent.html":{}}}],["7.3.0",{"_index":1562,"title":{},"body":{"index.html":{}}}],["765px",{"_index":70,"title":{},"body":{"components/ButtonComponent.html":{}}}],["8.2.1",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["8/18",{"_index":1515,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1232,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["8px",{"_index":134,"title":{},"body":{"components/ButtonComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["9",{"_index":911,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["9,.]*$/.test(value",{"_index":1282,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["95",{"_index":1236,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["9][0",{"_index":910,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["a[g43",{"_index":17,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["absolute",{"_index":114,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{}}}],["abstract",{"_index":759,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["acc",{"_index":1448,"title":{},"body":{"classes/TableMaker.html":{}}}],["accessors",{"_index":208,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["actconfig.customfooter",{"_index":1390,"title":{},"body":{"classes/TableMaker.html":{}}}],["actconfig.footer",{"_index":1389,"title":{},"body":{"classes/TableMaker.html":{}}}],["action",{"_index":1196,"title":{},"body":{"classes/MenuItem.html":{}}}],["active",{"_index":100,"title":{},"body":{"components/ButtonComponent.html":{}}}],["active:focus",{"_index":97,"title":{},"body":{"components/ButtonComponent.html":{}}}],["actual_component",{"_index":175,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["add",{"_index":905,"title":{},"body":{"classes/G43RestApiHandler.html":{},"index.html":{}}}],["aliceblue",{"_index":1037,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["align",{"_index":351,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumnConfigInterface.html":{}}}],["alignment",{"_index":1296,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["allow",{"_index":889,"title":{},"body":{"classes/G43RestApiHandler.html":{},"index.html":{}}}],["angular",{"_index":1559,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":854,"title":{},"body":{"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":742,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["angular/common/http/testing",{"_index":992,"title":{},"body":{"modules/G43TestingModule.html":{}}}],["angular/compiler",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":51,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"modules/G43CommonModule.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"injectables/G43InputService.html":{},"interfaces/G43Notification.html":{},"pipes/G43SafePipe.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"modules/TableMakerModule.html":{},"injectables/TableService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":239,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"modules/G43InputModule.html":{},"components/NumberInputComponent.html":{},"modules/TableMakerModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":934,"title":{},"body":{"pipes/G43SafePipe.html":{},"modules/G43TestingModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1223,"title":{},"body":{"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"dependencies.html":{}}}],["angular/router/testing",{"_index":996,"title":{},"body":{"modules/G43TestingModule.html":{}}}],["animation",{"_index":124,"title":{},"body":{"components/ButtonComponent.html":{}}}],["api.handler.ts",{"_index":886,"title":{},"body":{"classes/G43RestApiHandler.html":{},"coverage.html":{}}}],["api.handler.ts:11",{"_index":896,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["api.handler.ts:17",{"_index":899,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["app",{"_index":1570,"title":{},"body":{"index.html":{}}}],["arguments",{"_index":285,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["array.isarray(this.values",{"_index":335,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["arraybuffer",{"_index":754,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["arrowdown",{"_index":326,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["arrowup",{"_index":327,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["artifacts",{"_index":1579,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1350,"title":{},"body":{"classes/TableMaker.html":{}}}],["async",{"_index":572,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuItemComponent.html":{}}}],["attr.disabled",{"_index":57,"title":{},"body":{"components/ButtonComponent.html":{}}}],["attr.margin",{"_index":1142,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["attribute",{"_index":675,"title":{},"body":{"classes/FilterModel.html":{},"interfaces/TableColumnConfigInterface.html":{}}}],["auto",{"_index":362,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["automatically",{"_index":1571,"title":{},"body":{"index.html":{}}}],["available",{"_index":1605,"title":{},"body":{"modules.html":{}}}],["avg",{"_index":1450,"title":{},"body":{"classes/TableMaker.html":{},"miscellaneous/enumerations.html":{}}}],["azure",{"_index":1041,"title":{},"body":{"components/MenuComponent.html":{}}}],["b",{"_index":806,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["backdrop",{"_index":1053,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["backdropleft",{"_index":1056,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["background",{"_index":75,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{}}}],["backgrounded",{"_index":94,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{}}}],["basic",{"_index":260,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["before",{"_index":110,"title":{},"body":{"components/ButtonComponent.html":{}}}],["behaviorsubject",{"_index":641,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["beige",{"_index":366,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["between",{"_index":357,"title":{},"body":{"components/CoreSelectComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{}}}],["bisque",{"_index":1042,"title":{},"body":{"components/MenuComponent.html":{}}}],["black",{"_index":577,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["blob",{"_index":755,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["block",{"_index":1147,"title":{},"body":{"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["body",{"_index":750,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["boolean",{"_index":33,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{},"interfaces/G43Translation.html":{},"components/MenuContainerComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{}}}],["bootstrap",{"_index":845,"title":{},"body":{"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{},"overview.html":{}}}],["border",{"_index":112,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{}}}],["bordered",{"_index":93,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{}}}],["bottom",{"_index":1265,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["box",{"_index":101,"title":{},"body":{"components/ButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{}}}],["breakpoint",{"_index":68,"title":{},"body":{"components/ButtonComponent.html":{}}}],["browse",{"_index":1606,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":935,"title":{},"body":{"pipes/G43SafePipe.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":994,"title":{},"body":{"modules/G43TestingModule.html":{}}}],["build",{"_index":1578,"title":{},"body":{"index.html":{}}}],["button",{"_index":16,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["button.component.html",{"_index":21,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":19,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button[g43",{"_index":15,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["button]'},{'name",{"_index":142,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["buttoncomponent",{"_index":1,"title":{"components/ButtonComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bytes",{"_index":816,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["calc(100",{"_index":1141,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["case",{"_index":450,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{}}}],["catcherror",{"_index":745,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["catcherror((error",{"_index":768,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["cell",{"_index":1303,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["cellclass",{"_index":1285,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["cellindex",{"_index":1456,"title":{},"body":{"classes/TableMaker.html":{}}}],["center",{"_index":353,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/MenuComponent.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumnConfigInterface.html":{}}}],["centered",{"_index":86,"title":{},"body":{"components/ButtonComponent.html":{}}}],["change",{"_index":1573,"title":{},"body":{"index.html":{}}}],["changecheckbox",{"_index":470,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["changecheckbox(row",{"_index":491,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["changedetection",{"_index":414,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableFilterComponent.html":{}}}],["changedetectionstrategy",{"_index":441,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableFilterComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":415,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableFilterComponent.html":{}}}],["check",{"_index":620,"title":{},"body":{"injectables/CoreTableService.html":{},"index.html":{}}}],["check(filter",{"_index":624,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["checkbetween",{"_index":662,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["checkbetween(filter.value.min",{"_index":671,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["checkboxes",{"_index":466,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["checkboxinput",{"_index":492,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["checkboxinput.checked",{"_index":566,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["checkclick",{"_index":25,"title":{},"body":{"components/ButtonComponent.html":{}}}],["checkclick($event",{"_index":41,"title":{},"body":{"components/ButtonComponent.html":{}}}],["child",{"_index":587,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["class",{"_index":62,"title":{"classes/FilterModel.html":{},"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"classes/MenuItem.html":{},"classes/TableMaker.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"modules/G43CommonModule.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"injectables/G43InputService.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{},"modules/TableMakerModule.html":{},"injectables/TableService.html":{},"coverage.html":{}}}],["class.disabled",{"_index":59,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{}}}],["class.focused",{"_index":384,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["class.inline",{"_index":53,"title":{},"body":{"components/ButtonComponent.html":{}}}],["class.loading",{"_index":52,"title":{},"body":{"components/ButtonComponent.html":{}}}],["class.visible",{"_index":1172,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["classes",{"_index":673,"title":{},"body":{"classes/FilterModel.html":{},"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"classes/MenuItem.html":{},"interfaces/TableColumnConfigInterface.html":{},"classes/TableMaker.html":{},"overview.html":{}}}],["classic",{"_index":1100,"title":{},"body":{"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["cli",{"_index":1560,"title":{},"body":{"index.html":{}}}],["click",{"_index":60,"title":{},"body":{"components/ButtonComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/MenuItemComponent.html":{}}}],["close",{"_index":345,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["close(param",{"_index":1064,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["cluster_g43inputmodule",{"_index":846,"title":{},"body":{"modules/G43InputModule.html":{},"overview.html":{}}}],["cluster_g43inputmodule_declarations",{"_index":847,"title":{},"body":{"modules/G43InputModule.html":{},"overview.html":{}}}],["cluster_g43inputmodule_exports",{"_index":848,"title":{},"body":{"modules/G43InputModule.html":{},"overview.html":{}}}],["cluster_g43sharedpipesmodule",{"_index":982,"title":{},"body":{"modules/G43SharedPipesModule.html":{},"overview.html":{}}}],["cluster_g43sharedpipesmodule_declarations",{"_index":983,"title":{},"body":{"modules/G43SharedPipesModule.html":{},"overview.html":{}}}],["cluster_g43sharedpipesmodule_exports",{"_index":984,"title":{},"body":{"modules/G43SharedPipesModule.html":{},"overview.html":{}}}],["cluster_menumodule",{"_index":1238,"title":{},"body":{"modules/MenuModule.html":{},"overview.html":{}}}],["cluster_menumodule_declarations",{"_index":1239,"title":{},"body":{"modules/MenuModule.html":{},"overview.html":{}}}],["cluster_menumodule_exports",{"_index":1240,"title":{},"body":{"modules/MenuModule.html":{},"overview.html":{}}}],["cluster_tablemakermodule",{"_index":1473,"title":{},"body":{"modules/TableMakerModule.html":{},"overview.html":{}}}],["cluster_tablemakermodule_declarations",{"_index":1474,"title":{},"body":{"modules/TableMakerModule.html":{},"overview.html":{}}}],["cluster_tablemakermodule_exports",{"_index":1475,"title":{},"body":{"modules/TableMakerModule.html":{},"overview.html":{}}}],["code",{"_index":1574,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":580,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["color",{"_index":78,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{}}}],["column",{"_index":416,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"classes/TableMaker.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["column'},{'name",{"_index":151,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["column.columndef",{"_index":1415,"title":{},"body":{"classes/TableMaker.html":{}}}],["column.component",{"_index":1478,"title":{},"body":{"modules/TableMakerModule.html":{}}}],["column.component.html",{"_index":418,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["column.component.scss",{"_index":417,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["column.component.ts",{"_index":413,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"coverage.html":{}}}],["column.component.ts:11",{"_index":428,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["column.component.ts:12",{"_index":431,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["column.component.ts:13",{"_index":429,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["column.component.ts:14",{"_index":430,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["column.component.ts:15",{"_index":426,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["column.component.ts:20",{"_index":434,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["column.component.ts:35",{"_index":436,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["column.component.ts:50",{"_index":438,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["column.component.ts:61",{"_index":440,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["column.component.ts:72",{"_index":432,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["column.customfooter",{"_index":1437,"title":{},"body":{"classes/TableMaker.html":{}}}],["column.customfooter(this.realdata.entries",{"_index":1439,"title":{},"body":{"classes/TableMaker.html":{}}}],["column.filter",{"_index":1419,"title":{},"body":{"classes/TableMaker.html":{}}}],["column.filter.type",{"_index":1420,"title":{},"body":{"classes/TableMaker.html":{}}}],["column.footer",{"_index":1440,"title":{},"body":{"classes/TableMaker.html":{}}}],["column.label",{"_index":1409,"title":{},"body":{"classes/TableMaker.html":{}}}],["column.sort",{"_index":1411,"title":{},"body":{"classes/TableMaker.html":{}}}],["column.visible",{"_index":558,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["column/core",{"_index":412,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"modules/TableMakerModule.html":{},"coverage.html":{}}}],["columnconfig",{"_index":419,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{}}}],["columnconfig.format",{"_index":457,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["columnconfig.labelkey",{"_index":552,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["columnconfig.width",{"_index":537,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["columndef",{"_index":1286,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["columnindex",{"_index":420,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"classes/TableMaker.html":{}}}],["columns",{"_index":1317,"title":{},"body":{"interfaces/TableConfigInterface.html":{}}}],["columntitle",{"_index":1458,"title":{},"body":{"classes/TableMaker.html":{}}}],["common.module.ts",{"_index":685,"title":{},"body":{"modules/G43CommonModule.html":{}}}],["commonmodule",{"_index":853,"title":{},"body":{"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{}}}],["component",{"_index":0,"title":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":141,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"overview.html":{}}}],["components/button/button.component",{"_index":857,"title":{},"body":{"modules/G43InputModule.html":{}}}],["components/core",{"_index":858,"title":{},"body":{"modules/G43InputModule.html":{},"modules/TableMakerModule.html":{}}}],["components/number",{"_index":861,"title":{},"body":{"modules/G43InputModule.html":{}}}],["config",{"_index":496,"title":{},"body":{"components/CoreTableComponent.html":{},"classes/TableMaker.html":{}}}],["config.cellclass",{"_index":561,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["config.cellclass(row",{"_index":562,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["config.columndef",{"_index":1358,"title":{},"body":{"classes/TableMaker.html":{}}}],["config.customvalue",{"_index":1396,"title":{},"body":{"classes/TableMaker.html":{}}}],["config.customvalue(rowdata",{"_index":1397,"title":{},"body":{"classes/TableMaker.html":{}}}],["config.filter",{"_index":1402,"title":{},"body":{"classes/TableMaker.html":{}}}],["config.interface",{"_index":443,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"classes/TableMaker.html":{}}}],["config.interface.ts",{"_index":1284,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["console.log(\"ja",{"_index":648,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["console.log(event.code",{"_index":324,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["const",{"_index":565,"title":{},"body":{"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"classes/TableMaker.html":{}}}],["constructor",{"_index":210,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"components/G43InputComponent.html":{},"injectables/G43InputService.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"components/MenuComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"classes/TableMaker.html":{},"injectables/TableService.html":{}}}],["constructor(@inject(forwardref",{"_index":1146,"title":{},"body":{"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["constructor(@optional",{"_index":535,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuComponent.html":{}}}],["constructor(container",{"_index":1122,"title":{},"body":{"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["constructor(coretableservice",{"_index":597,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["constructor(data",{"_index":894,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["constructor(elementref",{"_index":211,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{}}}],["constructor(http",{"_index":704,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{}}}],["constructor(label",{"_index":1199,"title":{},"body":{"classes/MenuItem.html":{}}}],["constructor(private",{"_index":240,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableFilterComponent.html":{},"pipes/G43SafePipe.html":{},"components/MenuItemComponent.html":{}}}],["constructor(protected",{"_index":760,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["constructor(public",{"_index":1209,"title":{},"body":{"classes/MenuItem.html":{}}}],["constructor(router",{"_index":1216,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["constructor(selector",{"_index":1344,"title":{},"body":{"classes/TableMaker.html":{}}}],["constructor(translationservice",{"_index":483,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuComponent.html":{}}}],["container",{"_index":1047,"title":{},"body":{"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["container'},{'name",{"_index":161,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["container.component",{"_index":1127,"title":{},"body":{"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"modules/MenuModule.html":{}}}],["container.component.html",{"_index":1049,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.scss",{"_index":1048,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts",{"_index":1046,"title":{},"body":{"components/MenuContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:105",{"_index":1065,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:11",{"_index":1062,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:111",{"_index":1068,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:12",{"_index":1061,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:13",{"_index":1070,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:14",{"_index":1074,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:16",{"_index":1071,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:18",{"_index":1076,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:22",{"_index":1078,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:30",{"_index":1080,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:42",{"_index":1082,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:62",{"_index":1084,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:82",{"_index":1086,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:91",{"_index":1088,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:95",{"_index":1066,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.component.ts:99",{"_index":1063,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["container.contentleft",{"_index":1133,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["container.contentmarginright",{"_index":1139,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["container.realfilter",{"_index":1145,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["container.topmenu",{"_index":1130,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["container.topmenu.height",{"_index":1131,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["container.topoffset",{"_index":1171,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["contains",{"_index":719,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["containter/menu",{"_index":1045,"title":{},"body":{"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"modules/MenuModule.html":{},"coverage.html":{}}}],["content",{"_index":115,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/MenuComponent.html":{},"components/MenuContentComponent.html":{}}}],["content'},{'name",{"_index":163,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["content.component",{"_index":1243,"title":{},"body":{"modules/MenuModule.html":{}}}],["content.component.html",{"_index":1121,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["content.component.scss",{"_index":1120,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["content.component.ts",{"_index":1119,"title":{},"body":{"components/MenuContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:19",{"_index":1123,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["content.component.ts:21",{"_index":1126,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["content.component.ts:24",{"_index":1124,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["content/menu",{"_index":1118,"title":{},"body":{"components/MenuContentComponent.html":{},"modules/MenuModule.html":{},"coverage.html":{}}}],["contentalign",{"_index":425,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"interfaces/TableColumnConfigInterface.html":{}}}],["contentchild",{"_index":1089,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["contentchild(menutopcomponent",{"_index":1072,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["contentchildren",{"_index":1090,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["contentchildren(menudrawercomponent",{"_index":1069,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["contentleft",{"_index":1057,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["contentmarginright",{"_index":1058,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["context",{"_index":1500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlvalueaccessor",{"_index":184,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["core",{"_index":145,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"classes/G43CoreService.html":{},"components/G43InputComponent.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["coreinputcomponent",{"_index":143,"title":{"components/CoreInputComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coreselectcomponent",{"_index":147,"title":{"components/CoreSelectComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coreselectoptiondirective",{"_index":173,"title":{"directives/CoreSelectOptionDirective.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coretablecolumncomponent",{"_index":149,"title":{"components/CoreTableColumnComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"modules/TableMakerModule.html":{},"coverage.html":{},"overview.html":{}}}],["coretablecomponent",{"_index":152,"title":{"components/CoreTableComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"modules/TableMakerModule.html":{},"coverage.html":{},"overview.html":{}}}],["coretablefiltercomponent",{"_index":154,"title":{"components/CoreTableFilterComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"modules/TableMakerModule.html":{},"coverage.html":{},"overview.html":{}}}],["coretableservice",{"_index":463,"title":{"injectables/CoreTableService.html":{}},"body":{"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"coverage.html":{}}}],["count",{"_index":127,"title":{},"body":{"components/ButtonComponent.html":{}}}],["counter",{"_index":639,"title":{},"body":{"injectables/CoreTableService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":1483,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1197,"title":{},"body":{"classes/MenuItem.html":{}}}],["create(label",{"_index":1205,"title":{},"body":{"classes/MenuItem.html":{}}}],["createbody",{"_index":1340,"title":{},"body":{"classes/TableMaker.html":{}}}],["createcell",{"_index":1455,"title":{},"body":{"classes/TableMaker.html":{}}}],["createelement(elementname",{"_index":1359,"title":{},"body":{"classes/TableMaker.html":{}}}],["createfilterrow",{"_index":1418,"title":{},"body":{"classes/TableMaker.html":{}}}],["createfirstrow",{"_index":1403,"title":{},"body":{"classes/TableMaker.html":{}}}],["createfooter",{"_index":1341,"title":{},"body":{"classes/TableMaker.html":{}}}],["createfooterrow",{"_index":1431,"title":{},"body":{"classes/TableMaker.html":{}}}],["createfromtemplate",{"_index":1198,"title":{},"body":{"classes/MenuItem.html":{}}}],["createfromtemplate(template",{"_index":1207,"title":{},"body":{"classes/MenuItem.html":{}}}],["createheader",{"_index":1342,"title":{},"body":{"classes/TableMaker.html":{}}}],["createrow",{"_index":1465,"title":{},"body":{"classes/TableMaker.html":{}}}],["createrow(row",{"_index":1470,"title":{},"body":{"classes/TableMaker.html":{}}}],["currentlang",{"_index":1001,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["cursor",{"_index":375,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuItemComponent.html":{}}}],["cursored",{"_index":85,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{}}}],["custom",{"_index":1331,"title":{},"body":{"interfaces/TableFilterConfigInterface.html":{},"index.html":{}}}],["customfooter",{"_index":1287,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["customvalue",{"_index":1288,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["data",{"_index":479,"title":{},"body":{"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43RestApiHandler.html":{},"classes/TableMaker.html":{}}}],["data.filter((item",{"_index":651,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["data.length",{"_index":1452,"title":{},"body":{"classes/TableMaker.html":{}}}],["data.reduce((acc",{"_index":1451,"title":{},"body":{"classes/TableMaker.html":{}}}],["date",{"_index":456,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"interfaces/TableColumnConfigInterface.html":{}}}],["date_range",{"_index":630,"title":{},"body":{"injectables/CoreTableService.html":{},"interfaces/TableFilterConfigInterface.html":{}}}],["datepipe",{"_index":1309,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["debounce",{"_index":644,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["debouncetime",{"_index":617,"title":{},"body":{"injectables/CoreTableService.html":{},"interfaces/TableConfigInterface.html":{}}}],["decimals",{"_index":836,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["declarations",{"_index":691,"title":{},"body":{"modules/G43CommonModule.html":{},"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{},"overview.html":{}}}],["decorators",{"_index":515,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["default",{"_index":71,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{},"pipes/G43FileSizePipe.html":{},"classes/G43Service.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{},"miscellaneous/variables.html":{}}}],["defaultdata",{"_index":1345,"title":{},"body":{"classes/TableMaker.html":{}}}],["defaultdata.some((row",{"_index":1382,"title":{},"body":{"classes/TableMaker.html":{}}}],["defined",{"_index":34,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"injectables/G43InputService.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{},"injectables/TableService.html":{}}}],["defines",{"_index":1298,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["delete",{"_index":698,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{}}}],["delete(undefined",{"_index":710,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{}}}],["delete({url",{"_index":761,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["dependencies",{"_index":844,"title":{"dependencies.html":{}},"body":{"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":1349,"title":{},"body":{"classes/TableMaker.html":{}}}],["description",{"_index":887,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["dev",{"_index":1567,"title":{},"body":{"index.html":{}}}],["development",{"_index":1563,"title":{},"body":{"index.html":{}}}],["directive",{"_index":139,"title":{"directives/CoreSelectOptionDirective.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":172,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1577,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1582,"title":{},"body":{"index.html":{}}}],["disable",{"_index":209,"title":{},"body":{"components/CoreInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{}}}],["disable(value",{"_index":246,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["disabled",{"_index":27,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{}}}],["display",{"_index":349,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{}}}],["displayed",{"_index":1302,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["dist",{"_index":1581,"title":{},"body":{"index.html":{}}}],["document.createelement(elementname",{"_index":1360,"title":{},"body":{"classes/TableMaker.html":{}}}],["document.queryselector(selector",{"_index":1373,"title":{},"body":{"classes/TableMaker.html":{}}}],["document:click",{"_index":276,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["document:click(event",{"_index":286,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["document:keydown.escape",{"_index":277,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuContainerComponent.html":{}}}],["documentation",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["domsanitizer",{"_index":933,"title":{},"body":{"pipes/G43SafePipe.html":{}}}],["drawer",{"_index":1036,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["drawer'},{'name",{"_index":165,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["drawer.component",{"_index":1092,"title":{},"body":{"components/MenuContainerComponent.html":{},"modules/MenuModule.html":{}}}],["drawer.component.html",{"_index":1150,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.scss",{"_index":1149,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts",{"_index":1148,"title":{},"body":{"components/MenuDrawerComponent.html":{},"coverage.html":{}}}],["drawer.component.ts:18",{"_index":1154,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts:19",{"_index":1157,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts:20",{"_index":1155,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts:21",{"_index":1156,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts:22",{"_index":1165,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts:23",{"_index":1153,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts:25",{"_index":1163,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts:28",{"_index":1167,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts:33",{"_index":1158,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts:37",{"_index":1160,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts:43",{"_index":1159,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts:48",{"_index":1161,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer.component.ts:53",{"_index":1162,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["drawer/menu",{"_index":1091,"title":{},"body":{"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"modules/MenuModule.html":{},"coverage.html":{}}}],["drawers",{"_index":1050,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["drawervisible",{"_index":1060,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["dynamic",{"_index":1526,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e",{"_index":762,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{},"classes/TableMaker.html":{}}}],["e.key",{"_index":1426,"title":{},"body":{"classes/TableMaker.html":{}}}],["e.nativeelement.checked",{"_index":564,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["e2e",{"_index":1593,"title":{},"body":{"index.html":{}}}],["eb",{"_index":812,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["editable",{"_index":424,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["editbutton",{"_index":574,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["editbutton:hover",{"_index":576,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["edited",{"_index":421,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["element",{"_index":138,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{}}}],["elementref",{"_index":212,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableComponent.html":{}}}],["elements",{"_index":1300,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["emitevent",{"_index":257,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["employee.id",{"_index":917,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["empty",{"_index":346,"title":{},"body":{"components/CoreSelectComponent.html":{},"modules/G43TestingModule.html":{}}}],["enable",{"_index":1306,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{}}}],["enabled",{"_index":1327,"title":{},"body":{"interfaces/TableFilterConfigInterface.html":{}}}],["encapsulation",{"_index":461,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["end",{"_index":1592,"title":{},"body":{"index.html":{}}}],["enter",{"_index":322,"title":{},"body":{"components/CoreSelectComponent.html":{},"classes/TableMaker.html":{}}}],["enum",{"_index":1313,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["enumerations",{"_index":1547,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eq",{"_index":658,"title":{},"body":{"injectables/CoreTableService.html":{},"classes/FilterModel.html":{}}}],["error",{"_index":736,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43Notification.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43TestingModule.html":{},"miscellaneous/enumerations.html":{}}}],["error(\"coreservice.getheader",{"_index":771,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["error(`cannot",{"_index":1374,"title":{},"body":{"classes/TableMaker.html":{}}}],["error.status",{"_index":787,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["event",{"_index":42,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{}}}],["event.code",{"_index":321,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["event.preventdefault",{"_index":65,"title":{},"body":{"components/ButtonComponent.html":{}}}],["event.stopimmediatepropagation",{"_index":66,"title":{},"body":{"components/ButtonComponent.html":{}}}],["events",{"_index":380,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["exabytes",{"_index":821,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["execute",{"_index":1589,"title":{},"body":{"index.html":{}}}],["exists",{"_index":1002,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["exists(key",{"_index":1004,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["exists?(key",{"_index":1016,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["export",{"_index":61,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"modules/G43CommonModule.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"injectables/G43InputService.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"modules/TableMakerModule.html":{},"injectables/TableService.html":{}}}],["exports",{"_index":693,"title":{},"body":{"modules/G43CommonModule.html":{},"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{},"overview.html":{}}}],["extend",{"_index":84,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{}}}],["extends",{"_index":941,"title":{},"body":{"classes/G43Service.html":{}}}],["false",{"_index":258,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{},"pipes/G43FileSizePipe.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["false).pipe(switchmap((myblob",{"_index":975,"title":{},"body":{"classes/G43Service.html":{}}}],["fd",{"_index":978,"title":{},"body":{"classes/G43Service.html":{}}}],["fd.append(name",{"_index":980,"title":{},"body":{"classes/G43Service.html":{}}}],["fff",{"_index":79,"title":{},"body":{"components/ButtonComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"modules/G43CommonModule.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"injectables/G43InputService.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"modules/TableMakerModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.name",{"_index":953,"title":{},"body":{"classes/G43Service.html":{}}}],["file_size_units",{"_index":805,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file_size_units_long",{"_index":815,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":951,"title":{},"body":{"classes/G43Service.html":{}}}],["files",{"_index":955,"title":{},"body":{"classes/G43Service.html":{},"index.html":{}}}],["filter",{"_index":590,"title":{},"body":{"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"coverage.html":{}}}],["filter'},{'name",{"_index":155,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["filter.component",{"_index":532,"title":{},"body":{"components/CoreTableComponent.html":{},"modules/TableMakerModule.html":{}}}],["filter.component.html",{"_index":592,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["filter.component.scss",{"_index":591,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["filter.component.ts",{"_index":589,"title":{},"body":{"components/CoreTableFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:12",{"_index":600,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["filter.component.ts:13",{"_index":601,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["filter.component.ts:14",{"_index":598,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["filter.component.ts:19",{"_index":602,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["filter.component.ts:23",{"_index":608,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["filter.component.ts:27",{"_index":606,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["filter.component.ts:31",{"_index":604,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["filter.type",{"_index":664,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["filter.value",{"_index":665,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["filter.value.max",{"_index":672,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["filter/core",{"_index":531,"title":{},"body":{"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"modules/TableMakerModule.html":{},"coverage.html":{}}}],["filterconfig",{"_index":596,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["filtering",{"_index":1307,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{}}}],["filtermodel",{"_index":625,"title":{"classes/FilterModel.html":{}},"body":{"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"coverage.html":{}}}],["filters",{"_index":467,"title":{},"body":{"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{},"classes/TableMaker.html":{}}}],["filters.every((filter",{"_index":652,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["filtervalue",{"_index":1461,"title":{},"body":{"classes/TableMaker.html":{}}}],["find",{"_index":1375,"title":{},"body":{"classes/TableMaker.html":{}}}],["first",{"_index":586,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["fixed",{"_index":1035,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["flag",{"_index":1584,"title":{},"body":{"index.html":{}}}],["flex",{"_index":350,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{}}}],["fn",{"_index":227,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["focues",{"_index":403,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["focus",{"_index":96,"title":{},"body":{"components/ButtonComponent.html":{}}}],["focused",{"_index":378,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["focusindex",{"_index":267,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["font",{"_index":1233,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["footer",{"_index":1289,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{}}}],["footertype",{"_index":1308,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{},"classes/TableMaker.html":{},"miscellaneous/enumerations.html":{}}}],["footertype.avg",{"_index":1449,"title":{},"body":{"classes/TableMaker.html":{}}}],["footertype.max",{"_index":1441,"title":{},"body":{"classes/TableMaker.html":{}}}],["footertype.min",{"_index":1443,"title":{},"body":{"classes/TableMaker.html":{}}}],["footertype.sum",{"_index":1445,"title":{},"body":{"classes/TableMaker.html":{}}}],["format",{"_index":1290,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["formattedsize",{"_index":831,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["formatter",{"_index":892,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["formcontrol",{"_index":236,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["formdata",{"_index":979,"title":{},"body":{"classes/G43Service.html":{}}}],["formsmodule",{"_index":855,"title":{},"body":{"modules/G43InputModule.html":{},"modules/TableMakerModule.html":{}}}],["forwardref",{"_index":189,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/NumberInputComponent.html":{}}}],["function",{"_index":453,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"classes/TableMaker.html":{}}}],["further",{"_index":1595,"title":{},"body":{"index.html":{}}}],["g43",{"_index":144,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"classes/G43CoreService.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43SharedPipesModule.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["g43/common",{"_index":529,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuItemComponent.html":{},"dependencies.html":{}}}],["g43/input",{"_index":840,"title":{},"body":{"components/G43InputComponent.html":{},"dependencies.html":{}}}],["g43/menu",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["g43/table",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["g43_notification_token",{"_index":881,"title":{},"body":{"interfaces/G43Notification.html":{},"modules/G43TestingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["g43_translate_token",{"_index":528,"title":{},"body":{"components/CoreTableComponent.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuItemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["g43commonmodule",{"_index":682,"title":{"modules/G43CommonModule.html":{}},"body":{"modules/G43CommonModule.html":{},"modules.html":{}}}],["g43coreselectoption",{"_index":174,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["g43coreservice",{"_index":694,"title":{"classes/G43CoreService.html":{}},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"coverage.html":{}}}],["g43coreservice:23",{"_index":962,"title":{},"body":{"classes/G43Service.html":{}}}],["g43coreservice:37",{"_index":964,"title":{},"body":{"classes/G43Service.html":{}}}],["g43coreservice:45",{"_index":965,"title":{},"body":{"classes/G43Service.html":{}}}],["g43coreservice:60",{"_index":967,"title":{},"body":{"classes/G43Service.html":{}}}],["g43coreservice:71",{"_index":968,"title":{},"body":{"classes/G43Service.html":{}}}],["g43coreservice:80",{"_index":963,"title":{},"body":{"classes/G43Service.html":{}}}],["g43coreservice:95",{"_index":966,"title":{},"body":{"classes/G43Service.html":{}}}],["g43filesize",{"_index":799,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["g43filesizepipe",{"_index":795,"title":{"pipes/G43FileSizePipe.html":{}},"body":{"pipes/G43FileSizePipe.html":{},"modules/G43SharedPipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["g43inputcomponent",{"_index":156,"title":{"components/G43InputComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["g43inputmodule",{"_index":843,"title":{"modules/G43InputModule.html":{}},"body":{"modules/G43InputModule.html":{},"modules.html":{},"overview.html":{}}}],["g43inputservice",{"_index":863,"title":{"injectables/G43InputService.html":{}},"body":{"injectables/G43InputService.html":{},"coverage.html":{}}}],["g43notification",{"_index":707,"title":{"interfaces/G43Notification.html":{}},"body":{"classes/G43CoreService.html":{},"interfaces/G43Notification.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"coverage.html":{}}}],["g43notificationtype",{"_index":1549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["g43restapihandler",{"_index":883,"title":{"classes/G43RestApiHandler.html":{}},"body":{"classes/G43RestApiHandler.html":{},"coverage.html":{}}}],["g43safe",{"_index":929,"title":{},"body":{"pipes/G43SafePipe.html":{}}}],["g43safepipe",{"_index":927,"title":{"pipes/G43SafePipe.html":{}},"body":{"pipes/G43SafePipe.html":{},"modules/G43SharedPipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["g43service",{"_index":939,"title":{"classes/G43Service.html":{}},"body":{"classes/G43Service.html":{},"coverage.html":{}}}],["g43serviceparams",{"_index":711,"title":{"interfaces/G43ServiceParams.html":{}},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"coverage.html":{}}}],["g43sharedpipesmodule",{"_index":687,"title":{"modules/G43SharedPipesModule.html":{}},"body":{"modules/G43CommonModule.html":{},"modules/G43SharedPipesModule.html":{},"modules.html":{},"overview.html":{}}}],["g43testingmodule",{"_index":988,"title":{"modules/G43TestingModule.html":{}},"body":{"modules/G43TestingModule.html":{},"modules.html":{}}}],["g43translation",{"_index":484,"title":{"interfaces/G43Translation.html":{}},"body":{"components/CoreTableComponent.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuItemComponent.html":{},"coverage.html":{}}}],["gb",{"_index":809,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":1576,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1558,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":1006,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["get(undefined",{"_index":714,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{}}}],["get({url",{"_index":783,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["getbackdropleft",{"_index":1079,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["getcellclass",{"_index":471,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["getcellclass(row",{"_index":495,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["getcontentalign",{"_index":435,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["getcontentleft",{"_index":1081,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["getcontentmarginright",{"_index":1083,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["getdrawervisible",{"_index":1087,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["geteditable",{"_index":433,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["gethasselection",{"_index":521,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["getheader",{"_index":699,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["getheight",{"_index":1256,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["getimage",{"_index":942,"title":{},"body":{"classes/G43Service.html":{}}}],["getimage(url",{"_index":947,"title":{},"body":{"classes/G43Service.html":{}}}],["getisshowingbackdrop",{"_index":1075,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["getlabel",{"_index":472,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["getlabel(column",{"_index":571,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["getlabel(columnconfig",{"_index":498,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["getlabelfor",{"_index":1215,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["getlabelfor(menuitem",{"_index":1220,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["getnumberdata",{"_index":1434,"title":{},"body":{"classes/TableMaker.html":{}}}],["getnumberdata().reduce((acc",{"_index":1446,"title":{},"body":{"classes/TableMaker.html":{}}}],["getparameters",{"_index":700,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{}}}],["getparameters(parameters",{"_index":725,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["getrealfilter",{"_index":1085,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["getrowclass",{"_index":473,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["getrowclass(row",{"_index":500,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["getrowname(config",{"_index":1357,"title":{},"body":{"classes/TableMaker.html":{}}}],["gettext",{"_index":1343,"title":{},"body":{"classes/TableMaker.html":{}}}],["gettext(config",{"_index":1367,"title":{},"body":{"classes/TableMaker.html":{}}}],["getting",{"_index":1554,"title":{"index.html":{}},"body":{}}],["gettopoffset",{"_index":1077,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["gettype",{"_index":437,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["getvalue",{"_index":439,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["getvisiblecolumns",{"_index":523,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["getvisiblevalue",{"_index":310,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["getwidth",{"_index":1166,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["gigabytes",{"_index":819,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":1598,"title":{},"body":{"index.html":{}}}],["goe",{"_index":678,"title":{},"body":{"classes/FilterModel.html":{}}}],["graph",{"_index":1604,"title":{},"body":{"modules.html":{}}}],["gt",{"_index":677,"title":{},"body":{"classes/FilterModel.html":{}}}],["gtools",{"_index":743,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/TableFilterConfigInterface.html":{},"dependencies.html":{}}}],["gtoolsng",{"_index":1556,"title":{},"body":{"index.html":{}}}],["hack",{"_index":785,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["handle",{"_index":735,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["handleerror",{"_index":701,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{}}}],["handleerror(error",{"_index":732,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["hasanydata",{"_index":1381,"title":{},"body":{"classes/TableMaker.html":{}}}],["hasanyfilter",{"_index":1400,"title":{},"body":{"classes/TableMaker.html":{}}}],["hasanyfooter",{"_index":1387,"title":{},"body":{"classes/TableMaker.html":{}}}],["hasselection",{"_index":481,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["header",{"_index":718,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/TableConfigInterface.html":{}}}],["headers",{"_index":721,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["headers}).pipe",{"_index":782,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["height",{"_index":121,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{}}}],["height(value",{"_index":1261,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["help",{"_index":1596,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":578,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["host",{"_index":12,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{}}}],["hostbinding",{"_index":394,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["hostbinding(\"class.focused",{"_index":402,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["hostbindings",{"_index":383,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["hostlistener",{"_index":312,"title":{},"body":{"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/MenuContainerComponent.html":{}}}],["hostlistener(\"click",{"_index":406,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["hostlistener(\"document:click",{"_index":341,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["hostlistener(\"document:keydown.escape",{"_index":344,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuContainerComponent.html":{}}}],["hostlistener(\"keydown",{"_index":314,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["hostlistener(\"mouseenter",{"_index":409,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["hostlisteners",{"_index":275,"title":{},"body":{"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/MenuContainerComponent.html":{}}}],["hover",{"_index":108,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/MenuComponent.html":{},"components/MenuItemComponent.html":{}}}],["html",{"_index":137,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["htmlelement",{"_index":1362,"title":{},"body":{"classes/TableMaker.html":{}}}],["htmlinputelement",{"_index":493,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["htmltablecellelement",{"_index":1457,"title":{},"body":{"classes/TableMaker.html":{}}}],["htmltablerowelement",{"_index":1404,"title":{},"body":{"classes/TableMaker.html":{}}}],["htmltablesectionelement",{"_index":1353,"title":{},"body":{"classes/TableMaker.html":{}}}],["http",{"_index":709,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["http://localhost:4200",{"_index":1569,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":705,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["httpclienttestingmodule",{"_index":991,"title":{},"body":{"modules/G43TestingModule.html":{}}}],["httpheaders",{"_index":724,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["httpparams",{"_index":728,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["httpparams.append(key",{"_index":775,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["httprequest",{"_index":898,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["httpresponse",{"_index":733,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["httpresponse({status",{"_index":923,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["icon",{"_index":28,"title":{},"body":{"components/ButtonComponent.html":{},"classes/MenuItem.html":{}}}],["id",{"_index":618,"title":{},"body":{"injectables/CoreTableService.html":{},"classes/G43RestApiHandler.html":{}}}],["identifier",{"_index":1485,"title":{},"body":{"coverage.html":{}}}],["image.jpg",{"_index":960,"title":{},"body":{"classes/G43Service.html":{}}}],["implemented",{"_index":773,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["implements",{"_index":182,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"pipes/G43SafePipe.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["import",{"_index":49,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"modules/G43CommonModule.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"injectables/G43InputService.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"modules/TableMakerModule.html":{},"injectables/TableService.html":{}}}],["imports",{"_index":692,"title":{},"body":{"modules/G43CommonModule.html":{},"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"classes/G43CoreService.html":{},"components/G43InputComponent.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexofelementfordelete",{"_index":918,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["indexofupdating",{"_index":925,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["infinite",{"_index":128,"title":{},"body":{"components/ButtonComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"modules/G43CommonModule.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"injectables/G43InputService.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"modules/TableMakerModule.html":{},"injectables/TableService.html":{}}}],["inherited",{"_index":961,"title":{},"body":{"classes/G43Service.html":{}}}],["inject",{"_index":525,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{}}}],["inject(g43_translate_token",{"_index":536,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuItemComponent.html":{}}}],["inject(undefined",{"_index":1125,"title":{},"body":{"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["injectable",{"_index":614,"title":{"injectables/CoreTableService.html":{},"injectables/G43InputService.html":{},"injectables/TableService.html":{}},"body":{"injectables/CoreTableService.html":{},"injectables/G43InputService.html":{},"injectables/TableService.html":{},"coverage.html":{}}}],["injectables",{"_index":615,"title":{},"body":{"injectables/CoreTableService.html":{},"injectables/G43InputService.html":{},"injectables/TableService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":880,"title":{},"body":{"interfaces/G43Notification.html":{},"interfaces/G43Translation.html":{}}}],["injectiontoken(\"g43notification",{"_index":882,"title":{},"body":{"interfaces/G43Notification.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken(\"g43translation",{"_index":1017,"title":{},"body":{"interfaces/G43Translation.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":29,"title":{},"body":{"components/ButtonComponent.html":{}}}],["inner",{"_index":1193,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["innersubscription",{"_index":541,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["innersubscription.unsubscribe",{"_index":544,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["input",{"_index":50,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{}}}],["input'},{'name",{"_index":146,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["input(\"disabled",{"_index":244,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["input(\"index",{"_index":396,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["input(\"parent",{"_index":397,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["input(\"value",{"_index":399,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["input.addeventlistener(\"change",{"_index":1427,"title":{},"body":{"classes/TableMaker.html":{}}}],["input.addeventlistener(\"keyup",{"_index":1422,"title":{},"body":{"classes/TableMaker.html":{}}}],["input.component",{"_index":859,"title":{},"body":{"modules/G43InputModule.html":{}}}],["input.component.css",{"_index":1267,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["input.component.html",{"_index":193,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["input.component.scss",{"_index":192,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["input.component.ts",{"_index":181,"title":{},"body":{"components/CoreInputComponent.html":{},"components/G43InputComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:12",{"_index":842,"title":{},"body":{"components/G43InputComponent.html":{}}}],["input.component.ts:17",{"_index":215,"title":{},"body":{"components/CoreInputComponent.html":{},"components/G43InputComponent.html":{},"components/NumberInputComponent.html":{}}}],["input.component.ts:18",{"_index":216,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["input.component.ts:19",{"_index":237,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["input.component.ts:20",{"_index":213,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["input.component.ts:23",{"_index":1272,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["input.component.ts:27",{"_index":214,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["input.component.ts:29",{"_index":1273,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["input.component.ts:32",{"_index":217,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["input.component.ts:35",{"_index":1275,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["input.component.ts:38",{"_index":220,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["input.component.ts:39",{"_index":1276,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["input.component.ts:41",{"_index":222,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["input.component.ts:43",{"_index":1277,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["input.component.ts:44",{"_index":226,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["input.component.ts:48",{"_index":229,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["input.component.ts:51",{"_index":1278,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["input.component.ts:52",{"_index":231,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["input.component.ts:58",{"_index":1274,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["input.component.ts:60",{"_index":234,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["input.component.ts:64",{"_index":224,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["input.component.ts:67",{"_index":1271,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["input.module.ts",{"_index":852,"title":{},"body":{"modules/G43InputModule.html":{}}}],["input.service.ts",{"_index":864,"title":{},"body":{"injectables/G43InputService.html":{},"coverage.html":{}}}],["input.service.ts:6",{"_index":865,"title":{},"body":{"injectables/G43InputService.html":{}}}],["input.type",{"_index":1428,"title":{},"body":{"classes/TableMaker.html":{}}}],["input.value",{"_index":1424,"title":{},"body":{"classes/TableMaker.html":{}}}],["input/core",{"_index":180,"title":{},"body":{"components/CoreInputComponent.html":{},"modules/G43InputModule.html":{},"coverage.html":{}}}],["input/number",{"_index":862,"title":{},"body":{"modules/G43InputModule.html":{},"components/NumberInputComponent.html":{},"coverage.html":{}}}],["inputformcontrol",{"_index":195,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["inputs",{"_index":26,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["instant",{"_index":1003,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["instant(key",{"_index":1008,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["instantly",{"_index":1011,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["interface",{"_index":749,"title":{"interfaces/G43Notification.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{}},"body":{"classes/G43CoreService.html":{},"interfaces/G43Notification.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":868,"title":{},"body":{"interfaces/G43Notification.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"overview.html":{}}}],["interfaces/table",{"_index":442,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"classes/TableMaker.html":{}}}],["invariant",{"_index":318,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["isdisabled",{"_index":232,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["isnan(min",{"_index":663,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["isshowingbackdrop",{"_index":1054,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["isvalidnumber",{"_index":1269,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["isvalidnumber(value",{"_index":1270,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["item",{"_index":510,"title":{},"body":{"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43RestApiHandler.html":{},"components/MenuItemComponent.html":{}}}],["item'},{'name",{"_index":167,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["item.component",{"_index":1244,"title":{},"body":{"modules/MenuModule.html":{}}}],["item.component.html",{"_index":1214,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.scss",{"_index":1213,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts",{"_index":1212,"title":{},"body":{"components/MenuItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:16",{"_index":1218,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:22",{"_index":1222,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:25",{"_index":1221,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:37",{"_index":1219,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.id",{"_index":569,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["item.model",{"_index":1033,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuItemComponent.html":{}}}],["item.model.ts",{"_index":1195,"title":{},"body":{"classes/MenuItem.html":{},"coverage.html":{}}}],["item.model.ts:11",{"_index":1206,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.model.ts:15",{"_index":1208,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.model.ts:3",{"_index":1200,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.model.ts:5",{"_index":1203,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.model.ts:6",{"_index":1201,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.model.ts:7",{"_index":1202,"title":{},"body":{"classes/MenuItem.html":{}}}],["item.model.ts:8",{"_index":1204,"title":{},"body":{"classes/MenuItem.html":{}}}],["item/menu",{"_index":1211,"title":{},"body":{"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"coverage.html":{}}}],["item[filter.attribute",{"_index":666,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["items",{"_index":352,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuItemComponent.html":{}}}],["iterableiterator",{"_index":1316,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["iteration",{"_index":126,"title":{},"body":{"components/ButtonComponent.html":{}}}],["iterator",{"_index":1315,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["js",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":756,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["json.stringify(body",{"_index":781,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["justify",{"_index":355,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuComponent.html":{}}}],["karma",{"_index":1591,"title":{},"body":{"index.html":{}}}],["kb",{"_index":807,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["keep",{"_index":833,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["key",{"_index":647,"title":{},"body":{"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"classes/TableMaker.html":{}}}],["keyboardevent",{"_index":291,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["keydown",{"_index":278,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["keydown(event",{"_index":290,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["keyframes",{"_index":103,"title":{},"body":{"components/ButtonComponent.html":{}}}],["keyvalue",{"_index":1329,"title":{},"body":{"interfaces/TableFilterConfigInterface.html":{}}}],["kilobytes",{"_index":817,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":206,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"classes/MenuItem.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{}}}],["labelkey",{"_index":1291,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["lang",{"_index":1014,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["language",{"_index":1601,"title":{},"body":{"index.html":{}}}],["last",{"_index":588,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["lastvalue",{"_index":1268,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["left",{"_index":118,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"interfaces/TableColumnConfigInterface.html":{}}}],["legend",{"_index":136,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"modules/TableMakerModule.html":{},"overview.html":{}}}],["li",{"_index":1040,"title":{},"body":{"components/MenuComponent.html":{}}}],["likeinsensitive",{"_index":659,"title":{},"body":{"injectables/CoreTableService.html":{},"classes/FilterModel.html":{}}}],["limit",{"_index":891,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["line",{"_index":364,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuComponent.html":{},"components/MenuItemComponent.html":{}}}],["line:no",{"_index":317,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["linear",{"_index":125,"title":{},"body":{"components/ButtonComponent.html":{}}}],["link",{"_index":958,"title":{},"body":{"classes/G43Service.html":{}}}],["list",{"_index":1039,"title":{},"body":{"components/MenuComponent.html":{}}}],["literal",{"_index":632,"title":{},"body":{"injectables/CoreTableService.html":{},"interfaces/G43ServiceParams.html":{},"classes/TableMaker.html":{}}}],["loaded",{"_index":1151,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["loader",{"_index":72,"title":{},"body":{"components/ButtonComponent.html":{},"dependencies.html":{}}}],["loading",{"_index":30,"title":{},"body":{"components/ButtonComponent.html":{}}}],["localdisabled",{"_index":196,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["localfilter",{"_index":619,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["loe",{"_index":668,"title":{},"body":{"injectables/CoreTableService.html":{},"classes/FilterModel.html":{}}}],["login",{"_index":790,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["longform",{"_index":801,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["lt",{"_index":667,"title":{},"body":{"injectables/CoreTableService.html":{},"classes/FilterModel.html":{}}}],["make",{"_index":1600,"title":{},"body":{"index.html":{}}}],["maker.module.ts",{"_index":1477,"title":{},"body":{"modules/TableMakerModule.html":{}}}],["maker.ts",{"_index":1334,"title":{},"body":{"classes/TableMaker.html":{},"coverage.html":{}}}],["maker.ts:10",{"_index":1352,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:11",{"_index":1348,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:12",{"_index":1347,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:13",{"_index":1361,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:134",{"_index":1365,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:162",{"_index":1364,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:20",{"_index":1346,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:5",{"_index":1363,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:53",{"_index":1369,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:6",{"_index":1356,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:61",{"_index":1371,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:66",{"_index":1366,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:7",{"_index":1354,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:8",{"_index":1355,"title":{},"body":{"classes/TableMaker.html":{}}}],["maker.ts:9",{"_index":1351,"title":{},"body":{"classes/TableMaker.html":{}}}],["map",{"_index":746,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["map(mapfunction",{"_index":767,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["mapfunction",{"_index":751,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["mapping",{"_index":1305,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["margin",{"_index":119,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{}}}],["matching",{"_index":177,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"modules/G43CommonModule.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"injectables/G43InputService.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"modules/TableMakerModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.log(1024",{"_index":827,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["math.max(...getnumberdata",{"_index":1442,"title":{},"body":{"classes/TableMaker.html":{}}}],["math.min(...getnumberdata",{"_index":1444,"title":{},"body":{"classes/TableMaker.html":{}}}],["math.min(math.max(0",{"_index":330,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["math.min(power",{"_index":828,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["math.min(value",{"_index":1176,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["math.pow(1024",{"_index":830,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["math.round(math.log(sizeinbytes",{"_index":826,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["math.round(size",{"_index":832,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["max",{"_index":133,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"miscellaneous/enumerations.html":{}}}],["mb",{"_index":808,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":131,"title":{},"body":{"components/ButtonComponent.html":{}}}],["megabytes",{"_index":818,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":160,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"index.html":{}}}],["menu'},{'name",{"_index":158,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["menu.component",{"_index":1245,"title":{},"body":{"modules/MenuModule.html":{}}}],["menu.component.html",{"_index":1020,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":1019,"title":{},"body":{"components/MenuComponent.html":{}}}],["menucomponent",{"_index":157,"title":{"components/MenuComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menucontainercomponent",{"_index":159,"title":{"components/MenuContainerComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menucontentcomponent",{"_index":162,"title":{"components/MenuContentComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menudrawercomponent",{"_index":164,"title":{"components/MenuDrawerComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menuitem",{"_index":1026,"title":{"classes/MenuItem.html":{}},"body":{"components/MenuComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"coverage.html":{}}}],["menuitem(label",{"_index":1210,"title":{},"body":{"classes/MenuItem.html":{}}}],["menuitem.create(\"about",{"_index":1028,"title":{},"body":{"components/MenuComponent.html":{}}}],["menuitem.create(\"home",{"_index":1027,"title":{},"body":{"components/MenuComponent.html":{}}}],["menuitem.label",{"_index":1224,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["menuitemcomponent",{"_index":166,"title":{"components/MenuItemComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menuitems",{"_index":1022,"title":{},"body":{"components/MenuComponent.html":{}}}],["menumodule",{"_index":1237,"title":{"modules/MenuModule.html":{}},"body":{"modules/MenuModule.html":{},"modules.html":{},"overview.html":{}}}],["menutopcomponent",{"_index":168,"title":{"components/MenuTopComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menuwidth",{"_index":1021,"title":{},"body":{"components/MenuComponent.html":{}}}],["mergemap",{"_index":549,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"pipes/G43SafePipe.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["method",{"_index":772,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{}}}],["min",{"_index":360,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuTopComponent.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"miscellaneous/enumerations.html":{}}}],["miscellaneous",{"_index":1546,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["models/filter.model",{"_index":646,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["models/menu",{"_index":1032,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuItemComponent.html":{}}}],["module",{"_index":681,"title":{"modules/G43CommonModule.html":{},"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{}},"body":{"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{},"overview.html":{}}}],["modules",{"_index":683,"title":{"modules.html":{}},"body":{"modules/G43CommonModule.html":{},"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1597,"title":{},"body":{"index.html":{}}}],["mouseenter",{"_index":385,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["mouseevent",{"_index":287,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["moving",{"_index":1104,"title":{},"body":{"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["multi",{"_index":190,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{}}}],["myblob",{"_index":977,"title":{},"body":{"classes/G43Service.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"classes/TableMaker.html":{},"index.html":{}}}],["navigate",{"_index":1568,"title":{},"body":{"index.html":{}}}],["new",{"_index":235,"title":{},"body":{"components/CoreInputComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"classes/MenuItem.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newfilter",{"_index":654,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["newfilter.attribute",{"_index":656,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["newfilter.type",{"_index":657,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["newfilter.value",{"_index":655,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["newrow",{"_index":1469,"title":{},"body":{"classes/TableMaker.html":{}}}],["newvalue",{"_index":303,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["next",{"_index":316,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["ng",{"_index":1565,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":187,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["ngmodule",{"_index":686,"title":{},"body":{"modules/G43CommonModule.html":{},"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{}}}],["ngondestroy",{"_index":474,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["ngoninit",{"_index":197,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["ngx",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["nodatatext",{"_index":1318,"title":{},"body":{"interfaces/TableConfigInterface.html":{}}}],["none",{"_index":99,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{}}}],["noopanimationsmodule",{"_index":993,"title":{},"body":{"modules/G43TestingModule.html":{}}}],["not(.loading):not(.disabled",{"_index":95,"title":{},"body":{"components/ButtonComponent.html":{}}}],["notification",{"_index":1551,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notification.interface",{"_index":748,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43TestingModule.html":{}}}],["notification.interface.ts",{"_index":869,"title":{},"body":{"interfaces/G43Notification.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notification.interface.ts:4",{"_index":874,"title":{},"body":{"interfaces/G43Notification.html":{}}}],["notification.interface.ts:6",{"_index":876,"title":{},"body":{"interfaces/G43Notification.html":{}}}],["notification.interface.ts:8",{"_index":878,"title":{},"body":{"interfaces/G43Notification.html":{}}}],["notification/g43",{"_index":747,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43Notification.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43TestingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["notificationservice",{"_index":706,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["nowrap",{"_index":1231,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["null",{"_index":58,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"classes/G43RestApiHandler.html":{},"components/MenuContainerComponent.html":{},"classes/TableMaker.html":{}}}],["number",{"_index":171,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"miscellaneous/variables.html":{}}}],["number(this.gettext(column",{"_index":1436,"title":{},"body":{"classes/TableMaker.html":{}}}],["number_range",{"_index":631,"title":{},"body":{"injectables/CoreTableService.html":{},"interfaces/TableFilterConfigInterface.html":{}}}],["numberinputcomponent",{"_index":170,"title":{"components/NumberInputComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["obj",{"_index":307,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["object",{"_index":717,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"classes/TableMaker.html":{}}}],["observable",{"_index":487,"title":{},"body":{"components/CoreTableComponent.html":{},"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"components/MenuItemComponent.html":{}}}],["of(columnconfig.label",{"_index":556,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["of(columnconfig.labelkey",{"_index":555,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["of(menuitem.label",{"_index":1226,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["of(new",{"_index":903,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["offset",{"_index":890,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["onbackdropclicked",{"_index":1108,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["onchange",{"_index":198,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["onchange(value",{"_index":218,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["onclick",{"_index":407,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["onclick(event",{"_index":342,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["ondestroy",{"_index":460,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["oninit",{"_index":183,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["onkeydown(event",{"_index":319,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["onmouseenter",{"_index":410,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["onrowclick",{"_index":475,"title":{},"body":{"components/CoreTableComponent.html":{},"interfaces/TableConfigInterface.html":{}}}],["onrowclick(row",{"_index":504,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["onselectall",{"_index":476,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["onselectall(selectall",{"_index":506,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["onselectionchange",{"_index":1319,"title":{},"body":{"interfaces/TableConfigInterface.html":{}}}],["ontouched",{"_index":199,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["ontouched(value",{"_index":221,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["opacity",{"_index":1114,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["open",{"_index":270,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["open(param",{"_index":1067,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["opendrawer",{"_index":1051,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["opened",{"_index":268,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["openerrornotification",{"_index":870,"title":{},"body":{"interfaces/G43Notification.html":{},"modules/G43TestingModule.html":{}}}],["openerrornotification(error",{"_index":873,"title":{},"body":{"interfaces/G43Notification.html":{}}}],["openinfonotification",{"_index":871,"title":{},"body":{"interfaces/G43Notification.html":{},"modules/G43TestingModule.html":{}}}],["openinfonotification(info",{"_index":875,"title":{},"body":{"interfaces/G43Notification.html":{}}}],["opensuccessnotification",{"_index":872,"title":{},"body":{"interfaces/G43Notification.html":{},"modules/G43TestingModule.html":{}}}],["opensuccessnotification(success",{"_index":877,"title":{},"body":{"interfaces/G43Notification.html":{}}}],["option",{"_index":374,"title":{},"body":{"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{}}}],["option.directive",{"_index":860,"title":{},"body":{"modules/G43InputModule.html":{}}}],["option.directive.ts",{"_index":381,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{},"coverage.html":{}}}],["option.directive.ts:11",{"_index":387,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["option.directive.ts:12",{"_index":388,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["option.directive.ts:15",{"_index":389,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["option.directive.ts:20",{"_index":390,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["option.directive.ts:25",{"_index":391,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["option.directive.ts:30",{"_index":392,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["option.directive.ts:32",{"_index":386,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["optional",{"_index":46,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{}}}],["options",{"_index":358,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["out",{"_index":851,"title":{},"body":{"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":98,"title":{},"body":{"components/ButtonComponent.html":{}}}],["overflow",{"_index":369,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["overloading",{"_index":786,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["overview",{"_index":1609,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1522,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":87,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuItemComponent.html":{}}}],["padding/2",{"_index":377,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["pagesize",{"_index":1320,"title":{},"body":{"interfaces/TableConfigInterface.html":{}}}],["pagesizeoptions",{"_index":1321,"title":{},"body":{"interfaces/TableConfigInterface.html":{}}}],["paging",{"_index":1322,"title":{},"body":{"interfaces/TableConfigInterface.html":{}}}],["param",{"_index":758,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{},"components/MenuContainerComponent.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{}}}],["parameters.hasownproperty(key",{"_index":774,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["parameters[key",{"_index":776,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["params",{"_index":757,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["parent",{"_index":382,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["parseint(spliturl[spliturl.length",{"_index":914,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["path",{"_index":895,"title":{},"body":{"classes/G43RestApiHandler.html":{},"classes/MenuItem.html":{}}}],["pb",{"_index":811,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["pettabytes",{"_index":820,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":766,"title":{"pipes/G43FileSizePipe.html":{},"pipes/G43SafePipe.html":{}},"body":{"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"pipes/G43SafePipe.html":{},"interfaces/G43ServiceParams.html":{},"coverage.html":{}}}],["pipe({name",{"_index":936,"title":{},"body":{"pipes/G43SafePipe.html":{}}}],["pipes",{"_index":796,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"pipes/G43SafePipe.html":{},"overview.html":{}}}],["pipes.module",{"_index":690,"title":{},"body":{"modules/G43CommonModule.html":{}}}],["pipes.module.ts",{"_index":985,"title":{},"body":{"modules/G43SharedPipesModule.html":{}}}],["pipes/g43",{"_index":689,"title":{},"body":{"modules/G43CommonModule.html":{},"pipes/G43FileSizePipe.html":{},"pipes/G43SafePipe.html":{},"modules/G43SharedPipesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipetransform",{"_index":804,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"pipes/G43SafePipe.html":{}}}],["placeholder",{"_index":207,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["pointer",{"_index":376,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuItemComponent.html":{},"classes/TableMaker.html":{}}}],["position",{"_index":113,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{}}}],["post",{"_index":702,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{}}}],["post(undefined",{"_index":738,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{}}}],["post({url",{"_index":777,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["power",{"_index":825,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["primary",{"_index":379,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["printed",{"_index":1311,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["private",{"_index":398,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{},"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43RestApiHandler.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{}}}],["process",{"_index":621,"title":{},"body":{"injectables/CoreTableService.html":{},"classes/G43RestApiHandler.html":{}}}],["process(filters",{"_index":627,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["processvalue",{"_index":201,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["processvalue(value",{"_index":223,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["prod",{"_index":1583,"title":{},"body":{"index.html":{}}}],["production",{"_index":1585,"title":{},"body":{"index.html":{}}}],["project",{"_index":1557,"title":{},"body":{"index.html":{}}}],["projects/.../core",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../g43",{"_index":1550,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../table",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../test.ts",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/common/src/lib/g43",{"_index":684,"title":{},"body":{"modules/G43CommonModule.html":{}}}],["projects/common/src/lib/services/g43",{"_index":695,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43Notification.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/common/src/lib/shared",{"_index":797,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"pipes/G43SafePipe.html":{},"modules/G43SharedPipesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/common/src/lib/testing/api/g43",{"_index":884,"title":{},"body":{"classes/G43RestApiHandler.html":{},"coverage.html":{}}}],["projects/common/src/lib/testing/g43",{"_index":989,"title":{},"body":{"modules/G43TestingModule.html":{}}}],["projects/common/src/test.ts",{"_index":1499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/input/src/lib/components/button/button.component.ts",{"_index":10,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["projects/input/src/lib/components/button/button.component.ts:18",{"_index":40,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/input/src/lib/components/button/button.component.ts:19",{"_index":37,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/input/src/lib/components/button/button.component.ts:20",{"_index":38,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/input/src/lib/components/button/button.component.ts:21",{"_index":39,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/input/src/lib/components/button/button.component.ts:22",{"_index":35,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/input/src/lib/components/button/button.component.ts:25",{"_index":43,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/input/src/lib/components/core",{"_index":179,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"coverage.html":{}}}],["projects/input/src/lib/components/number",{"_index":1266,"title":{},"body":{"components/NumberInputComponent.html":{},"coverage.html":{}}}],["projects/input/src/lib/g43",{"_index":839,"title":{},"body":{"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"injectables/G43InputService.html":{},"coverage.html":{}}}],["projects/input/src/lib/input",{"_index":67,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{}}}],["projects/input/src/test.ts",{"_index":1508,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/menu/src/lib/menu",{"_index":1044,"title":{},"body":{"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"coverage.html":{}}}],["projects/menu/src/lib/menu.component.ts",{"_index":1018,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["projects/menu/src/lib/menu.component.ts:11",{"_index":1029,"title":{},"body":{"components/MenuComponent.html":{}}}],["projects/menu/src/lib/menu.component.ts:12",{"_index":1025,"title":{},"body":{"components/MenuComponent.html":{}}}],["projects/menu/src/lib/menu.component.ts:13",{"_index":1023,"title":{},"body":{"components/MenuComponent.html":{}}}],["projects/menu/src/lib/menu.component.ts:20",{"_index":1030,"title":{},"body":{"components/MenuComponent.html":{}}}],["projects/menu/src/lib/menu.module.ts",{"_index":1241,"title":{},"body":{"modules/MenuModule.html":{}}}],["projects/menu/src/lib/models/menu",{"_index":1194,"title":{},"body":{"classes/MenuItem.html":{},"coverage.html":{}}}],["projects/menu/src/test.ts",{"_index":1511,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/table/src/lib/components/core",{"_index":411,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/table/src/lib/interfaces/table",{"_index":1283,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/table/src/lib/models/filter.model.ts",{"_index":674,"title":{},"body":{"classes/FilterModel.html":{},"coverage.html":{}}}],["projects/table/src/lib/models/filter.model.ts:2",{"_index":679,"title":{},"body":{"classes/FilterModel.html":{}}}],["projects/table/src/lib/models/filter.model.ts:3",{"_index":680,"title":{},"body":{"classes/FilterModel.html":{}}}],["projects/table/src/lib/models/filter.model.ts:4",{"_index":676,"title":{},"body":{"classes/FilterModel.html":{}}}],["projects/table/src/lib/models/table",{"_index":1333,"title":{},"body":{"classes/TableMaker.html":{},"coverage.html":{}}}],["projects/table/src/lib/table",{"_index":1476,"title":{},"body":{"modules/TableMakerModule.html":{}}}],["projects/table/src/lib/table.service.ts",{"_index":1481,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["projects/table/src/lib/table.service.ts:6",{"_index":1482,"title":{},"body":{"injectables/TableService.html":{}}}],["projects/table/src/test.ts",{"_index":1520,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":194,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"classes/G43RestApiHandler.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{}}}],["property",{"_index":1295,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["protected",{"_index":200,"title":{},"body":{"components/CoreInputComponent.html":{},"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"components/NumberInputComponent.html":{}}}],["protractor",{"_index":1594,"title":{},"body":{"index.html":{}}}],["provide",{"_index":186,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"modules/G43TestingModule.html":{},"components/NumberInputComponent.html":{}}}],["providedin",{"_index":866,"title":{},"body":{"injectables/G43InputService.html":{},"injectables/TableService.html":{}}}],["providers",{"_index":185,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"modules/MenuModule.html":{},"components/NumberInputComponent.html":{},"modules/TableMakerModule.html":{},"overview.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"injectables/G43InputService.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{},"injectables/TableService.html":{}}}],["put",{"_index":703,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{}}}],["put(undefined",{"_index":740,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{}}}],["put({url",{"_index":779,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["px",{"_index":1136,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["querylist",{"_index":514,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuContainerComponent.html":{}}}],["radius",{"_index":122,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreTableComponent.html":{}}}],["radiusable",{"_index":92,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{}}}],["range",{"_index":612,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["reactiveformsmodule",{"_index":856,"title":{},"body":{"modules/G43InputModule.html":{}}}],["readme",{"_index":1599,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":241,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"interfaces/G43ServiceParams.html":{},"components/MenuComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"classes/TableMaker.html":{}}}],["realdata",{"_index":468,"title":{},"body":{"components/CoreTableComponent.html":{},"classes/G43RestApiHandler.html":{},"classes/TableMaker.html":{}}}],["realfilter",{"_index":1059,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["realheight",{"_index":1249,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["really",{"_index":1603,"title":{},"body":{"index.html":{}}}],["realwidth",{"_index":1152,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["regexp",{"_index":909,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["registeronchange",{"_index":202,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["registeronchange(fn",{"_index":225,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["registerontouched",{"_index":203,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["registerontouched(fn",{"_index":228,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["relative",{"_index":348,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuItemComponent.html":{}}}],["reload",{"_index":1572,"title":{},"body":{"index.html":{}}}],["removedelement",{"_index":920,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["request",{"_index":723,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["request.body",{"_index":907,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["request.method",{"_index":902,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["request.url.endswith",{"_index":900,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["request.url.match(new",{"_index":908,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["request.url.split",{"_index":913,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["require",{"_index":1501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":720,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["reset",{"_index":850,"title":{},"body":{"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{},"overview.html":{}}}],["response",{"_index":752,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["responsetype",{"_index":753,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["rest",{"_index":885,"title":{},"body":{"classes/G43RestApiHandler.html":{},"coverage.html":{}}}],["result",{"_index":176,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"modules/G43CommonModule.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"injectables/G43InputService.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"modules/TableMakerModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":178,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"modules/G43CommonModule.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"injectables/G43InputService.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"modules/TableMakerModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":259,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{}}}],["rgba(0",{"_index":76,"title":{},"body":{"components/ButtonComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{}}}],["rgba(34",{"_index":1262,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["right",{"_index":367,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"interfaces/TableColumnConfigInterface.html":{}}}],["right.px",{"_index":1138,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["root",{"_index":867,"title":{},"body":{"injectables/G43InputService.html":{},"injectables/TableService.html":{}}}],["rotate(0deg",{"_index":106,"title":{},"body":{"components/ButtonComponent.html":{}}}],["rotate(360deg",{"_index":107,"title":{},"body":{"components/ButtonComponent.html":{}}}],["router",{"_index":1217,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["routermodule",{"_index":1242,"title":{},"body":{"modules/MenuModule.html":{}}}],["routertestingmodule",{"_index":995,"title":{},"body":{"modules/G43TestingModule.html":{}}}],["row",{"_index":422,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"classes/TableMaker.html":{},"index.html":{}}}],["rowclass",{"_index":1323,"title":{},"body":{"interfaces/TableConfigInterface.html":{}}}],["rowdata",{"_index":1368,"title":{},"body":{"classes/TableMaker.html":{}}}],["rowdata[this.utils.getrowname(config",{"_index":1398,"title":{},"body":{"classes/TableMaker.html":{}}}],["rowindex",{"_index":423,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"interfaces/TableConfigInterface.html":{},"classes/TableMaker.html":{}}}],["rrrr",{"_index":1143,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["run",{"_index":1564,"title":{},"body":{"index.html":{}}}],["running",{"_index":1586,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":530,"title":{},"body":{"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"components/MenuItemComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":645,"title":{},"body":{"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["s",{"_index":713,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"classes/TableMaker.html":{}}}],["safe.pipe",{"_index":987,"title":{},"body":{"modules/G43SharedPipesModule.html":{}}}],["safe.pipe.ts",{"_index":928,"title":{},"body":{"pipes/G43SafePipe.html":{},"coverage.html":{}}}],["safe.pipe.ts:9",{"_index":931,"title":{},"body":{"pipes/G43SafePipe.html":{}}}],["saferesourceurl",{"_index":932,"title":{},"body":{"pipes/G43SafePipe.html":{}}}],["sanitizer",{"_index":937,"title":{},"body":{"pipes/G43SafePipe.html":{}}}],["scaffolding",{"_index":1575,"title":{},"body":{"index.html":{}}}],["screen",{"_index":132,"title":{},"body":{"components/ButtonComponent.html":{}}}],["search",{"_index":730,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["select",{"_index":264,"title":{},"body":{"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"injectables/CoreTableService.html":{},"modules/G43InputModule.html":{},"components/MenuItemComponent.html":{},"interfaces/TableFilterConfigInterface.html":{},"coverage.html":{}}}],["select'},{'name",{"_index":148,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["select.component",{"_index":395,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{},"modules/G43InputModule.html":{}}}],["select.component.html",{"_index":266,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.scss",{"_index":265,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts",{"_index":263,"title":{},"body":{"components/CoreSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:102",{"_index":296,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:106",{"_index":304,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:110",{"_index":294,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:114",{"_index":295,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:118",{"_index":297,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:123",{"_index":298,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:127",{"_index":300,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:130",{"_index":306,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:135",{"_index":293,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:21",{"_index":284,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:22",{"_index":283,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:23",{"_index":282,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:25",{"_index":281,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:26",{"_index":309,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:27",{"_index":308,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:28",{"_index":280,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:35",{"_index":292,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:64",{"_index":311,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:78",{"_index":299,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:84",{"_index":302,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:91",{"_index":288,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select.component.ts:98",{"_index":289,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["select/core",{"_index":262,"title":{},"body":{"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"modules/G43InputModule.html":{},"coverage.html":{}}}],["selectable",{"_index":1324,"title":{},"body":{"interfaces/TableConfigInterface.html":{}}}],["selectall",{"_index":508,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["selectdata.key",{"_index":611,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["selectedrows",{"_index":1326,"title":{},"body":{"interfaces/TableConfigInterface.html":{}}}],["selectedvalue",{"_index":269,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["selecthovered",{"_index":271,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["selection",{"_index":1292,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{}}}],["selectvalues",{"_index":1328,"title":{},"body":{"interfaces/TableFilterConfigInterface.html":{}}}],["sendheaders",{"_index":948,"title":{},"body":{"classes/G43Service.html":{}}}],["serve",{"_index":1566,"title":{},"body":{"index.html":{}}}],["server",{"_index":737,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"index.html":{}}}],["service.service",{"_index":970,"title":{},"body":{"classes/G43Service.html":{}}}],["service.service.ts",{"_index":697,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{},"coverage.html":{}}}],["service.service.ts:16",{"_index":708,"title":{},"body":{"classes/G43CoreService.html":{}}}],["service.service.ts:23",{"_index":712,"title":{},"body":{"classes/G43CoreService.html":{}}}],["service.service.ts:37",{"_index":716,"title":{},"body":{"classes/G43CoreService.html":{}}}],["service.service.ts:45",{"_index":727,"title":{},"body":{"classes/G43CoreService.html":{}}}],["service.service.ts:60",{"_index":739,"title":{},"body":{"classes/G43CoreService.html":{}}}],["service.service.ts:71",{"_index":741,"title":{},"body":{"classes/G43CoreService.html":{}}}],["service.service.ts:80",{"_index":715,"title":{},"body":{"classes/G43CoreService.html":{}}}],["service.service.ts:95",{"_index":734,"title":{},"body":{"classes/G43CoreService.html":{}}}],["service/g43",{"_index":696,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{},"coverage.html":{}}}],["service/g43.service.ts",{"_index":940,"title":{},"body":{"classes/G43Service.html":{},"coverage.html":{}}}],["service/g43.service.ts:13",{"_index":949,"title":{},"body":{"classes/G43Service.html":{}}}],["service/g43.service.ts:21",{"_index":959,"title":{},"body":{"classes/G43Service.html":{}}}],["service/g43.service.ts:27",{"_index":952,"title":{},"body":{"classes/G43Service.html":{}}}],["service/g43.service.ts:37",{"_index":956,"title":{},"body":{"classes/G43Service.html":{}}}],["service/g43.service.ts:7",{"_index":946,"title":{},"body":{"classes/G43Service.html":{}}}],["services/g43",{"_index":997,"title":{},"body":{"modules/G43TestingModule.html":{}}}],["set",{"_index":245,"title":{},"body":{"components/CoreInputComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["setdisable(value",{"_index":238,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["setdisabledstate",{"_index":204,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":230,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":253,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["setfilter",{"_index":622,"title":{},"body":{"injectables/CoreTableService.html":{},"classes/TableMaker.html":{}}}],["setfilter(key",{"_index":1370,"title":{},"body":{"classes/TableMaker.html":{}}}],["setfilter(type",{"_index":629,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["setheight(value",{"_index":1258,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["setlike",{"_index":593,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["setlike(value",{"_index":603,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["setnumberrange",{"_index":594,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["setnumberrange(min",{"_index":605,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["setselectvalue",{"_index":595,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["setselectvalue(value",{"_index":607,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["settimeout",{"_index":1178,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["setvalue",{"_index":272,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["setvalue(newvalue",{"_index":301,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["setvalue(value",{"_index":393,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["setwidth(value",{"_index":1168,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["shadow",{"_index":102,"title":{},"body":{"components/ButtonComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["shared",{"_index":688,"title":{},"body":{"modules/G43CommonModule.html":{},"modules/G43SharedPipesModule.html":{}}}],["single",{"_index":540,"title":{},"body":{"components/CoreTableComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{}}}],["size",{"_index":73,"title":{},"body":{"components/ButtonComponent.html":{},"pipes/G43FileSizePipe.html":{}}}],["size.pipe",{"_index":986,"title":{},"body":{"modules/G43SharedPipesModule.html":{}}}],["size.pipe.ts",{"_index":798,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["size.pipe.ts:11",{"_index":802,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["sizeinbytes",{"_index":803,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["sizing",{"_index":111,"title":{},"body":{"components/ButtonComponent.html":{},"components/MenuComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{}}}],["solid",{"_index":123,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/MenuTopComponent.html":{}}}],["som",{"_index":649,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["sort",{"_index":1293,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{},"classes/TableMaker.html":{}}}],["sortcolumn",{"_index":1335,"title":{},"body":{"classes/TableMaker.html":{}}}],["sorting",{"_index":1312,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"modules/G43CommonModule.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"components/G43InputComponent.html":{},"modules/G43InputModule.html":{},"injectables/G43InputService.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"modules/G43SharedPipesModule.html":{},"modules/G43TestingModule.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"modules/TableMakerModule.html":{},"injectables/TableService.html":{},"index.html":{}}}],["space",{"_index":356,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuItemComponent.html":{}}}],["spec\\.ts",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed",{"_index":82,"title":{},"body":{"components/ButtonComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{}}}],["spin",{"_index":104,"title":{},"body":{"components/ButtonComponent.html":{}}}],["spliturl",{"_index":912,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["squash",{"_index":1103,"title":{},"body":{"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["started",{"_index":1555,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1073,"title":{},"body":{"components/MenuContainerComponent.html":{},"classes/MenuItem.html":{}}}],["status",{"_index":904,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["sticky",{"_index":584,"title":{},"body":{"components/CoreTableComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{}}}],["stored",{"_index":1580,"title":{},"body":{"index.html":{}}}],["string",{"_index":36,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"classes/G43RestApiHandler.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"components/MenuContainerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{}}}],["string(a[this.sortcolumn]).localecompare(b[this.sortcolumn",{"_index":1466,"title":{},"body":{"classes/TableMaker.html":{}}}],["string(b[this.sortcolumn]).localecompare(a[this.sortcolumn",{"_index":1467,"title":{},"body":{"classes/TableMaker.html":{}}}],["string(item[filter.attribute]).includes(filter.value",{"_index":669,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["string(item[filter.attribute]).tolowercase().includes(filter.value.tolowercase",{"_index":670,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["string(text",{"_index":1464,"title":{},"body":{"classes/TableMaker.html":{}}}],["string(text).indexof(filtervalue",{"_index":1463,"title":{},"body":{"classes/TableMaker.html":{}}}],["string(this.selectedvalue",{"_index":333,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["string(this.values[0",{"_index":336,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["stringmap",{"_index":726,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["style",{"_index":129,"title":{},"body":{"components/ButtonComponent.html":{},"components/MenuComponent.html":{}}}],["style.background",{"_index":1170,"title":{},"body":{"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["style.display",{"_index":1173,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["style.filter",{"_index":1144,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["style.height.px",{"_index":1259,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["style.left.px",{"_index":1132,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["style.margin",{"_index":1137,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["style.padding",{"_index":1128,"title":{},"body":{"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["style.transform",{"_index":1134,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["style.width",{"_index":1140,"title":{},"body":{"components/MenuContentComponent.html":{}}}],["style.width.px",{"_index":1169,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["styled",{"_index":90,"title":{},"body":{"components/ButtonComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["styling",{"_index":1304,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["subscribe((data",{"_index":551,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["subscription",{"_index":469,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["success",{"_index":879,"title":{},"body":{"interfaces/G43Notification.html":{},"modules/G43TestingModule.html":{},"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":722,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["sum",{"_index":1314,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{},"classes/TableMaker.html":{},"miscellaneous/enumerations.html":{}}}],["super(http",{"_index":971,"title":{},"body":{"classes/G43Service.html":{}}}],["support",{"_index":1607,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1608,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":448,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"injectables/CoreTableService.html":{}}}],["switching",{"_index":1602,"title":{},"body":{"index.html":{}}}],["switchmap",{"_index":969,"title":{},"body":{"classes/G43Service.html":{}}}],["t",{"_index":219,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43CoreService.html":{},"classes/G43RestApiHandler.html":{},"interfaces/G43ServiceParams.html":{},"classes/MenuItem.html":{},"classes/TableMaker.html":{}}}],["tabindex",{"_index":54,"title":{},"body":{"components/ButtonComponent.html":{}}}],["table",{"_index":150,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"classes/TableMaker.html":{},"modules/TableMakerModule.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":153,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["table.appendchild(this.tablebody",{"_index":1386,"title":{},"body":{"classes/TableMaker.html":{}}}],["table.appendchild(this.tablefooter",{"_index":1394,"title":{},"body":{"classes/TableMaker.html":{}}}],["table.appendchild(this.tableheader",{"_index":1380,"title":{},"body":{"classes/TableMaker.html":{}}}],["table.component",{"_index":1479,"title":{},"body":{"modules/TableMakerModule.html":{}}}],["table.component.html",{"_index":465,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.scss",{"_index":464,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts",{"_index":459,"title":{},"body":{"components/CoreTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:108",{"_index":501,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:119",{"_index":511,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:123",{"_index":502,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:17",{"_index":490,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:18",{"_index":488,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:19",{"_index":520,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:20",{"_index":519,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:21",{"_index":517,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:22",{"_index":485,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:28",{"_index":513,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:32",{"_index":522,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:40",{"_index":503,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:60",{"_index":499,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:72",{"_index":524,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:76",{"_index":505,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:84",{"_index":497,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:92",{"_index":507,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.component.ts:98",{"_index":494,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table.service",{"_index":533,"title":{},"body":{"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{}}}],["table.service.ts",{"_index":616,"title":{},"body":{"injectables/CoreTableService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.service.ts:10",{"_index":640,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["table.service.ts:11",{"_index":635,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["table.service.ts:12",{"_index":642,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["table.service.ts:13",{"_index":638,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["table.service.ts:14",{"_index":623,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["table.service.ts:20",{"_index":628,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["table.service.ts:24",{"_index":633,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["table.service.ts:39",{"_index":626,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["table.sticky",{"_index":579,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["table/core",{"_index":458,"title":{},"body":{"components/CoreTableComponent.html":{},"modules/TableMakerModule.html":{},"coverage.html":{}}}],["tablebody",{"_index":1336,"title":{},"body":{"classes/TableMaker.html":{}}}],["tablecell",{"_index":1432,"title":{},"body":{"classes/TableMaker.html":{}}}],["tablecell.innertext",{"_index":1438,"title":{},"body":{"classes/TableMaker.html":{}}}],["tablecelltemplate",{"_index":1294,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["tablecolumnconfiginterface",{"_index":427,"title":{"interfaces/TableColumnConfigInterface.html":{}},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"classes/TableMaker.html":{},"coverage.html":{}}}],["tableconfig",{"_index":480,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["tableconfiginterface",{"_index":489,"title":{"interfaces/TableConfigInterface.html":{}},"body":{"components/CoreTableComponent.html":{},"interfaces/TableConfigInterface.html":{},"classes/TableMaker.html":{},"coverage.html":{}}}],["tablefilterconfiginterface",{"_index":599,"title":{"interfaces/TableFilterConfigInterface.html":{}},"body":{"components/CoreTableFilterComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"coverage.html":{}}}],["tablefooter",{"_index":1337,"title":{},"body":{"classes/TableMaker.html":{}}}],["tableheader",{"_index":1338,"title":{},"body":{"classes/TableMaker.html":{}}}],["tableheader.addeventlistener(\"click",{"_index":1413,"title":{},"body":{"classes/TableMaker.html":{}}}],["tableheader.appendchild(input",{"_index":1425,"title":{},"body":{"classes/TableMaker.html":{}}}],["tableheader.innertext",{"_index":1410,"title":{},"body":{"classes/TableMaker.html":{}}}],["tableheader.style.cursor",{"_index":1412,"title":{},"body":{"classes/TableMaker.html":{}}}],["tablemaker",{"_index":1332,"title":{"classes/TableMaker.html":{}},"body":{"classes/TableMaker.html":{},"coverage.html":{}}}],["tablemakermodule",{"_index":1472,"title":{"modules/TableMakerModule.html":{}},"body":{"modules/TableMakerModule.html":{},"modules.html":{},"overview.html":{}}}],["tablerow",{"_index":1405,"title":{},"body":{"classes/TableMaker.html":{}}}],["tablerow.appendchild(tablecell",{"_index":1453,"title":{},"body":{"classes/TableMaker.html":{}}}],["tablerow.appendchild(tableheader",{"_index":1417,"title":{},"body":{"classes/TableMaker.html":{}}}],["tableservice",{"_index":1480,"title":{"injectables/TableService.html":{}},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1521,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":69,"title":{},"body":{"components/ButtonComponent.html":{}}}],["tb",{"_index":810,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["td",{"_index":1299,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{},"classes/TableMaker.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableFilterConfigInterface.html":{}}}],["templateref",{"_index":1024,"title":{},"body":{"components/MenuComponent.html":{},"classes/MenuItem.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["test",{"_index":1588,"title":{},"body":{"index.html":{}}}],["testing.module.ts",{"_index":990,"title":{},"body":{"modules/G43TestingModule.html":{}}}],["tests",{"_index":1587,"title":{},"body":{"index.html":{}}}],["text",{"_index":363,"title":{},"body":{"components/CoreSelectComponent.html":{},"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{},"components/MenuItemComponent.html":{},"classes/TableMaker.html":{}}}],["textable",{"_index":91,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{}}}],["th",{"_index":583,"title":{},"body":{"components/CoreTableComponent.html":{},"interfaces/TableColumnConfigInterface.html":{}}}],["thead",{"_index":581,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["themed",{"_index":261,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["this.backdrop",{"_index":1095,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["this.check(filter",{"_index":653,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["this.checkboxes.foreach((e",{"_index":563,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.close",{"_index":329,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.column",{"_index":610,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["this.columnconfig",{"_index":444,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["this.columnconfig.contentalign",{"_index":447,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["this.columnconfig.customvalue",{"_index":445,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["this.columnconfig.customvalue(this.row",{"_index":454,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["this.columnconfig.tablecelltemplate",{"_index":446,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["this.columnconfig.type",{"_index":451,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["this.config.columns.foreach((column",{"_index":1407,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.config.columns.some((actconfig",{"_index":1388,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.config.columns.some((config",{"_index":1401,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.container.close(this",{"_index":1182,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["this.container.open(this",{"_index":1183,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["this.coretableservice.filter$.pipe",{"_index":548,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.coretableservice.filter$.subscribe((filters",{"_index":545,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.coretableservice.process(filters",{"_index":547,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.coretableservice.setfilter(this.filterconfig.type",{"_index":609,"title":{},"body":{"components/CoreTableFilterComponent.html":{}}}],["this.createbody",{"_index":1385,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.createfooter",{"_index":1393,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.createheader",{"_index":1379,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.data",{"_index":550,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.data.subscribe((data",{"_index":543,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.disable",{"_index":242,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["this.disabled",{"_index":63,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{}}}],["this.drawervisible",{"_index":1096,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["this.elementref.nativeelement.contains(event.target",{"_index":343,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.elementref.nativeelement.getattribute(\"disabled",{"_index":243,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{}}}],["this.elementref.nativeelement.innerhtml",{"_index":401,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["this.filter",{"_index":1105,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["this.filters[column",{"_index":660,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["this.filters[columntitle",{"_index":1462,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.filters[key",{"_index":1399,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.focusindex",{"_index":325,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.get",{"_index":972,"title":{},"body":{"classes/G43Service.html":{}}}],["this.getheader",{"_index":763,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["this.getimage(url",{"_index":974,"title":{},"body":{"classes/G43Service.html":{}}}],["this.getparameters(params",{"_index":765,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["this.gettext(config",{"_index":1460,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.handleerror(error",{"_index":769,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["this.http.delete(url",{"_index":764,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["this.http.get(url",{"_index":784,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["this.http.post(url",{"_index":778,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["this.http.put(url",{"_index":780,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["this.id",{"_index":650,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["this.index",{"_index":404,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["this.inputformcontrol.disable",{"_index":254,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["this.inputformcontrol.enable",{"_index":255,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["this.inputformcontrol.setvalue(value",{"_index":256,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["this.inputformcontrol.valuechanges.subscribe((value",{"_index":249,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["this.isvalidnumber(value",{"_index":1280,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["this.lastvalue",{"_index":1279,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["this.loaded",{"_index":1179,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["this.loading",{"_index":64,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.localdisabled",{"_index":248,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["this.localfilter$.next(object.values(this.filters",{"_index":661,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["this.localfilter$.pipe(debounce",{"_index":636,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["this.menuitem",{"_index":1227,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["this.menuitem.action",{"_index":1228,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["this.onchange",{"_index":251,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["this.onchange(newvalue",{"_index":340,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.onchange(this.processvalue(value",{"_index":250,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["this.onchange(this.selectedvalue",{"_index":338,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.ontouched",{"_index":252,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["this.open",{"_index":323,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.opendrawer",{"_index":1106,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["this.opendrawer.align",{"_index":1101,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["this.opendrawer.close",{"_index":1109,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["this.opendrawer.type",{"_index":1099,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["this.opendrawer.visible",{"_index":1107,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["this.opendrawer.width",{"_index":1102,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["this.opened",{"_index":320,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.path",{"_index":901,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["this.placeholder",{"_index":334,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.post",{"_index":981,"title":{},"body":{"classes/G43Service.html":{}}}],["this.realdata",{"_index":546,"title":{},"body":{"components/CoreTableComponent.html":{},"classes/G43RestApiHandler.html":{}}}],["this.realdata.find((employee",{"_index":916,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["this.realdata.findindex((employee",{"_index":919,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["this.realdata.foreach((row",{"_index":1468,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.realdata.map((row",{"_index":1435,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.realdata.push(request.body",{"_index":906,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["this.realdata.splice(indexofelementfordelete",{"_index":921,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["this.realdata[indexofupdating",{"_index":926,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["this.realheight",{"_index":1260,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["this.realwidth",{"_index":1174,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["this.router.navigate([this.menuitem.action",{"_index":1229,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["this.row[this.columnconfig.columndef",{"_index":455,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(url",{"_index":938,"title":{},"body":{"pipes/G43SafePipe.html":{}}}],["this.select.focusindex",{"_index":405,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["this.select.selecthovered",{"_index":408,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["this.selectedvalue",{"_index":332,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.setdisabledstate(value",{"_index":247,"title":{},"body":{"components/CoreInputComponent.html":{}}}],["this.setfilter(this.utils.getrowname(column",{"_index":1423,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.setvalue(this.values[this.focusindex",{"_index":328,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.sort",{"_index":1416,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.sortcolumn",{"_index":1414,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.subscription",{"_index":542,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":570,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.tablebody",{"_index":1383,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.tablebody.appendchild(newrow",{"_index":1471,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.tableconfig",{"_index":538,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.tableconfig.columns.filter((column",{"_index":557,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.tableconfig.onrowclick",{"_index":559,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.tableconfig.onrowclick(row",{"_index":560,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.tableconfig.rowclass",{"_index":567,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.tableconfig.rowclass(row",{"_index":568,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.tableconfig.selectable",{"_index":539,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.tablefooter",{"_index":1391,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.tablefooter.appendchild(createfooterrow",{"_index":1454,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.tableheader",{"_index":1377,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.tableheader.appendchild(createfilterrow",{"_index":1430,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.tableheader.appendchild(createfirstrow",{"_index":1429,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.topmenu",{"_index":1097,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["this.topmenu.height",{"_index":1098,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["this.translationservice",{"_index":553,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuItemComponent.html":{}}}],["this.translationservice.get(columnconfig.labelkey",{"_index":554,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["this.translationservice.get(menuitem.label",{"_index":1225,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["this.type",{"_index":449,"title":{},"body":{"components/CoreTableColumnComponent.html":{}}}],["this.uploadfile(url",{"_index":976,"title":{},"body":{"classes/G43Service.html":{}}}],["this.utils.createelement(\"input",{"_index":1421,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.utils.createelement(\"table",{"_index":1376,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.utils.createelement(\"tbody",{"_index":1384,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.utils.createelement(\"td",{"_index":1433,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.utils.createelement(\"tfoot",{"_index":1392,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.utils.createelement(\"th",{"_index":1408,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.utils.createelement(\"thead",{"_index":1378,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.utils.createelement(\"tr",{"_index":1406,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.utils.getrowname(config",{"_index":1459,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.values.indexof(newvalue",{"_index":339,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.values.length",{"_index":331,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.values[0",{"_index":347,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.values[this.focusindex",{"_index":337,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["this.visible",{"_index":1181,"title":{},"body":{"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["this.wrapper",{"_index":1372,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.wrapper.appendchild(table",{"_index":1395,"title":{},"body":{"classes/TableMaker.html":{}}}],["this.writevalue(this.lastvalue",{"_index":1281,"title":{},"body":{"components/NumberInputComponent.html":{}}}],["throw",{"_index":770,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{},"classes/TableMaker.html":{}}}],["throwerror",{"_index":744,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["throwerror(\"error.gatewaytimeout",{"_index":793,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["throwerror(\"error.unauthorized",{"_index":791,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["throwerror(error",{"_index":794,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["timer",{"_index":643,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["timer(this.debouncetime",{"_index":637,"title":{},"body":{"injectables/CoreTableService.html":{}}}],["title",{"_index":1310,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["todo",{"_index":888,"title":{},"body":{"classes/G43RestApiHandler.html":{},"index.html":{}}}],["toggle",{"_index":273,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["top",{"_index":116,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["top'},{'name",{"_index":169,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["top.component",{"_index":1094,"title":{},"body":{"components/MenuContainerComponent.html":{},"modules/MenuModule.html":{}}}],["top.component.html",{"_index":1248,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["top.component.scss",{"_index":1247,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["top.component.ts",{"_index":1246,"title":{},"body":{"components/MenuTopComponent.html":{},"coverage.html":{}}}],["top.component.ts:13",{"_index":1252,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["top.component.ts:14",{"_index":1250,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["top.component.ts:15",{"_index":1255,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["top.component.ts:17",{"_index":1257,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["top.component.ts:22",{"_index":1251,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["top.component.ts:26",{"_index":1254,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["top.component.ts:29",{"_index":1253,"title":{},"body":{"components/MenuTopComponent.html":{}}}],["top.px",{"_index":1129,"title":{},"body":{"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["top/menu",{"_index":1093,"title":{},"body":{"components/MenuContainerComponent.html":{},"modules/MenuModule.html":{},"components/MenuTopComponent.html":{},"coverage.html":{}}}],["topmenu",{"_index":1052,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["topoffset",{"_index":1055,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["tr",{"_index":582,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["trackbyfn",{"_index":477,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["trackbyfn(index",{"_index":509,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["transform",{"_index":105,"title":{},"body":{"components/ButtonComponent.html":{},"pipes/G43FileSizePipe.html":{},"pipes/G43SafePipe.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{}}}],["transform(sizeinbytes",{"_index":800,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["transform(url",{"_index":930,"title":{},"body":{"pipes/G43SafePipe.html":{}}}],["transition",{"_index":1110,"title":{},"body":{"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["translate",{"_index":1010,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["translate/core",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["translate/g43",{"_index":999,"title":{},"body":{"interfaces/G43Translation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["translate/http",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["translatex",{"_index":1135,"title":{},"body":{"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["translatex(0",{"_index":1192,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["translatex(100",{"_index":1184,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["translation.interface.ts",{"_index":1000,"title":{},"body":{"interfaces/G43Translation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["translation.interface.ts:11",{"_index":1009,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["translation.interface.ts:15",{"_index":1013,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["translation.interface.ts:17",{"_index":1005,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["translation.interface.ts:5",{"_index":1007,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["translationservice",{"_index":486,"title":{},"body":{"components/CoreTableComponent.html":{},"components/MenuComponent.html":{},"components/MenuItemComponent.html":{}}}],["transparent",{"_index":109,"title":{},"body":{"components/ButtonComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["true",{"_index":191,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"injectables/CoreTableService.html":{},"classes/G43Service.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/NumberInputComponent.html":{},"classes/TableMaker.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":315,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"classes/G43CoreService.html":{},"pipes/G43FileSizePipe.html":{},"interfaces/G43Notification.html":{},"classes/G43RestApiHandler.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"interfaces/TableConfigInterface.html":{},"interfaces/TableFilterConfigInterface.html":{},"classes/TableMaker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeof",{"_index":452,"title":{},"body":{"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuItemComponent.html":{},"classes/TableMaker.html":{}}}],["ul",{"_index":1038,"title":{},"body":{"components/MenuComponent.html":{}}}],["undefined",{"_index":973,"title":{},"body":{"classes/G43Service.html":{}}}],["unit",{"_index":837,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"index.html":{}}}],["units",{"_index":824,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["units.length",{"_index":829,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["units[power",{"_index":838,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["up",{"_index":834,"title":{},"body":{"pipes/G43FileSizePipe.html":{}}}],["update",{"_index":924,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["uploadfile",{"_index":943,"title":{},"body":{"classes/G43Service.html":{}}}],["uploadfile(url",{"_index":950,"title":{},"body":{"classes/G43Service.html":{}}}],["uploadfiles",{"_index":944,"title":{},"body":{"classes/G43Service.html":{}}}],["uploadfiles(url",{"_index":954,"title":{},"body":{"classes/G43Service.html":{}}}],["uploadlink",{"_index":945,"title":{},"body":{"classes/G43Service.html":{}}}],["uploadlink(url",{"_index":957,"title":{},"body":{"classes/G43Service.html":{}}}],["uppercaseheader",{"_index":1325,"title":{},"body":{"interfaces/TableConfigInterface.html":{}}}],["url",{"_index":729,"title":{},"body":{"classes/G43CoreService.html":{},"pipes/G43SafePipe.html":{},"classes/G43Service.html":{},"interfaces/G43ServiceParams.html":{}}}],["usage",{"_index":1297,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["use",{"_index":893,"title":{},"body":{"classes/G43RestApiHandler.html":{},"interfaces/G43Translation.html":{},"index.html":{}}}],["use(lang",{"_index":1012,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["use(request",{"_index":897,"title":{},"body":{"classes/G43RestApiHandler.html":{}}}],["use?(lang",{"_index":1015,"title":{},"body":{"interfaces/G43Translation.html":{}}}],["used",{"_index":1330,"title":{},"body":{"interfaces/TableFilterConfigInterface.html":{}}}],["useexisting",{"_index":188,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["user",{"_index":1230,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["usevalue",{"_index":998,"title":{},"body":{"modules/G43TestingModule.html":{}}}],["utils",{"_index":1339,"title":{},"body":{"classes/TableMaker.html":{}}}],["val",{"_index":1447,"title":{},"body":{"classes/TableMaker.html":{}}}],["value",{"_index":31,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"classes/FilterModel.html":{},"pipes/G43FileSizePipe.html":{},"classes/G43Service.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/MenuItem.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableColumnConfigInterface.html":{},"classes/TableMaker.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":400,"title":{},"body":{"directives/CoreSelectOptionDirective.html":{}}}],["values",{"_index":274,"title":{},"body":{"components/CoreSelectComponent.html":{},"interfaces/TableFilterConfigInterface.html":{}}}],["var",{"_index":140,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/G43InputComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{}}}],["variable",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1611,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1561,"title":{},"body":{"index.html":{}}}],["via",{"_index":1590,"title":{},"body":{"index.html":{}}}],["viewchildren",{"_index":526,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["viewchildren(\"selectioncheckbox",{"_index":534,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["viewchildren('selectioncheckbox",{"_index":516,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["viewchildren(coretablefiltercomponent",{"_index":518,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["viewencapsulation",{"_index":527,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["viewencapsulation.none",{"_index":462,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["visibility",{"_index":1116,"title":{},"body":{"components/MenuContainerComponent.html":{}}}],["visible",{"_index":1117,"title":{},"body":{"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{},"interfaces/TableColumnConfigInterface.html":{}}}],["visiblecolumns",{"_index":482,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["visiblevalue",{"_index":279,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["void",{"_index":48,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"directives/CoreSelectOptionDirective.html":{},"components/CoreTableColumnComponent.html":{},"components/CoreTableComponent.html":{},"components/CoreTableFilterComponent.html":{},"injectables/CoreTableService.html":{},"components/G43InputComponent.html":{},"interfaces/G43Notification.html":{},"interfaces/G43Translation.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuTopComponent.html":{},"components/NumberInputComponent.html":{},"interfaces/TableConfigInterface.html":{},"classes/TableMaker.html":{}}}],["warning",{"_index":1553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["weight",{"_index":1234,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["white",{"_index":373,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/CoreTableComponent.html":{},"components/MenuItemComponent.html":{}}}],["whose",{"_index":1301,"title":{},"body":{"interfaces/TableColumnConfigInterface.html":{}}}],["width",{"_index":80,"title":{},"body":{"components/ButtonComponent.html":{},"components/CoreSelectComponent.html":{},"components/CoreTableFilterComponent.html":{},"components/MenuComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuContentComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{},"interfaces/TableColumnConfigInterface.html":{}}}],["width(value",{"_index":1175,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["widthfor",{"_index":478,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["widthfor(columnconfig",{"_index":512,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["window.innerwidth",{"_index":1177,"title":{},"body":{"components/MenuDrawerComponent.html":{}}}],["window.location.hash",{"_index":789,"title":{},"body":{"classes/G43CoreService.html":{},"interfaces/G43ServiceParams.html":{}}}],["works",{"_index":841,"title":{},"body":{"components/G43InputComponent.html":{}}}],["wrap",{"_index":354,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["wrapper",{"_index":313,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuComponent.html":{},"components/MenuDrawerComponent.html":{},"classes/TableMaker.html":{}}}],["writevalue",{"_index":205,"title":{},"body":{"components/CoreInputComponent.html":{},"components/CoreSelectComponent.html":{},"components/NumberInputComponent.html":{}}}],["writevalue(obj",{"_index":305,"title":{},"body":{"components/CoreSelectComponent.html":{}}}],["writevalue(value",{"_index":233,"title":{},"body":{"components/CoreInputComponent.html":{},"components/NumberInputComponent.html":{}}}],["x",{"_index":1043,"title":{},"body":{"components/MenuComponent.html":{}}}],["x1f589",{"_index":573,"title":{},"body":{"components/CoreTableComponent.html":{}}}],["y",{"_index":370,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuComponent.html":{},"components/MenuDrawerComponent.html":{}}}],["yb",{"_index":814,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":731,"title":{},"body":{"classes/G43CoreService.html":{},"classes/G43Service.html":{},"classes/MenuItem.html":{}}}],["yottabytes",{"_index":823,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["z",{"_index":371,"title":{},"body":{"components/CoreSelectComponent.html":{},"components/MenuContainerComponent.html":{},"components/MenuDrawerComponent.html":{},"components/MenuTopComponent.html":{}}}],["zb",{"_index":813,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["zettabytes",{"_index":822,"title":{},"body":{"pipes/G43FileSizePipe.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":849,"title":{},"body":{"modules/G43InputModule.html":{},"modules/G43SharedPipesModule.html":{},"modules/MenuModule.html":{},"modules/TableMakerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/input/src/lib/components/button/button.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                button[g43-button], a[g43-button]\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                inline\n                            \n                            \n                                loading\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/button/button.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/button/button.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inline\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/button/button.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/button/button.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/button/button.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkClick($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/button/button.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from \"@angular/core\";\n\n@Component({\n    selector: \"button[g43-button], a[g43-button]\",\n    templateUrl: \"./button.component.html\",\n    styleUrls: [\"./button.component.scss\"],\n    inputs: [\"disabled\"],\n    host: {\n        \"[class.loading]\": \"loading\",\n        \"[class.inline]\": \"inline\",\n        \"[tabindex]\": \"disabled ? -1 : 0\",\n        // \"[attr.disabled]\": \"disabled || loading || null\",\n        \"[class.disabled]\": \"disabled || loading || null\",\n        \"(click)\": \"checkClick($event)\"\n    }\n})\nexport class ButtonComponent {\n    @Input() public value: string;\n    @Input() public icon: string;\n    @Input() public inline: boolean;\n    @Input() public loading: boolean;\n    @Input() public disabled: boolean;\n\n\n    public checkClick($event: Event): void {\n        if (this.disabled || this.loading) {\n            $event.preventDefault();\n            $event.stopImmediatePropagation();\n        }\n    }\n}\n\n    \n\n    \n        \n{{icon}}\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                @import \"projects/input/src/lib/input-styles\";\n\n$breakpoint-tablet: 765px !default;\n\n$loader-size: 1.28571429em;\n$loader-background: rgba(0, 0, 0, .15);\n$loader-color: #fff;\n$loader-width: .2em;\n$loader-speed: .6s;\n\n:host {\n    @extend .cursored;\n    @extend .centered;\n    padding: 14px 24px;\n\n    &.styled {\n        @extend .textable;\n        @extend .radiusable;\n        @extend .bordered;\n        @extend .backgrounded;\n\n        &:not(.loading):not(.disabled) {\n            &:focus, &:active:focus {\n                outline: 0 none;\n            }\n\n            &:active {\n                box-shadow: none;\n            }\n        }\n    }\n\n    @keyframes button-spin {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n\n    &.loading {\n        &, &:focus, &:hover {\n            color: transparent;\n        }\n\n        &:before, &:after {\n            box-sizing: border-box;\n            position: absolute;\n            content: '';\n            top: 50%;\n            left: 50%;\n            margin: -.64285714em 0 0 -.64285714em;\n            width: $loader-size;\n            height: $loader-size;\n            border-radius: 50%;\n        }\n\n        &:before {\n            border: .2em solid $loader-background;\n        }\n\n        &:after {\n            animation: button-spin $loader-speed linear;\n            animation-iteration-count: infinite;\n            border-color: $loader-color transparent transparent;\n            border-style: solid;\n            border-width: $loader-width;\n            box-shadow: 0 0 0 1px transparent;\n        }\n    }\n}\n\n@media only screen and (max-width: $breakpoint-tablet) {\n    :host {\n        padding: 8px 16px;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{icon}}'\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreInputComponent.html":{"url":"components/CoreInputComponent.html","title":"component - CoreInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/input/src/lib/components/core-input/core-input.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CoreInputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                g43-core-input\n            \n\n            \n                styleUrls\n                ./core-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                inputFormControl\n                            \n                            \n                                    Public\n                                localDisabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onTouched\n                            \n                            \n                                    Protected\n                                processValue\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                    Optional\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disable\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/input/src/lib/components/core-input/core-input.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChange(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTouched(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processValue(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Optional\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl(\"\")\n                        \n                    \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disable\n                    \n                \n\n\n                \n                    \n                        setdisable(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/input/src/lib/components/core-input/core-input.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, forwardRef, Input, OnInit} from \"@angular/core\";\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from \"@angular/forms\";\n\n@Component({\n    selector: \"g43-core-input\",\n    templateUrl: \"./core-input.component.html\",\n    styleUrls: [\"./core-input.component.scss\"],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => CoreInputComponent),\n            multi: true\n        }\n    ]\n})\nexport class CoreInputComponent implements OnInit, ControlValueAccessor {\n    @Input() public label?: string;\n    @Input() public placeholder?: string;\n    public inputFormControl = new FormControl(\"\");\n    public localDisabled: boolean;\n\n    public constructor(private readonly elementRef: ElementRef) {\n        this.disable = !!this.elementRef.nativeElement.getAttribute(\"disabled\");\n    }\n\n    @Input(\"disabled\")\n    public set disable(value: boolean) {\n        this.setDisabledState(value);\n        this.localDisabled = value;\n    }\n\n    public ngOnInit() {\n        this.inputFormControl.valueChanges.subscribe((value) => {\n            this.onChange(this.processValue(value));\n        });\n    }\n\n    public onChange(value: T): void {\n    }\n\n    public onTouched(value: T): void {\n    }\n\n    public registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    public setDisabledState?(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.inputFormControl.disable();\n        } else {\n            this.inputFormControl.enable();\n        }\n    }\n\n    public writeValue(value: T): void {\n        this.inputFormControl.setValue(value || \"\", {emitEvent: false});\n    }\n\n    protected processValue(value: T): T {\n        return value;\n    }\n\n}\n\n    \n\n    \n        \n    {{label}}\n    \n\n\n    \n\n    \n                \n                    ./core-input.component.scss\n                \n                @import \"projects/input/src/lib/input-styles\";\n\ninput {\n    @extend .basic-input;\n    @extend .themed;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{label}}    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreSelectComponent.html":{"url":"components/CoreSelectComponent.html","title":"component - CoreSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/input/src/lib/components/core-select/core-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CoreSelectComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                g43-core-select\n            \n\n            \n                styleUrls\n                ./core-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                focusIndex\n                            \n                            \n                                    Public\n                                opened\n                            \n                            \n                                    Public\n                                selectedValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onTouched\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                selectHovered\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                setValue\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                            \n                                document:keydown.escape\n                            \n                            \n                                keydown\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    visibleValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/input/src/lib/components/core-select/core-select.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Default value : !!this.elementRef.nativeElement.getAttribute(\"disabled\")\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:91\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            document:keydown.escape\n                        \n                        \n                    \n                \n            \n            \n                \ndocument:keydown.escape()\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:98\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keydown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeydown(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:35\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChange(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTouched(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectHovered\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectHovered()\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(newValue: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(obj: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            focusIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visibleValue\n                    \n                \n\n                \n                    \n                        getvisibleValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/input/src/lib/components/core-select/core-select.component.ts:64\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, forwardRef, HostListener, Input, OnInit} from \"@angular/core\";\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\n\n@Component({\n    selector: \"g43-core-select\",\n    templateUrl: \"./core-select.component.html\",\n    styleUrls: [\"./core-select.component.scss\"],\n    host: {\n        \"class\": \"select-wrapper\",\n        \"[class.disabled]\": \"disabled\",\n    },\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => CoreSelectComponent),\n            multi: true\n        }\n    ]\n})\nexport class CoreSelectComponent implements OnInit, ControlValueAccessor {\n    @Input() public values: T[] = [];\n    @Input() public placeholder: string;\n    @Input() public label: string;\n\n    @Input() public disabled = !!this.elementRef.nativeElement.getAttribute(\"disabled\");\n    public selectedValue: T;\n    public focusIndex = 0;\n    public opened = false;\n\n    public constructor(private readonly elementRef: ElementRef) {\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    // tslint:disable-next-line:no-invariant-return\n    public onKeyDown(event: KeyboardEvent): boolean {\n        if (this.disabled) {\n            return true;\n        }\n        if (!this.opened) {\n            if (event.code === \"Enter\") {\n                this.open();\n\n                return false;\n            }\n\n            return true;\n        }\n        console.log(event.code, this.focusIndex, this.opened);\n        if (event.code === \"ArrowDown\") {\n            this.focusIndex++;\n        } else if (event.code === \"ArrowUp\") {\n            this.focusIndex--;\n        } else if (event.code === \"Enter\") {\n            this.setValue(this.values[this.focusIndex]);\n            this.close();\n\n            return false;\n        }\n        this.focusIndex = Math.min(Math.max(0, this.focusIndex), this.values.length - 1);\n\n        return false;\n    }\n\n    public get visibleValue(): string {\n        if (this.selectedValue) {\n            return String(this.selectedValue);\n        }\n        if (this.placeholder) {\n            return this.placeholder;\n        }\n        if (Array.isArray(this.values) && this.values.length) {\n            return String(this.values[0]);\n        }\n\n        return \"\";\n    }\n\n    public selectHovered(): void {\n        this.selectedValue = this.values[this.focusIndex];\n        this.onChange(this.selectedValue);\n        this.close();\n    }\n\n    public setValue(newValue: T): void {\n        this.selectedValue = newValue;\n        this.focusIndex = this.values.indexOf(newValue);\n        this.onChange(newValue);\n    }\n\n    @HostListener(\"document:click\", [\"$event\"])\n    public onclick(event: MouseEvent): void {\n        if (!this.elementRef.nativeElement.contains(event.target)) {\n            this.close();\n        }\n    }\n\n    @HostListener(\"document:keydown.escape\")\n    public close(): void {\n        this.opened = false;\n    }\n\n    public open(): void {\n        this.opened = true;\n    }\n\n    public toggle(): void {\n        this.opened ? this.close() : this.open();\n    }\n\n    public onChange(value: T): void {\n        // empty\n    }\n\n    public onTouched(value: T): void {\n        // empty\n    }\n\n    public registerOnChange(fn: any): void {\n        this.onChange = fn;\n        this.onChange(this.selectedValue || (Array.isArray(this.values) && this.values[0]) || null);\n    }\n\n    public registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean): void {\n    }\n\n    public writeValue(obj: T): void {\n        this.selectedValue = obj;\n    }\n\n\n    public ngOnInit(): void {\n    }\n\n}\n\n    \n\n    \n        {{label}}\n\n    \n        {{visibleValue}}\n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./core-select.component.scss\n                \n                @import \"projects/input/src/lib/input-styles\";\n\n\n:host {\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n    .options {\n        @extend .cursored;\n\n        .select-input {\n            @extend .backgrounded;\n            @extend .radiusable;\n            @extend .bordered;\n            @extend .textable;\n\n            margin: 0;\n            max-width: 100%;\n            min-width: 100px;\n            flex: 1 1 auto;\n            position: relative;\n\n            text-align: left;\n            line-height: $input-height;\n            padding: $input-padding 1em;\n        }\n\n        .select-options {\n            position: absolute;\n            top: 100%;\n            border: 1px solid beige;;\n            width: 100%;\n            right: 0;\n            max-height: 150px;\n            overflow-y: auto;\n            z-index: 3;\n            background: white;\n\n            .select-option {\n                cursor: pointer;\n                padding: $input-padding/2 1em;\n\n                &.focused {\n                    background: $primary-color-hover;\n                }\n            }\n        }\n    }\n\n    &.disabled {\n        pointer-events: none;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}            {{visibleValue}}                    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CoreSelectOptionDirective.html":{"url":"directives/CoreSelectOptionDirective.html","title":"directive - CoreSelectOptionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CoreSelectOptionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/input/src/lib/components/core-select/core-select-option.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [g43CoreSelectOption]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                parent\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.focused\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseenter\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/input/src/lib/components/core-select/core-select-option.directive.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-select/core-select-option.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                \n                \n                    \n                        Type :         CoreSelectComponent\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-select/core-select-option.directive.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-select/core-select-option.directive.ts:15\n                            \n                        \n            \n        \n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.focused\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/input/src/lib/components/core-select/core-select-option.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select-option.directive.ts:25\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n            \n                \nmouseenter()\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/core-select/core-select-option.directive.ts:30\n                \n            \n\n\n        \n    \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n\n                \n                    \n                        setvalue(value: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/input/src/lib/components/core-select/core-select-option.directive.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {Directive, ElementRef, HostBinding, HostListener, Input} from \"@angular/core\";\nimport {CoreSelectComponent} from \"./core-select.component\";\n\n@Directive({\n    selector: \"[g43CoreSelectOption]\",\n    host: {\n        class: \"select-option\"\n    },\n})\nexport class CoreSelectOptionDirective {\n    @Input(\"index\") public index: number;\n    @Input(\"parent\") private select: CoreSelectComponent;\n\n    @Input(\"value\")\n    public set value(value: any) {\n        this.elementRef.nativeElement.innerHTML = value;\n    }\n\n    @HostBinding(\"class.focused\")\n    private get focues(): boolean {\n        return this.index === this.select.focusIndex;\n    }\n\n    @HostListener(\"click\")\n    private onClick(): void {\n        this.select.selectHovered();\n    }\n\n    @HostListener(\"mouseenter\")\n    private onMouseEnter(): void {\n        this.select.focusIndex = this.index;\n    }\n\n    public constructor(private readonly elementRef: ElementRef) {\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreTableColumnComponent.html":{"url":"components/CoreTableColumnComponent.html","title":"component - CoreTableColumnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreTableColumnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/table/src/lib/components/core-table-column/core-table-column.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                g43-table-column\n            \n\n            \n                styleUrls\n                ./core-table-column.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-table-column.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnConfig\n                            \n                            \n                                columnIndex\n                            \n                            \n                                edited\n                            \n                            \n                                row\n                            \n                            \n                                rowIndex\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editable\n                                \n                                \n                                    contentAlign\n                                \n                                \n                                    type\n                                \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in projects/table/src/lib/components/core-table-column/core-table-column.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columnConfig\n                    \n                \n                \n                    \n                        Type :         TableColumnConfigInterface\n\n                    \n                \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table-column/core-table-column.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table-column/core-table-column.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edited\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table-column/core-table-column.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        row\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table-column/core-table-column.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rowIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table-column/core-table-column.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table-column/core-table-column.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n\n                \n                    \n                        geteditable()\n                    \n                \n                            \n                                \n                                    Defined in projects/table/src/lib/components/core-table-column/core-table-column.component.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        contentAlign\n                    \n                \n\n                \n                    \n                        getcontentAlign()\n                    \n                \n                            \n                                \n                                    Defined in projects/table/src/lib/components/core-table-column/core-table-column.component.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/table/src/lib/components/core-table-column/core-table-column.component.ts:50\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/table/src/lib/components/core-table-column/core-table-column.component.ts:61\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {ChangeDetectionStrategy, Component, Input, OnInit} from \"@angular/core\";\nimport {TableColumnConfigInterface} from \"../../interfaces/table-column-config.interface\";\n\n@Component({\n    selector: \"g43-table-column\",\n    templateUrl: \"./core-table-column.component.html\",\n    styleUrls: [\"./core-table-column.component.scss\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CoreTableColumnComponent implements OnInit {\n    @Input() public columnConfig: TableColumnConfigInterface;\n    @Input() public rowIndex: number;\n    @Input() public columnIndex: number;\n    @Input() public edited = true;\n    @Input() public row: any;\n\n    public constructor() {\n    }\n\n    public get editable() {\n        if (!this.columnConfig) {\n            return false;\n        }\n\n        if (this.columnConfig.customValue) {\n            return false;\n        }\n        if (this.columnConfig.tableCellTemplate) {\n            return false;\n        }\n\n        return !this.columnConfig.tableCellTemplate;\n    }\n\n    public get contentAlign(): string {\n        if (!this.columnConfig.contentAlign) {\n            switch (this.type) {\n                case \"boolean\":\n                    return \"center\";\n                case \"number\":\n                    return \"right\";\n                default:\n                    return \"left\";\n            }\n        }\n\n        return this.columnConfig.contentAlign;\n    }\n\n    public get type() {\n        if (this.columnConfig.tableCellTemplate) {\n            return \"template\";\n        }\n        if (!this.columnConfig.type) {\n            return \"string\";\n        }\n\n        return this.columnConfig.type;\n    }\n\n    public get value() {\n        if (!this.columnConfig) {\n            return null;\n        }\n        if (typeof this.columnConfig.customValue === \"function\") {\n            return this.columnConfig.customValue(this.row);\n        }\n\n        return this.row[this.columnConfig.columnDef];\n    }\n\n    public ngOnInit(): void {\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n    \n        {{value | date: columnConfig.format}}\n    \n    \n        {{value}}\n    \n\n\n    \n\n    \n                \n                    ./core-table-column.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{value | date: columnConfig.format}}                {{value}}    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreTableColumnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreTableComponent.html":{"url":"components/CoreTableComponent.html","title":"component - CoreTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/table/src/lib/components/core-table/core-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                CoreTableService\n                \n            \n\n\n            \n                selector\n                g43-table\n            \n\n            \n                styleUrls\n                ./core-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkboxes\n                            \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Public\n                                realData\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeCheckbox\n                            \n                            \n                                    Public\n                                getCellClass\n                            \n                            \n                                    Public\n                                getLabel\n                            \n                            \n                                    Public\n                                getRowClass\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onRowClick\n                            \n                            \n                                    Public\n                                onSelectAll\n                            \n                            \n                                    Public\n                                trackByFn\n                            \n                            \n                                    Public\n                                widthFor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                tableConfig\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasSelection\n                                \n                                \n                                    visibleColumns\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(translationService: G43Translation, coreTableService: CoreTableService)\n                    \n                \n                        \n                            \n                                Defined in projects/table/src/lib/components/core-table/core-table.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        G43Translation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        coreTableService\n                                                  \n                                                        \n                                                                        CoreTableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tableConfig\n                    \n                \n                \n                    \n                        Type :         TableConfigInterface\n\n                    \n                \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeCheckbox\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeCheckbox(row: any, checkboxInput: HTMLInputElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkboxInput\n                                    \n                                            HTMLInputElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCellClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellClass(row: any, rowIndex: number, columnIndex: number, config: TableColumnConfigInterface)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rowIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    columnIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                TableColumnConfigInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLabel(columnConfig: TableColumnConfigInterface)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    columnConfig\n                                    \n                                                TableColumnConfigInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRowClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRowClass(row: any, rowIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rowIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onRowClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onRowClick(row: any, rowIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rowIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelectAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelectAll(selectAll: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectAll\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackByFn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackByFn(index, item)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            widthFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    widthFor(columnConfig: TableColumnConfigInterface)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    columnConfig\n                                    \n                                                TableColumnConfigInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            checkboxes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('selectionCheckbox')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(CoreTableFilterComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            realData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasSelection\n                    \n                \n\n                \n                    \n                        gethasSelection()\n                    \n                \n                            \n                                \n                                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        visibleColumns\n                    \n                \n\n                \n                    \n                        getvisibleColumns()\n                    \n                \n                            \n                                \n                                    Defined in projects/table/src/lib/components/core-table/core-table.component.ts:72\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, Inject, Input, OnDestroy, OnInit, Optional, QueryList, ViewChildren, ViewEncapsulation} from \"@angular/core\";\nimport {G43_TRANSLATE_TOKEN, G43Translation} from \"@g43/common\";\nimport {Observable, of, Subscription} from \"rxjs\";\nimport {TableColumnConfigInterface} from \"../../interfaces/table-column-config.interface\";\nimport {TableConfigInterface} from \"../../interfaces/table-config.interface\";\nimport {CoreTableFilterComponent} from \"../core-table-filter/core-table-filter.component\";\nimport {CoreTableService} from \"../core-table.service\";\n\n@Component({\n    selector: \"g43-table\",\n    templateUrl: \"./core-table.component.html\",\n    styleUrls: [\"./core-table.component.scss\"],\n    providers: [CoreTableService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class CoreTableComponent implements OnInit, OnDestroy {\n    @Input() public tableConfig: TableConfigInterface;\n    @Input() public data: Observable;\n    public realData: any[];\n    @ViewChildren(CoreTableFilterComponent) public filters: QueryList;\n    @ViewChildren(\"selectionCheckbox\") public checkboxes: QueryList>;\n    private subscription: Subscription;\n\n    public constructor(@Optional() @Inject(G43_TRANSLATE_TOKEN) private readonly translationService: G43Translation,\n                       private readonly coreTableService: CoreTableService) {\n    }\n\n    public widthFor(columnConfig: TableColumnConfigInterface): string {\n        return columnConfig.width || \"auto\";\n    }\n\n    public get hasSelection(): boolean {\n        if (!this.tableConfig) {\n            return false;\n        }\n\n        return this.tableConfig.selectable === \"MULTI\" || this.tableConfig.selectable === \"SINGLE\";\n    }\n\n    public ngOnInit(): void {\n        let innerSubscription;\n        this.subscription = this.data.subscribe((data) => {\n            if (innerSubscription) {\n                innerSubscription.unsubscribe();\n            }\n            innerSubscription = this.coreTableService.filter$.subscribe((filters) => {\n                this.realData = this.coreTableService.process(filters, data);\n            });\n        });\n\n        // this.coreTableService.filter$.pipe(\n        //     mergeMap(() => this.data, (filters, data) => {\n        //         return this.coreTableService.process(filters, data);\n        //     })\n        // ).subscribe((data) => {\n        //     this.realData = data;\n        // });\n    }\n\n    public getLabel(columnConfig: TableColumnConfigInterface): Observable {\n        if (columnConfig.labelKey) {\n            if (this.translationService) {\n                return this.translationService.get(columnConfig.labelKey);\n            }\n\n            return of(columnConfig.labelKey);\n        }\n\n        return of(columnConfig.label);\n    }\n\n    public get visibleColumns(): TableColumnConfigInterface[] {\n        return this.tableConfig.columns.filter((column) => column.visible !== false);\n    }\n\n    public onRowClick(row: any, rowIndex: number) {\n        if (typeof this.tableConfig.onRowClick !== \"function\") {\n            return;\n        }\n\n        this.tableConfig.onRowClick(row, rowIndex);\n    }\n\n    public getCellClass(row: any, rowIndex: number, columnIndex: number, config: TableColumnConfigInterface): string {\n        if (typeof config.cellClass !== \"function\") {\n            return \"\";\n        }\n\n        return config.cellClass(row, rowIndex, columnIndex);\n    }\n\n    public onSelectAll(selectAll: boolean): void {\n        this.checkboxes.forEach((e) => {\n            e.nativeElement.checked = selectAll;\n        });\n    }\n\n    public changeCheckbox(row: any, checkboxInput: HTMLInputElement): void {\n        if (this.tableConfig.selectable === \"SINGLE\") {\n            const value = checkboxInput.checked;\n            this.checkboxes.forEach((e) => {\n                e.nativeElement.checked = false;\n            });\n            checkboxInput.checked = value;\n        }\n    }\n\n    public getRowClass(row: any, rowIndex: number): string {\n        switch (typeof this.tableConfig.rowClass) {\n            case \"function\":\n                return this.tableConfig.rowClass(row, rowIndex);\n            case \"string\":\n                return this.tableConfig.rowClass;\n            default:\n                return \"\";\n        }\n    }\n\n    public trackByFn(index, item) {\n        return item.id;\n    }\n\n    public ngOnDestroy(): void {\n        this.subscription.unsubscribe();\n    }\n\n}\n\n\n    \n\n    \n        \n    \n    \n        \n        \n            {{getLabel(column) | async}}\n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n    \n    \n    \n        \n            \n        \n        \n            \n        \n        \n            &#x1F589;\n        \n        \n            ✔\n            ⨯\n        \n        -->\n        \n    \n    \n\n\n    \n\n    \n                \n                    ./core-table.component.scss\n                \n                .editButton {\n    cursor: pointer;\n    padding: 3px;\n}\n\n.editButton:hover {\n    color: white;\n    background-color: black;\n    overflow: hidden;\n    border-radius: 50%;\n}\n\ntable.sticky {\n    border-collapse: collapse;\n\n    thead {\n        tr {\n            th {\n                position: sticky;\n                height: 20px;\n            }\n\n            &:first-child {\n                th {\n                    top: 0;\n                }\n            }\n\n            &:last-child {\n                th {\n                    top: 20px;\n                }\n            }\n        }\n    }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{getLabel(column) | async}}                                                                                                                                                                    🖉                            ✔            ⨯                -->                '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreTableFilterComponent.html":{"url":"components/CoreTableFilterComponent.html","title":"component - CoreTableFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreTableFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/table/src/lib/components/core-table-filter/core-table-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                g43-table-filter\n            \n\n            \n                styleUrls\n                ./core-table-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-table-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                setLike\n                            \n                            \n                                    Public\n                                setNumberRange\n                            \n                            \n                                    Public\n                                setSelectValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                filterConfig\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(coreTableService: CoreTableService)\n                    \n                \n                        \n                            \n                                Defined in projects/table/src/lib/components/core-table-filter/core-table-filter.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coreTableService\n                                                  \n                                                        \n                                                                        CoreTableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table-filter/core-table-filter.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filterConfig\n                    \n                \n                \n                    \n                        Type :         TableFilterConfigInterface\n\n                    \n                \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table-filter/core-table-filter.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table-filter/core-table-filter.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table-filter/core-table-filter.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLike\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLike(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table-filter/core-table-filter.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setNumberRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setNumberRange(min: string, max: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table-filter/core-table-filter.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSelectValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSelectValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table-filter/core-table-filter.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {ChangeDetectionStrategy, Component, Input, OnInit} from \"@angular/core\";\nimport {TableFilterConfigInterface} from \"../../interfaces/table-filter-config.interface\";\nimport {CoreTableService} from \"../core-table.service\";\n\n@Component({\n    selector: \"g43-table-filter\",\n    templateUrl: \"./core-table-filter.component.html\",\n    styleUrls: [\"./core-table-filter.component.scss\"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CoreTableFilterComponent implements OnInit {\n    @Input() public filterConfig: TableFilterConfigInterface;\n    @Input() public width: string;\n    @Input() public column: string;\n\n    public constructor(private readonly coreTableService: CoreTableService) {\n    }\n\n    public ngOnInit(): void {\n    }\n\n\n    public setSelectValue(value: string): void {\n        this.coreTableService.setFilter(this.filterConfig.type, value, this.column);\n    }\n\n    public setNumberRange(min: string, max: string): void {\n        this.coreTableService.setFilter(this.filterConfig.type, {min, max}, this.column);\n    }\n\n    public setLike(value: string): void {\n        this.coreTableService.setFilter(this.filterConfig.type, value, this.column);\n    }\n}\n\n    \n\n    \n        \n    \n        \n        \n    \n    \n        \n        \n    \n    \n        \n            \n                {{selectData.key}}\n            \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./core-table-filter.component.scss\n                \n                .range {\n    width: 45%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        {{selectData.key}}                                        '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreTableFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreTableService.html":{"url":"injectables/CoreTableService.html","title":"injectable - CoreTableService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CoreTableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/table/src/lib/components/core-table.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debounceTime\n                            \n                            \n                                    Public\n                                filter$\n                            \n                            \n                                    Private\n                                filters\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Private\n                                    Readonly\n                                localFilter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                check\n                            \n                            \n                                    Public\n                                process\n                            \n                            \n                                    Public\n                                setFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in projects/table/src/lib/components/core-table.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            check\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    check(filter: FilterModel, item: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            process\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    process(filters: FilterModel[], data: T[])\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                FilterModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFilter(type: \"STRING\" | \"NUMBER\" | \"BOOLEAN\" | \"SELECT\" | \"DATE_RANGE\" | \"NUMBER_RANGE\", value: string | literal type, column: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/components/core-table.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"STRING\" | \"NUMBER\" | \"BOOLEAN\" | \"SELECT\" | \"DATE_RANGE\" | \"NUMBER_RANGE\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            string | literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    column\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            debounceTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.localFilter$.pipe(debounce(() => timer(this.debounceTime)))\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : counter++\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            localFilter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/components/core-table.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {BehaviorSubject, timer} from \"rxjs\";\nimport {debounce} from \"rxjs/operators\";\nimport {FilterModel} from \"../models/filter.model\";\n\nlet counter = 1;\n\n@Injectable()\nexport class CoreTableService {\n    public readonly id = counter++;\n    public debounceTime = 200;\n    private readonly localFilter$ = new BehaviorSubject([]);\n    public filter$ = this.localFilter$.pipe(debounce(() => timer(this.debounceTime)));\n    private filters: { [key: string]: FilterModel } = {};\n\n    public constructor() {\n        console.log(\"ja som CoreTableService \" + this.id);\n    }\n\n    public process(filters: FilterModel[], data: T[]): T[] {\n        return data.filter((item) => filters.every((filter) => this.check(filter, item)));\n    }\n\n    public setFilter(type: \"STRING\" | \"NUMBER\" | \"BOOLEAN\" | \"SELECT\" | \"DATE_RANGE\" | \"NUMBER_RANGE\", value: string | { min: number | string, max: number | string }, column: string): void {\n        const newFilter = new FilterModel();\n        newFilter.value = value;\n        newFilter.attribute = column;\n        if (type === \"SELECT\") {\n            newFilter.type = \"eq\";\n        } else if (type === \"NUMBER_RANGE\") {\n            newFilter.type = \"between\";\n        } else if (type === \"STRING\") {\n            newFilter.type = \"likeInsensitive\";\n        }\n        this.filters[column] = newFilter;\n        this.localFilter$.next(Object.values(this.filters));\n    }\n\n    private check(filter: FilterModel, item: T): boolean {\n        const checkBetween = (min, max, value): boolean => {\n            if (!isNaN(min === \"\" ? \"false\" : min) && value  max) {\n                return false;\n            }\n\n            return true;\n        };\n        switch (filter.type) {\n            case \"eq\":\n                return !filter.value || item[filter.attribute] === filter.value;\n            case \"lt\":\n                return !filter.value || item[filter.attribute]  filter.value;\n            case \"loe\":\n                return !filter.value || item[filter.attribute] = filter.value;\n            case \"like\":\n                return !filter.value || String(item[filter.attribute]).includes(filter.value);\n            case \"likeInsensitive\":\n                return !filter.value || String(item[filter.attribute]).toLowerCase().includes(filter.value.toLowerCase());\n            case \"between\":\n                return !filter.value || checkBetween(filter.value.min, filter.value.max, item[filter.attribute]);\n            default:\n                return true;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterModel.html":{"url":"classes/FilterModel.html","title":"class - FilterModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/table/src/lib/models/filter.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attribute\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            attribute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/models/filter.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"eq\" | \"gt\" | \"lt\" | \"between\" | \"like\" | \"likeInsensitive\" | \"loe\" | \"goe\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/models/filter.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/models/filter.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FilterModel {\n    public type: \"eq\" | \"gt\" | \"lt\" | \"between\" | \"like\" | \"likeInsensitive\" | \"loe\" | \"goe\";\n    public value: any;\n    public attribute: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/G43CommonModule.html":{"url":"modules/G43CommonModule.html","title":"module - G43CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    G43CommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/src/lib/g43-common.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {G43SharedPipesModule} from \"./shared-pipes/g43-shared-pipes.module\";\n\n@NgModule({\n    declarations: [],\n    imports: [],\n    exports: [\n        G43SharedPipesModule,\n    ]\n})\nexport class G43CommonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/G43CoreService.html":{"url":"classes/G43CoreService.html","title":"class - G43CoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  G43CoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/src/lib/services/g43-service/g43-core-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                getHeader\n                            \n                            \n                                    Protected\n                                getParameters\n                            \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(http: HttpClient, notificationService: G43Notification)\n                    \n                \n                        \n                            \n                                Defined in projects/common/src/lib/services/g43-service/g43-core-service.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        G43Notification\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(undefined: G43ServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-service/g43-core-service.service.ts:23\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                G43ServiceParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(undefined: G43ServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-service/g43-core-service.service.ts:80\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                G43ServiceParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHeader()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-service/g43-core-service.service.ts:37\n                \n            \n\n\n            \n                \n                    Function returns object Header, which contains all required headers for successfully request\n\n\n                    \n                        Returns :         HttpHeaders\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getParameters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getParameters(parameters?: StringMap)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-service/g43-core-service.service.ts:45\n                \n            \n\n\n            \n                \n                    Function return object HttpParams, which contains URL search parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameters\n                                    \n                                            StringMap\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HttpParams\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-service/g43-core-service.service.ts:95\n                \n            \n\n\n            \n                \n                    Function handle error from HTTP request or from server\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(undefined: G43ServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-service/g43-core-service.service.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                G43ServiceParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(undefined: G43ServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-service/g43-core-service.service.ts:71\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                G43ServiceParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {HttpClient, HttpHeaders, HttpParams, HttpResponse} from \"@angular/common/http\";\nimport {StringMap} from \"gtools\";\nimport {Observable, throwError} from \"rxjs\";\nimport {catchError, map} from \"rxjs/operators\";\nimport {G43Notification} from \"../g43-notification/g43-notification.interface\";\n\nexport interface G43ServiceParams {\n    url: string;\n    body?: any;\n    mapFunction?: (response: any) => T;\n    headers?: HttpHeaders;\n    responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\n    params?: HttpParams | { [param: string]: string | string[]; };\n}\n\nexport abstract class G43CoreService {\n    protected constructor(protected readonly http: HttpClient,\n                          protected readonly notificationService: G43Notification) {\n    }\n\n    /**\n     */\n    protected delete({url, body, mapFunction = (e) => e, params = {}, headers = this.getHeader()}: G43ServiceParams): Observable {\n        return this.http.delete(url, {\n            headers,\n            params: this.getParameters(params as StringMap),\n        }).pipe(\n            map(mapFunction),\n            catchError((error) => this.handleError(error)),\n        );\n    }\n\n    /**\n     * Function returns object Header, which contains all required headers for successfully request\n     *\n     */\n    protected getHeader(): HttpHeaders {\n        throw new Error(\"CoreService.getHeader method must by implemented\");\n    }\n\n    /**\n     * Function return object HttpParams, which contains URL search parameters\n     *\n     */\n    protected getParameters(parameters?: StringMap): HttpParams {\n        let httpParams = new HttpParams();\n        if (parameters) {\n            for (const key in parameters) {\n                if (parameters.hasOwnProperty(key)) {\n                    httpParams = httpParams.append(key, parameters[key]);\n                }\n            }\n        }\n\n        return httpParams;\n    }\n\n    /**\n     */\n    protected post({url, body, mapFunction = (e) => e, params = {}, headers = this.getHeader()}: G43ServiceParams): Observable {\n        return this.http.post(url, body, {\n            params, headers,\n        }).pipe(\n            map(mapFunction),\n            catchError((error) => this.handleError(error)),\n        );\n    }\n\n    /**\n     */\n    protected put({url, body, mapFunction = (e) => e, params = {}, headers = this.getHeader()}: G43ServiceParams): Observable {\n        return this.http.put(url, JSON.stringify(body), {headers}).pipe(\n            map(mapFunction),\n            catchError((error) => this.handleError(error)),\n        );\n    }\n\n    /**\n     */\n    protected get({url, body, mapFunction = (e) => e, params = {}, responseType = \"json\", headers = this.getHeader()}: G43ServiceParams): Observable {\n        return this.http.get(url, {\n            headers,\n            responseType: responseType as any, // Hack because overloading\n            params: this.getParameters(params as StringMap),\n        }).pipe(\n            map(mapFunction),\n            catchError((error) => this.handleError(error)),\n        );\n    }\n\n    /**\n     * Function handle error from HTTP request or from server\n     *\n     */\n    protected handleError(error: HttpResponse): Observable {\n        if (error.status === 401) {\n            window.location.hash = \"/login\";\n\n            return throwError(\"error.unauthorized\");\n        }\n        if (error.status === 504) {\n            return throwError(\"error.gatewayTimeout\");\n        }\n\n        return throwError(error);\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/G43FileSizePipe.html":{"url":"pipes/G43FileSizePipe.html","title":"pipe - G43FileSizePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  G43FileSizePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/src/lib/shared-pipes/g43-file-size.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        g43fileSize\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(sizeInBytes: number, longForm)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/shared-pipes/g43-file-size.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    sizeInBytes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    longForm\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\nconst FILE_SIZE_UNITS = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\nconst FILE_SIZE_UNITS_LONG = [\"Bytes\", \"Kilobytes\", \"Megabytes\", \"Gigabytes\", \"Pettabytes\", \"Exabytes\", \"Zettabytes\", \"Yottabytes\"];\n\n@Pipe({\n    name: \"g43fileSize\",\n})\nexport class G43FileSizePipe implements PipeTransform {\n\n    public transform(sizeInBytes: number, longForm = false): string {\n        const units = longForm\n            ? FILE_SIZE_UNITS_LONG\n            : FILE_SIZE_UNITS;\n\n        let power = Math.round(Math.log(sizeInBytes) / Math.log(1024));\n        power = Math.min(power, units.length - 1);\n\n        const size = sizeInBytes / Math.pow(1024, power); // size in new units\n        const formattedSize = Math.round(size * 100) / 100; // keep up to 2 decimals\n        const unit = units[power];\n\n        return size ? `${formattedSize} ${unit}` : \"0\";\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/G43InputComponent.html":{"url":"components/G43InputComponent.html","title":"component - G43InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  G43InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/input/src/lib/g43-input.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                g43-input\n            \n\n\n\n            \n                template\n                \n    @g43/input works!\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in projects/input/src/lib/g43-input.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/g43-input.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n    selector: \"g43-input\",\n    template: `\n        \n            @g43/input works!\n        \n    `,\n    styles: []\n})\nexport class G43InputComponent implements OnInit {\n\n    public constructor() {\n    }\n\n    public ngOnInit() {\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @g43/input works!'\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'G43InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/G43InputModule.html":{"url":"modules/G43InputModule.html","title":"module - G43InputModule","body":"\n                   \n\n\n\n\n    Modules\n    G43InputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_G43InputModule\n\n\n\ncluster_G43InputModule_declarations\n\n\n\ncluster_G43InputModule_exports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nG43InputModule\n\nG43InputModule\n\nG43InputModule -->\n\nButtonComponent->G43InputModule\n\n\n\n\n\nCoreInputComponent\n\nCoreInputComponent\n\nG43InputModule -->\n\nCoreInputComponent->G43InputModule\n\n\n\n\n\nCoreSelectComponent\n\nCoreSelectComponent\n\nG43InputModule -->\n\nCoreSelectComponent->G43InputModule\n\n\n\n\n\nCoreSelectOptionDirective\n\nCoreSelectOptionDirective\n\nG43InputModule -->\n\nCoreSelectOptionDirective->G43InputModule\n\n\n\n\n\nG43InputComponent\n\nG43InputComponent\n\nG43InputModule -->\n\nG43InputComponent->G43InputModule\n\n\n\n\n\nNumberInputComponent\n\nNumberInputComponent\n\nG43InputModule -->\n\nNumberInputComponent->G43InputModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nG43InputModule->ButtonComponent \n\n\n\n\n\nCoreInputComponent \n\nCoreInputComponent \n\nCoreInputComponent  -->\n\nG43InputModule->CoreInputComponent \n\n\n\n\n\nCoreSelectComponent \n\nCoreSelectComponent \n\nCoreSelectComponent  -->\n\nG43InputModule->CoreSelectComponent \n\n\n\n\n\nG43InputComponent \n\nG43InputComponent \n\nG43InputComponent  -->\n\nG43InputModule->G43InputComponent \n\n\n\n\n\nNumberInputComponent \n\nNumberInputComponent \n\nNumberInputComponent  -->\n\nG43InputModule->NumberInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/input/src/lib/g43-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CoreInputComponent\n                        \n                        \n                            CoreSelectComponent\n                        \n                        \n                            CoreSelectOptionDirective\n                        \n                        \n                            G43InputComponent\n                        \n                        \n                            NumberInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CoreInputComponent\n                        \n                        \n                            CoreSelectComponent\n                        \n                        \n                            G43InputComponent\n                        \n                        \n                            NumberInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ButtonComponent} from \"./components/button/button.component\";\nimport {CoreInputComponent} from \"./components/core-input/core-input.component\";\nimport {CoreSelectOptionDirective} from \"./components/core-select/core-select-option.directive\";\nimport {CoreSelectComponent} from \"./components/core-select/core-select.component\";\nimport {NumberInputComponent} from \"./components/number-input/number-input.component\";\nimport {G43InputComponent} from \"./g43-input.component\";\n\n@NgModule({\n    declarations: [\n        G43InputComponent,\n        CoreInputComponent,\n        NumberInputComponent,\n        ButtonComponent,\n        CoreSelectComponent,\n        CoreSelectOptionDirective,\n    ],\n    imports: [\n        FormsModule,\n        CommonModule,\n        ReactiveFormsModule,\n    ],\n    exports: [\n        G43InputComponent,\n        NumberInputComponent,\n        CoreInputComponent,\n        ButtonComponent,\n        CoreSelectComponent,\n    ]\n})\nexport class G43InputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/G43InputService.html":{"url":"injectables/G43InputService.html","title":"injectable - G43InputService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  G43InputService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/input/src/lib/g43-input.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in projects/input/src/lib/g43-input.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class G43InputService {\n\n    public constructor() {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/G43Notification.html":{"url":"interfaces/G43Notification.html","title":"interface - G43Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  G43Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/src/lib/services/g43-notification/g43-notification.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    openErrorNotification\n                                \n                                \n                                    openInfoNotification\n                                \n                                \n                                    openSuccessNotification\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openErrorNotification\n                        \n                        \n                    \n                \n            \n            \n                \nopenErrorNotification(error: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-notification/g43-notification.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openInfoNotification\n                        \n                        \n                    \n                \n            \n            \n                \nopenInfoNotification(info: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-notification/g43-notification.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openSuccessNotification\n                        \n                        \n                    \n                \n            \n            \n                \nopenSuccessNotification(success: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-notification/g43-notification.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    success\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from \"@angular/core\";\n\nexport interface G43Notification {\n    openErrorNotification(error: any): void;\n\n    openInfoNotification(info: any): void;\n\n    openSuccessNotification(success: any): void;\n}\n\nexport const G43_NOTIFICATION_TOKEN = new InjectionToken(\"G43Notification\");\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/G43RestApiHandler.html":{"url":"classes/G43RestApiHandler.html","title":"class - G43RestApiHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  G43RestApiHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/src/lib/testing/api/g43-rest-api.handler.ts\n        \n\n            \n                Description\n            \n            \n                TODO: allow process parameters like\n  offset\n  limit\n  formatter\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                realData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(data: T[], path: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/src/lib/testing/api/g43-rest-api.handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            realData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/src/lib/testing/api/g43-rest-api.handler.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/testing/api/g43-rest-api.handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from \"@angular/common/http\";\nimport { Observable, of } from \"rxjs\";\n\n/**\n * TODO: allow process parameters like\n *  offset\n *  limit\n *  formatter\n */\nexport class G43RestApiHandler {\n    private readonly realData: T[];\n\n    public constructor(data: T[], private readonly path: string) {\n        this.realData = [...data];\n    }\n\n    public use(request: HttpRequest): Observable> | null {\n        // get all data\n        if (request.url.endsWith(`/${ this.path }`) && request.method === \"GET\") {\n            return of(new HttpResponse({\n                status: 200, body: this.realData,\n            }));\n        }\n\n        // add new item\n        if (request.url.endsWith(`/${ this.path }`) && request.method === \"POST\") {\n            this.realData.push(request.body);\n\n            return of(new HttpResponse({\n                status: 200, body: request.body,\n            }));\n        }\n\n        // get data by id\n        if (request.url.match(new RegExp(`/${ this.path }/[1-9][0-9]?`)) && request.method === \"GET\") {\n            const splitUrl = request.url.split(\"/\");\n            const id = parseInt(splitUrl[splitUrl.length - 1], 10);\n\n            return of(new HttpResponse({\n                status: 200, body: this.realData.find((employee) => employee.id === id),\n            }));\n        }\n\n        // delete data by id\n        if (request.url.match(new RegExp(`/${ this.path }/[1-9][0-9]?`)) && request.method === \"DELETE\") {\n            const splitUrl = request.url.split(\"/\");\n            const id = parseInt(splitUrl[splitUrl.length - 1], 10);\n            const indexOfElementForDelete = this.realData.findIndex((employee) => employee.id === id);\n            const removedElement = this.realData.splice(indexOfElementForDelete, 1)[0];\n\n            return of(new HttpResponse({status: 200, body: removedElement}));\n        }\n\n        // update data by id\n        if (request.url.match(new RegExp(`/${ this.path }/[1-9][0-9]?`)) && request.method === \"PUT\") {\n            const splitUrl = request.url.split(\"/\");\n            const id = parseInt(splitUrl[splitUrl.length - 1], 10);\n            const indexOfUpdating = this.realData.findIndex((employee) => employee.id === id);\n            this.realData[indexOfUpdating] = request.body;\n\n            return of(new HttpResponse({status: 200, body: this.realData[indexOfUpdating]}));\n        }\n\n        return null;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/G43SafePipe.html":{"url":"pipes/G43SafePipe.html","title":"pipe - G43SafePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  G43SafePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/src/lib/shared-pipes/g43-safe.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        g43safe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(url: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/shared-pipes/g43-safe.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SafeResourceUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\n@Pipe({name: \"g43safe\"})\nexport class G43SafePipe implements PipeTransform {\n    public constructor(private readonly sanitizer: DomSanitizer) {\n    }\n\n    public transform(url: any): SafeResourceUrl {\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/G43Service.html":{"url":"classes/G43Service.html","title":"class - G43Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  G43Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/src/lib/services/g43-service/g43.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        G43CoreService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getImage\n                            \n                            \n                                    Protected\n                                uploadFile\n                            \n                            \n                                    Protected\n                                uploadFiles\n                            \n                            \n                                    Protected\n                                uploadLink\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                getHeader\n                            \n                            \n                                    Protected\n                                getParameters\n                            \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(http: HttpClient, notificationService: G43Notification)\n                    \n                \n                        \n                            \n                                Defined in projects/common/src/lib/services/g43-service/g43.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        G43Notification\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImage(url: string, sendHeaders)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-service/g43.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    sendHeaders\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(url: string, file: File, name: string, fileName)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-service/g43.service.ts:27\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    fileName\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        file.name\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            uploadFiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFiles(url: string, files: File[], name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-service/g43.service.ts:37\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            File[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            uploadLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadLink(url: string, link: string, name: string, fileName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-service/g43.service.ts:21\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"image.jpg\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(undefined: G43ServiceParams)\n                \n            \n\n\n            \n                \n                    Inherited from         G43CoreService\n\n                \n            \n            \n                \n                        Defined in         G43CoreService:23\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                G43ServiceParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(undefined: G43ServiceParams)\n                \n            \n\n\n            \n                \n                    Inherited from         G43CoreService\n\n                \n            \n            \n                \n                        Defined in         G43CoreService:80\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                G43ServiceParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHeader()\n                \n            \n\n\n            \n                \n                    Inherited from         G43CoreService\n\n                \n            \n            \n                \n                        Defined in         G43CoreService:37\n\n                \n            \n\n\n            \n                \n                    Function returns object Header, which contains all required headers for successfully request\n\n\n                    \n                        Returns :         HttpHeaders\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getParameters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getParameters(parameters?: StringMap)\n                \n            \n\n\n            \n                \n                    Inherited from         G43CoreService\n\n                \n            \n            \n                \n                        Defined in         G43CoreService:45\n\n                \n            \n\n\n            \n                \n                    Function return object HttpParams, which contains URL search parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameters\n                                    \n                                            StringMap\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HttpParams\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         G43CoreService\n\n                \n            \n            \n                \n                        Defined in         G43CoreService:95\n\n                \n            \n\n\n            \n                \n                    Function handle error from HTTP request or from server\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(undefined: G43ServiceParams)\n                \n            \n\n\n            \n                \n                    Inherited from         G43CoreService\n\n                \n            \n            \n                \n                        Defined in         G43CoreService:60\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                G43ServiceParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(undefined: G43ServiceParams)\n                \n            \n\n\n            \n                \n                    Inherited from         G43CoreService\n\n                \n            \n            \n                \n                        Defined in         G43CoreService:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                G43ServiceParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { switchMap } from \"rxjs/operators\";\nimport {G43Notification} from \"../g43-notification/g43-notification.interface\";\nimport {G43CoreService} from \"./g43-core-service.service\";\n\nexport abstract class G43Service extends G43CoreService {\n    protected constructor(http: HttpClient,\n                          notificationService: G43Notification) {\n        super(http, notificationService);\n    }\n\n    protected getImage(url: string, sendHeaders = true): Observable {\n        return this.get({\n            url,\n            responseType: \"blob\",\n            headers: sendHeaders ? this.getHeader() : undefined,\n        });\n    }\n\n    protected uploadLink(url: string, link: string, name: string, fileName = \"image.jpg\"): Observable {\n        return this.getImage(url, false).pipe(switchMap((myBlob) => {\n            return this.uploadFile(url, myBlob as File, name, fileName);\n        }));\n    }\n\n    protected uploadFile(url: string, file: File, name: string, fileName = file.name): Observable {\n        const fd = new FormData();\n        fd.append(name, file, fileName);\n\n        return this.post({\n            url,\n            body: fd,\n        });\n    }\n\n    protected uploadFiles(url: string, files: File[], name: string): Observable {\n        const fd = new FormData();\n        for (const file of files) {\n            fd.append(name, file, file.name);\n        }\n\n        return this.post({\n            url,\n            body: fd,\n        });\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/G43ServiceParams.html":{"url":"interfaces/G43ServiceParams.html","title":"interface - G43ServiceParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  G43ServiceParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/src/lib/services/g43-service/g43-core-service.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        mapFunction\n                                \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                            Optional\n                                        responseType\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:         HttpHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapFunction\n                                    \n                                \n                                \n                                    \n                                        mapFunction:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     HttpParams | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpParams | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseType\n                                    \n                                \n                                \n                                    \n                                        responseType:     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {HttpClient, HttpHeaders, HttpParams, HttpResponse} from \"@angular/common/http\";\nimport {StringMap} from \"gtools\";\nimport {Observable, throwError} from \"rxjs\";\nimport {catchError, map} from \"rxjs/operators\";\nimport {G43Notification} from \"../g43-notification/g43-notification.interface\";\n\nexport interface G43ServiceParams {\n    url: string;\n    body?: any;\n    mapFunction?: (response: any) => T;\n    headers?: HttpHeaders;\n    responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\n    params?: HttpParams | { [param: string]: string | string[]; };\n}\n\nexport abstract class G43CoreService {\n    protected constructor(protected readonly http: HttpClient,\n                          protected readonly notificationService: G43Notification) {\n    }\n\n    /**\n     */\n    protected delete({url, body, mapFunction = (e) => e, params = {}, headers = this.getHeader()}: G43ServiceParams): Observable {\n        return this.http.delete(url, {\n            headers,\n            params: this.getParameters(params as StringMap),\n        }).pipe(\n            map(mapFunction),\n            catchError((error) => this.handleError(error)),\n        );\n    }\n\n    /**\n     * Function returns object Header, which contains all required headers for successfully request\n     *\n     */\n    protected getHeader(): HttpHeaders {\n        throw new Error(\"CoreService.getHeader method must by implemented\");\n    }\n\n    /**\n     * Function return object HttpParams, which contains URL search parameters\n     *\n     */\n    protected getParameters(parameters?: StringMap): HttpParams {\n        let httpParams = new HttpParams();\n        if (parameters) {\n            for (const key in parameters) {\n                if (parameters.hasOwnProperty(key)) {\n                    httpParams = httpParams.append(key, parameters[key]);\n                }\n            }\n        }\n\n        return httpParams;\n    }\n\n    /**\n     */\n    protected post({url, body, mapFunction = (e) => e, params = {}, headers = this.getHeader()}: G43ServiceParams): Observable {\n        return this.http.post(url, body, {\n            params, headers,\n        }).pipe(\n            map(mapFunction),\n            catchError((error) => this.handleError(error)),\n        );\n    }\n\n    /**\n     */\n    protected put({url, body, mapFunction = (e) => e, params = {}, headers = this.getHeader()}: G43ServiceParams): Observable {\n        return this.http.put(url, JSON.stringify(body), {headers}).pipe(\n            map(mapFunction),\n            catchError((error) => this.handleError(error)),\n        );\n    }\n\n    /**\n     */\n    protected get({url, body, mapFunction = (e) => e, params = {}, responseType = \"json\", headers = this.getHeader()}: G43ServiceParams): Observable {\n        return this.http.get(url, {\n            headers,\n            responseType: responseType as any, // Hack because overloading\n            params: this.getParameters(params as StringMap),\n        }).pipe(\n            map(mapFunction),\n            catchError((error) => this.handleError(error)),\n        );\n    }\n\n    /**\n     * Function handle error from HTTP request or from server\n     *\n     */\n    protected handleError(error: HttpResponse): Observable {\n        if (error.status === 401) {\n            window.location.hash = \"/login\";\n\n            return throwError(\"error.unauthorized\");\n        }\n        if (error.status === 504) {\n            return throwError(\"error.gatewayTimeout\");\n        }\n\n        return throwError(error);\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/G43SharedPipesModule.html":{"url":"modules/G43SharedPipesModule.html","title":"module - G43SharedPipesModule","body":"\n                   \n\n\n\n\n    Modules\n    G43SharedPipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_G43SharedPipesModule\n\n\n\ncluster_G43SharedPipesModule_declarations\n\n\n\ncluster_G43SharedPipesModule_exports\n\n\n\n\nG43FileSizePipe\n\nG43FileSizePipe\n\n\n\nG43SharedPipesModule\n\nG43SharedPipesModule\n\nG43SharedPipesModule -->\n\nG43FileSizePipe->G43SharedPipesModule\n\n\n\n\n\nG43SafePipe\n\nG43SafePipe\n\nG43SharedPipesModule -->\n\nG43SafePipe->G43SharedPipesModule\n\n\n\n\n\nG43FileSizePipe \n\nG43FileSizePipe \n\nG43FileSizePipe  -->\n\nG43SharedPipesModule->G43FileSizePipe \n\n\n\n\n\nG43SafePipe \n\nG43SafePipe \n\nG43SafePipe  -->\n\nG43SharedPipesModule->G43SafePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/src/lib/shared-pipes/g43-shared-pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            G43FileSizePipe\n                        \n                        \n                            G43SafePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            G43FileSizePipe\n                        \n                        \n                            G43SafePipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {G43FileSizePipe} from \"./g43-file-size.pipe\";\nimport {G43SafePipe} from \"./g43-safe.pipe\";\n\n\n@NgModule({\n    declarations: [\n        G43FileSizePipe,\n        G43SafePipe,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        G43FileSizePipe,\n        G43SafePipe,\n    ]\n})\nexport class G43SharedPipesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/G43TestingModule.html":{"url":"modules/G43TestingModule.html","title":"module - G43TestingModule","body":"\n                   \n\n\n\n\n    Modules\n    G43TestingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/src/lib/testing/g43-testing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {HttpClientTestingModule} from \"@angular/common/http/testing\";\nimport {NgModule} from \"@angular/core\";\nimport {NoopAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {RouterTestingModule} from \"@angular/router/testing\";\nimport {G43_NOTIFICATION_TOKEN} from \"../services/g43-notification/g43-notification.interface\";\n\n@NgModule({\n    declarations: [],\n    imports: [],\n    providers: [\n        {\n            provide: G43_NOTIFICATION_TOKEN,\n            useValue: {\n                openErrorNotification: (error: any) => {\n                    // empty\n                },\n                openInfoNotification: (info: any) => {\n                    // empty\n                },\n                openSuccessNotification: (success: any) => {\n                    // empty\n                },\n            },\n        },\n    ],\n    exports: [\n        CommonModule,\n        RouterTestingModule,\n        NoopAnimationsModule,\n        HttpClientTestingModule,\n    ],\n})\n\nexport class G43TestingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/G43Translation.html":{"url":"interfaces/G43Translation.html","title":"interface - G43Translation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  G43Translation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/src/lib/services/g43-translate/g43-translation.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        currentLang\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    exists\n                                \n                                \n                                    get\n                                \n                                \n                                    instant\n                                \n                                \n                                        Optional\n                                    use\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \nexists(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-translate/g43-translation.interface.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-translate/g43-translation.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            instant\n                        \n                        \n                    \n                \n            \n            \n                \ninstant(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-translate/g43-translation.interface.ts:11\n                \n            \n\n\n            \n                \n                    get translate instantly\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/src/lib/services/g43-translate/g43-translation.interface.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentLang\n                                    \n                                \n                                \n                                    \n                                        currentLang:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {InjectionToken} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\n\nexport interface G43Translation {\n    get(key: string): Observable;\n\n    /**\n     * get translate instantly\n     *\n     */\n    instant(key: string): string;\n\n    currentLang?: string;\n\n    use?(lang: string): void;\n\n    exists?(key: string): boolean;\n}\n\nexport const G43_TRANSLATE_TOKEN = new InjectionToken(\"G43Translation\");\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/menu/src/lib/menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                g43-menu\n            \n\n            \n                styleUrls\n                ./menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                menuWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                menuItems\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(translationService: G43Translation)\n                    \n                \n                        \n                            \n                                Defined in projects/menu/src/lib/menu.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        G43Translation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuItems\n                    \n                \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : [MenuItem.create(\"home\"), MenuItem.create(\"about\")]\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            menuWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 140\n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Inject, Input, OnInit, Optional, TemplateRef} from \"@angular/core\";\nimport {G43_TRANSLATE_TOKEN, G43Translation} from \"@g43/common\";\nimport {MenuItem} from \"./models/menu-item.model\";\n\n@Component({\n    selector: \"g43-menu\",\n    styleUrls: [\"./menu.component.scss\"],\n    templateUrl: \"./menu.component.html\"\n})\nexport class MenuComponent implements OnInit {\n    @Input() public menuItems: MenuItem[] = [MenuItem.create(\"home\"), MenuItem.create(\"about\")];\n    @Input() public content: TemplateRef;\n    public menuWidth = 140;\n\n\n    public constructor(@Optional() @Inject(G43_TRANSLATE_TOKEN) private readonly translationService: G43Translation) {\n    }\n\n\n    public ngOnInit(): void {\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                \n                \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./menu.component.scss\n                \n                $line-height: 40px;\n$content-padding: 20px;\n\n\n.menu-wrapper {\n    position: fixed;\n    min-width: 100%;\n    min-height: 100%;\n\n    .menu-drawer {\n        position: fixed;\n        padding: $content-padding 0;\n        height: 100%;\n        box-sizing: border-box;\n        background-color: aliceblue;\n\n        ul {\n            list-style: none;\n\n            li {\n                background-color: azure;\n                justify-content: center;\n                padding-left: $content-padding;\n                box-sizing: border-box;\n                margin-top: 3px;\n                width: 100%;\n                min-height: $line-height;\n                line-height: $line-height;\n                cursor: pointer;\n\n                &:hover {\n                    background-color: bisque;\n                }\n            }\n        }\n    }\n\n    .menu-content {\n        position: fixed;\n        box-sizing: border-box;\n        height: 100%;\n        padding: $content-padding;\n        overflow-x: hidden;\n        overflow-y: auto;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuContainerComponent.html":{"url":"components/MenuContainerComponent.html","title":"component - MenuContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/menu/src/lib/menu-containter/menu-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                g43-menu-container\n            \n\n            \n                styleUrls\n                ./menu-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                openDrawer\n                            \n                            \n                                    Public\n                                topMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backdrop\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown.escape\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isShowingBackdrop\n                                \n                                \n                                    topOffset\n                                \n                                \n                                    backdropLeft\n                                \n                                \n                                    contentLeft\n                                \n                                \n                                    contentMarginRight\n                                \n                                \n                                    realFilter\n                                \n                                \n                                    drawerVisible\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backdrop\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:keydown.escape\n                        \n                        \n                    \n                \n            \n            \n                \ndocument:keydown.escape()\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:99\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close(param: MenuDrawerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                MenuDrawerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(param: MenuDrawerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                MenuDrawerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(MenuDrawerComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openDrawer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuDrawerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            topMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuTopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(MenuTopComponent, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isShowingBackdrop\n                    \n                \n\n                \n                    \n                        getisShowingBackdrop()\n                    \n                \n                            \n                                \n                                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        topOffset\n                    \n                \n\n                \n                    \n                        gettopOffset()\n                    \n                \n                            \n                                \n                                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        backdropLeft\n                    \n                \n\n                \n                    \n                        getbackdropLeft()\n                    \n                \n                            \n                                \n                                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:30\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        contentLeft\n                    \n                \n\n                \n                    \n                        getcontentLeft()\n                    \n                \n                            \n                                \n                                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        contentMarginRight\n                    \n                \n\n                \n                    \n                        getcontentMarginRight()\n                    \n                \n                            \n                                \n                                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        realFilter\n                    \n                \n\n                \n                    \n                        getrealFilter()\n                    \n                \n                            \n                                \n                                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        drawerVisible\n                    \n                \n\n                \n                    \n                        getdrawerVisible()\n                    \n                \n                            \n                                \n                                    Defined in projects/menu/src/lib/menu-containter/menu-container.component.ts:91\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ContentChild, ContentChildren, HostListener, Input, OnInit, QueryList} from \"@angular/core\";\nimport {MenuDrawerComponent} from \"../menu-drawer/menu-drawer.component\";\nimport {MenuTopComponent} from \"../menu-top/menu-top.component\";\n\n@Component({\n    selector: \"g43-menu-container\",\n    templateUrl: \"./menu-container.component.html\",\n    styleUrls: [\"./menu-container.component.scss\"],\n})\nexport class MenuContainerComponent implements OnInit {\n    @Input() public filter;\n    @Input() public backdrop = true;\n    @ContentChildren(MenuDrawerComponent) private drawers: QueryList;\n    @ContentChild(MenuTopComponent, {static: false}) public topMenu: MenuTopComponent;\n\n    private openDrawer: MenuDrawerComponent;\n\n    public get isShowingBackdrop(): boolean {\n        return this.backdrop && this.drawerVisible;\n    }\n\n    public get topOffset(): number {\n        if (!this.topMenu) {\n            return 0;\n        }\n\n        return this.topMenu.height;\n    }\n\n    public get backdropLeft(): number {\n        if (!this.drawerVisible) {\n            return 0;\n        }\n\n        if (this.openDrawer.type === \"classic\") {\n            return 0;\n        }\n\n        return this.openDrawer.align === \"right\" ? -this.openDrawer.width : this.openDrawer.width;\n    }\n\n    public get contentLeft(): number {\n        if (!this.drawerVisible) {\n            return 0;\n        }\n\n        if (this.openDrawer.type === \"classic\") {\n            return 0;\n        }\n\n        if (this.openDrawer.align === \"right\") {\n            if (this.openDrawer.type === \"squash\") {\n                return 0;\n            }\n\n            return -this.openDrawer.width;\n        }\n\n        return this.openDrawer.width;\n    }\n\n    public get contentMarginRight(): number {\n        if (!this.drawerVisible) {\n            return 0;\n        }\n        if (this.openDrawer.type === \"classic\") {\n            return 0;\n        }\n        if (this.openDrawer.type === \"moving\") {\n            return 0;\n        }\n        if (this.openDrawer.align === \"right\") {\n            return this.openDrawer.width;\n        }\n        if (this.openDrawer.align === \"left\") {\n            return this.openDrawer.width;\n        }\n\n        return 0;\n    }\n\n    public get realFilter(): string {\n        if (!this.drawerVisible || !this.filter || !this.backdrop) {\n\n            return \"none\";\n        }\n\n        return this.filter;\n    }\n\n    private get drawerVisible(): boolean {\n        return this.openDrawer && this.openDrawer.visible;\n    }\n\n    public ngOnInit(): void {\n    }\n\n    @HostListener(\"document:keydown.escape\")\n    public onBackdropClicked(): void {\n        if (this.openDrawer) {\n            this.openDrawer.close();\n        }\n    }\n\n    public close(param: MenuDrawerComponent) {\n        if (param === this.openDrawer) {\n            this.openDrawer = null;\n        }\n    }\n\n    public open(param: MenuDrawerComponent) {\n        if (this.openDrawer && param !== this.openDrawer) {\n            this.openDrawer.close();\n        }\n        this.openDrawer = param;\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./menu-container.component.scss\n                \n                $transition-speed: 0.3s;\n:host {\n    min-width: 100vw;\n    min-height: 100vh;\n    max-width: 100vw;\n    max-height: 100vh;\n    overflow: hidden;\n    position: absolute;\n}\n.backdrop {\n    z-index: 1;\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    transition: margin-left $transition-speed, left $transition-speed, opacity $transition-speed;\n    background-color: rgba(0, 0, 0, 0.5);\n    opacity: 0;\n    visibility: hidden;\n\n    &.visible {\n        visibility: visible;\n        opacity: 1;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuContentComponent.html":{"url":"components/MenuContentComponent.html","title":"component - MenuContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/menu/src/lib/menu-content/menu-content.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                g43-menu-content\n            \n\n            \n                styleUrls\n                ./menu-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                container\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(container: MenuContainerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/menu/src/lib/menu-content/menu-content.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        MenuContainerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-content/menu-content.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuContainerComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-content/menu-content.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Inject, OnInit} from \"@angular/core\";\nimport {MenuContainerComponent} from \"../menu-containter/menu-container.component\";\n\n@Component({\n    selector: \"g43-menu-content\",\n    templateUrl: \"./menu-content.component.html\",\n    styleUrls: [\"./menu-content.component.scss\"],\n    host: {\n        \"class\": \"menu-drawer\",\n        \"[style.padding-top.px]\": \"container.topMenu ? container.topMenu.height : 0\",\n        // \"[style.left.px]\": \"container.contentLeft\",\n        \"[style.transform]\": \"'translateX(' + container.contentLeft + 'px)'\",\n        // \"[style.margin-right.px]\": \"container.contentMarginRight\",\n        \"[style.width]\": \"'calc(100% - ' + container.contentMarginRight + 'px)'\",\n        \"[attr.margin-rrrr]\": \"container.contentMarginRight\",\n        \"[style.filter]\": \"container.realFilter\"\n    }\n})\nexport class MenuContentComponent implements OnInit {\n\n    public constructor(@Inject(forwardRef(() => MenuContainerComponent)) public readonly container: MenuContainerComponent) {\n    }\n\n    public ngOnInit(): void {\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./menu-content.component.scss\n                \n                $transition-speed: 0.3s;\n\n:host {\n    transition: width $transition-speed, transform $transition-speed, margin-left $transition-speed, left $transition-speed, margin-right $transition-speed, filter $transition-speed;\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    padding: 0 1em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuDrawerComponent.html":{"url":"components/MenuDrawerComponent.html","title":"component - MenuDrawerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuDrawerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/menu/src/lib/menu-drawer/menu-drawer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                g43-menu-drawer\n            \n\n            \n                styleUrls\n                ./menu-drawer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-drawer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                container\n                            \n                            \n                                    Public\n                                loaded\n                            \n                            \n                                    Private\n                                realWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                align\n                            \n                            \n                                background\n                            \n                            \n                                type\n                            \n                            \n                                visible\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(container: MenuContainerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        MenuContainerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        align\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : \"left\"\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Default value : \"aliceblue\"\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"classic\" | \"moving\" | \"squash\"\n\n                    \n                \n                \n                    \n                        Default value : \"classic\"\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuContainerComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            realWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 160\n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:28\n                                \n                            \n\n                \n                    \n                        setwidth(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/menu/src/lib/menu-drawer/menu-drawer.component.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, forwardRef, Inject, Input, OnInit} from \"@angular/core\";\nimport {MenuContainerComponent} from \"../menu-containter/menu-container.component\";\n\n@Component({\n    selector: \"g43-menu-drawer\",\n    templateUrl: \"./menu-drawer.component.html\",\n    styleUrls: [\"./menu-drawer.component.scss\"],\n    host: {\n        \"[style.width.px]\": \"width\",\n        \"[style.background-color]\": \"background\",\n        \"[style.padding-top.px]\": \"container.topOffset\",\n        \"[class]\": \"'menu-drawer ' + align\",\n        \"[class.visible]\": \"visible\",\n        \"[style.display]\": \"loaded ? 'block' : 'none'\",\n    },\n})\nexport class MenuDrawerComponent implements OnInit {\n    @Input() public align: \"left\" | \"right\" = \"left\";\n    @Input() public visible = false;\n    @Input() public background = \"aliceblue\";\n    @Input() public type: \"classic\" | \"moving\" | \"squash\" = \"classic\";\n    private realWidth = 160;\n    public loaded = false;\n\n    public constructor(@Inject(forwardRef(() => MenuContainerComponent)) public readonly container: MenuContainerComponent) {\n    }\n\n    public get width(): number {\n        return this.realWidth;\n    }\n\n    @Input()\n    public set width(value: number) {\n        this.realWidth = Math.min(value, window.innerWidth);\n    }\n\n    public ngOnInit(): void {\n        setTimeout(() => {\n            this.loaded = true;\n        }, 1000);\n    }\n\n    public close(): void {\n        this.visible = false;\n        this.container.close(this);\n    }\n\n    public open(): void {\n        this.visible = true;\n        this.container.open(this);\n    }\n\n    public toggle(): void {\n        this.visible = !this.visible;\n        this.visible ? this.container.open(this) : this.container.close(this);\n    }\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./menu-drawer.component.scss\n                \n                :host {\n    display: block;\n    transition: transform 0.3s;\n    box-shadow: none;\n    top: 0;\n    max-height: 100vh;\n    overflow: hidden;\n    max-width: 100vw;\n    height: 100%;\n    box-sizing: border-box;\n    z-index: 2;\n    position: fixed;\n\n    transform: translateX(-100%);\n\n    &.right {\n        right: 0;\n        transform: translateX(100%);\n    }\n\n\n    &.visible {\n        box-shadow: 0 8px 10px -5px rgba(0, 0, 0, .2), 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12);\n        transform: translateX(0);\n    }\n\n\n    .inner-wrapper {\n        height: 100%;\n        overflow-y: auto;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuDrawerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItem.html":{"url":"classes/MenuItem.html","title":"class - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/menu/src/lib/models/menu-item.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                    Optional\n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                createFromTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(label: string, action: string | , icon: string, template?: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in projects/menu/src/lib/models/menu-item.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                    string | \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/models/menu-item.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/models/menu-item.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/models/menu-item.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/models/menu-item.model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(label: string, path, icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/models/menu-item.model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    path\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        label\n                                    \n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MenuItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createFromTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFromTemplate(template: TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/models/menu-item.model.ts:15\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                            TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MenuItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {TemplateRef} from \"@angular/core\";\n\nexport class MenuItem {\n\n    public constructor(public label: string,\n                       public action: string | (() => any),\n                       public icon: string,\n                       public template?: TemplateRef) {\n    }\n\n    public static create(label: string, path = label, icon = \"\", ): MenuItem {\n        return new MenuItem(label, path, icon);\n    }\n\n    public static createFromTemplate(template: TemplateRef): MenuItem {\n        return new MenuItem(\"\", \"\", \"\", template);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuItemComponent.html":{"url":"components/MenuItemComponent.html","title":"component - MenuItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/menu/src/lib/menu-item/menu-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                g43-menu-item\n            \n\n            \n                styleUrls\n                ./menu-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                click\n                            \n                            \n                                    Public\n                                getLabelFor\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menuItem\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(router: Router, translationService: G43Translation)\n                    \n                \n                        \n                            \n                                Defined in projects/menu/src/lib/menu-item/menu-item.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        G43Translation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menuItem\n                    \n                \n                \n                    \n                        Type :         MenuItem\n\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-item/menu-item.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click()\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-item/menu-item.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLabelFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLabelFor(menuItem: MenuItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-item/menu-item.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuItem\n                                    \n                                                MenuItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-item/menu-item.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, Input, OnInit, Optional} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {G43_TRANSLATE_TOKEN, G43Translation} from \"@g43/common\";\nimport {Observable, of} from \"rxjs\";\nimport {MenuItem} from \"../models/menu-item.model\";\n\n@Component({\n    selector: \"g43-menu-item\",\n    templateUrl: \"./menu-item.component.html\",\n    styleUrls: [\"./menu-item.component.scss\"],\n    host: {\n        class: \"menu-item\"\n    }\n})\nexport class MenuItemComponent implements OnInit {\n    @Input() public menuItem: MenuItem;\n\n    public constructor(private readonly router: Router,\n                       @Optional() @Inject(G43_TRANSLATE_TOKEN) private readonly translationService: G43Translation) {\n    }\n\n    public ngOnInit(): void {\n    }\n\n    public getLabelFor(menuItem: MenuItem): Observable {\n        if (!menuItem.label) {\n            return of(\"\");\n        }\n\n        if (this.translationService) {\n            return this.translationService.get(menuItem.label);\n        }\n\n        return of(menuItem.label);\n    }\n\n    public click(): any {\n        if (!this.menuItem) {\n            return;\n        }\n\n        if (typeof this.menuItem.action === \"string\") {\n            return this.router.navigate([this.menuItem.action]);\n        }\n        if (typeof this.menuItem.action === \"function\") {\n            return this.menuItem.action();\n        }\n    }\n\n}\n\n    \n\n    \n        \n    {{getLabelFor(menuItem) | async}}\n\n\n\n    \n\n\n    \n\n    \n                \n                    ./menu-item.component.scss\n                \n                :host {\n    height: 100%;\n\n    box-sizing: border-box;\n    position: relative;\n    user-select: none;\n    padding: 1em;\n    white-space: nowrap;\n\n    line-height: 1;\n    text-transform: none;\n    text-align: center;\n    color: rgba(0, 0, 0, .87);\n    font-weight: 400;\n    display: flex;\n    align-items: center;\n\n    &:hover {\n        cursor: pointer;\n        background: rgba(0, 0, 0, .3);\n        color: rgba(0, 0, 0, .95);\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{getLabelFor(menuItem) | async}}    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MenuModule.html":{"url":"modules/MenuModule.html","title":"module - MenuModule","body":"\n                   \n\n\n\n\n    Modules\n    MenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_declarations\n\n\n\ncluster_MenuModule_exports\n\n\n\n\nMenuComponent\n\nMenuComponent\n\n\n\nMenuModule\n\nMenuModule\n\nMenuModule -->\n\nMenuComponent->MenuModule\n\n\n\n\n\nMenuContainerComponent\n\nMenuContainerComponent\n\nMenuModule -->\n\nMenuContainerComponent->MenuModule\n\n\n\n\n\nMenuContentComponent\n\nMenuContentComponent\n\nMenuModule -->\n\nMenuContentComponent->MenuModule\n\n\n\n\n\nMenuDrawerComponent\n\nMenuDrawerComponent\n\nMenuModule -->\n\nMenuDrawerComponent->MenuModule\n\n\n\n\n\nMenuItemComponent\n\nMenuItemComponent\n\nMenuModule -->\n\nMenuItemComponent->MenuModule\n\n\n\n\n\nMenuTopComponent\n\nMenuTopComponent\n\nMenuModule -->\n\nMenuTopComponent->MenuModule\n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nMenuModule->MenuComponent \n\n\n\n\n\nMenuContainerComponent \n\nMenuContainerComponent \n\nMenuContainerComponent  -->\n\nMenuModule->MenuContainerComponent \n\n\n\n\n\nMenuContentComponent \n\nMenuContentComponent \n\nMenuContentComponent  -->\n\nMenuModule->MenuContentComponent \n\n\n\n\n\nMenuDrawerComponent \n\nMenuDrawerComponent \n\nMenuDrawerComponent  -->\n\nMenuModule->MenuDrawerComponent \n\n\n\n\n\nMenuItemComponent \n\nMenuItemComponent \n\nMenuItemComponent  -->\n\nMenuModule->MenuItemComponent \n\n\n\n\n\nMenuTopComponent \n\nMenuTopComponent \n\nMenuTopComponent  -->\n\nMenuModule->MenuTopComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/menu/src/lib/menu.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MenuComponent\n                        \n                        \n                            MenuContainerComponent\n                        \n                        \n                            MenuContentComponent\n                        \n                        \n                            MenuDrawerComponent\n                        \n                        \n                            MenuItemComponent\n                        \n                        \n                            MenuTopComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MenuComponent\n                        \n                        \n                            MenuContainerComponent\n                        \n                        \n                            MenuContentComponent\n                        \n                        \n                            MenuDrawerComponent\n                        \n                        \n                            MenuItemComponent\n                        \n                        \n                            MenuTopComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {MenuContainerComponent} from \"./menu-containter/menu-container.component\";\nimport {MenuContentComponent} from \"./menu-content/menu-content.component\";\nimport {MenuDrawerComponent} from \"./menu-drawer/menu-drawer.component\";\nimport {MenuItemComponent} from \"./menu-item/menu-item.component\";\nimport {MenuTopComponent} from \"./menu-top/menu-top.component\";\nimport {MenuComponent} from \"./menu.component\";\n\n@NgModule({\n    declarations: [\n        MenuComponent,\n        MenuItemComponent,\n        MenuContentComponent,\n        MenuDrawerComponent,\n        MenuContainerComponent,\n        MenuTopComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [\n        MenuComponent,\n        MenuContentComponent,\n        MenuDrawerComponent,\n        MenuContainerComponent,\n        MenuItemComponent,\n        MenuTopComponent,\n    ]\n})\nexport class MenuModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuTopComponent.html":{"url":"components/MenuTopComponent.html","title":"component - MenuTopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuTopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/menu/src/lib/menu-top/menu-top.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                g43-menu-top\n            \n\n            \n                styleUrls\n                ./menu-top.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-top.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                realHeight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                            \n                                height\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    height\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Default value : \"aliceblue\"\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-top/menu-top.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-top/menu-top.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-top/menu-top.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-top/menu-top.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/menu/src/lib/menu-top/menu-top.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            realHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in projects/menu/src/lib/menu-top/menu-top.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in projects/menu/src/lib/menu-top/menu-top.component.ts:17\n                                \n                            \n\n                \n                    \n                        setheight(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/menu/src/lib/menu-top/menu-top.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, OnInit} from \"@angular/core\";\n\n@Component({\n    selector: \"g43-menu-top\",\n    templateUrl: \"./menu-top.component.html\",\n    styleUrls: [\"./menu-top.component.scss\"],\n    host: {\n        \"[style.height.px]\": \"height\",\n        \"[style.background-color]\": \"background\",\n    }\n})\nexport class MenuTopComponent implements OnInit {\n    @Input() public visible = false;\n    @Input() public background = \"aliceblue\";\n    private realHeight = 50;\n\n    public get height(): number {\n        return this.realHeight;\n    }\n\n    @Input()\n    public set height(value: number) {\n        this.realHeight = value;\n    }\n\n    public ngOnInit(): void {\n    }\n\n    public close(): void {\n        this.visible = false;\n    }\n\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./menu-top.component.scss\n                \n                :host {\n    position: fixed;\n    z-index: 3;\n    top: 0;\n    box-shadow: 0 1px 2px 0 rgba(34, 36, 38, .15);\n    border-bottom: 1px solid rgba(34, 36, 38, .15);\n\n    overflow: hidden;\n    display: flex;\n    max-width: 100vw;\n    min-width: 100vw;\n    width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuTopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NumberInputComponent.html":{"url":"components/NumberInputComponent.html","title":"component - NumberInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NumberInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/input/src/lib/components/number-input/number-input.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NumberInputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                g43-number-input\n            \n\n            \n                styleUrls\n                ./number-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./number-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                inputFormControl\n                            \n                            \n                                    Private\n                                lastValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isValidNumber\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onTouched\n                            \n                            \n                                    Protected\n                                processValue\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                    Optional\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isValidNumber\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChange(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTouched(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Optional\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl(\"\")\n                        \n                    \n                        \n                            \n                                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/input/src/lib/components/number-input/number-input.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n@Component({\n    selector: \"g43-number-input\",\n    templateUrl: \"./number-input.component.html\",\n    styleUrls: [\"./number-input.component.css\"],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NumberInputComponent),\n            multi: true\n        }\n    ]\n})\nexport class NumberInputComponent implements OnInit, ControlValueAccessor {\n    public inputFormControl = new FormControl(\"\");\n    @Input() public label?: string;\n    @Input() public placeholder?: string;\n    private lastValue: string;\n\n\n    public ngOnInit() {\n        this.inputFormControl.valueChanges.subscribe((value) => {\n            this.onChange(this.processValue(value));\n        });\n    }\n\n    public onChange(value: string): void {\n    }\n\n    public onTouched(value: string): void {\n    }\n\n    public registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    public setDisabledState?(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.inputFormControl.disable();\n        } else {\n            this.inputFormControl.enable();\n        }\n    }\n\n    public writeValue(value: string): void {\n        if (!this.lastValue) {\n            this.lastValue = value;\n        }\n        this.inputFormControl.setValue(value || \"\", {emitEvent: false});\n    }\n\n    protected processValue(value: string): string {\n        if (this.isValidNumber(value)) {\n            this.lastValue = value;\n        }\n        this.writeValue(this.lastValue);\n\n        return this.lastValue;\n    }\n\n    private isValidNumber(value: string): boolean {\n        return /^[0-9,.]*$/.test(value);\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./number-input.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'button[g43-button], a[g43-button]'},{'name': 'CoreInputComponent', 'selector': 'g43-core-input'},{'name': 'CoreSelectComponent', 'selector': 'g43-core-select'},{'name': 'CoreTableColumnComponent', 'selector': 'g43-table-column'},{'name': 'CoreTableComponent', 'selector': 'g43-table'},{'name': 'CoreTableFilterComponent', 'selector': 'g43-table-filter'},{'name': 'G43InputComponent', 'selector': 'g43-input'},{'name': 'MenuComponent', 'selector': 'g43-menu'},{'name': 'MenuContainerComponent', 'selector': 'g43-menu-container'},{'name': 'MenuContentComponent', 'selector': 'g43-menu-content'},{'name': 'MenuDrawerComponent', 'selector': 'g43-menu-drawer'},{'name': 'MenuItemComponent', 'selector': 'g43-menu-item'},{'name': 'MenuTopComponent', 'selector': 'g43-menu-top'},{'name': 'NumberInputComponent', 'selector': 'g43-number-input'}];\n    var DIRECTIVES = [{'name': 'CoreSelectOptionDirective', 'selector': '[g43CoreSelectOption]'}];\n    var ACTUAL_COMPONENT = {'name': 'NumberInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableColumnConfigInterface.html":{"url":"interfaces/TableColumnConfigInterface.html","title":"interface - TableColumnConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TableColumnConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/table/src/lib/interfaces/table-column-config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        align\n                                \n                                \n                                            Optional\n                                        cellClass\n                                \n                                \n                                        columnDef\n                                \n                                \n                                            Optional\n                                        contentAlign\n                                \n                                \n                                            Optional\n                                        customFooter\n                                \n                                \n                                            Optional\n                                        customValue\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        footer\n                                \n                                \n                                            Optional\n                                        format\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        labelKey\n                                \n                                \n                                            Optional\n                                        selection\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        tableCellTemplate\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                                \n                                            Optional\n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        align\n                                    \n                                \n                                \n                                    \n                                        align:     \"center\" | \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"center\" | \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Align property for alignment usage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellClass\n                                    \n                                \n                                \n                                    \n                                        cellClass:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines classes for td elements\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columnDef\n                                    \n                                \n                                \n                                    \n                                        columnDef:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of attribute whose value is displayed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentAlign\n                                    \n                                \n                                \n                                    \n                                        contentAlign:     \"center\" | \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"center\" | \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customFooter\n                                    \n                                \n                                \n                                    \n                                        customFooter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customValue\n                                    \n                                \n                                \n                                    \n                                        customValue:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function for cell styling and mapping\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         TableFilterConfigInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableFilterConfigInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Enable / Disable filtering\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        footer\n                                    \n                                \n                                \n                                    \n                                        footer:         FooterType | FooterType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FooterType | FooterType[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Format for DatePipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Column title printed into th element\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labelKey\n                                    \n                                \n                                \n                                    \n                                        labelKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selection\n                                    \n                                \n                                \n                                    \n                                        selection:     \"none\" | \"single\" | \"multi\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"none\" | \"single\" | \"multi\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableCellTemplate\n                                    \n                                \n                                \n                                    \n                                        tableCellTemplate:     TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"number\" | \"string\" | \"date\" | \"boolean\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"number\" | \"string\" | \"date\" | \"boolean\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Enable / Disable sorting\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\nimport { TableFilterConfigInterface } from \"./table-filter-config.interface\";\n\nexport enum FooterType {\n    SUM = 1  string;\n\n    /**\n     * Column title printed into th element\n     */\n    label?: string;\n    labelKey?: string;\n    /**\n     * Function for cell styling and mapping\n     */\n    customValue?: (row: any) => string;\n    footer?: FooterType | FooterType[];\n    customFooter?: (iterator: IterableIterator) => string;\n\n    selection?: \"none\" | \"single\" | \"multi\";\n    /**\n     * Align property for alignment usage\n     */\n    align?: \"center\" | \"left\" | \"right\";\n\n    /**\n     * Name of attribute whose value is displayed\n     */\n    columnDef: string;\n\n    visible?: boolean;\n    /**\n     * Format for DatePipe\n     */\n    format?: string;\n\n    /**\n     */\n    tableCellTemplate?: TemplateRef;\n    // sticky: \"LEFT\" | \"RIGHT\"\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableConfigInterface.html":{"url":"interfaces/TableConfigInterface.html","title":"interface - TableConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TableConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/table/src/lib/interfaces/table-config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        columns\n                                \n                                \n                                            Optional\n                                        debounceTime\n                                \n                                \n                                            Optional\n                                        noDataText\n                                \n                                \n                                            Optional\n                                        onRowClick\n                                \n                                \n                                            Optional\n                                        onSelectionChange\n                                \n                                \n                                            Optional\n                                        pageSize\n                                \n                                \n                                            Optional\n                                        pageSizeOptions\n                                \n                                \n                                            Optional\n                                        paging\n                                \n                                \n                                            Optional\n                                        rowClass\n                                \n                                \n                                            Optional\n                                        selectable\n                                \n                                \n                                            Optional\n                                        sticky\n                                \n                                \n                                            Optional\n                                        uppercaseHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                    \n                                \n                                \n                                    \n                                        columns:         TableColumnConfigInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableColumnConfigInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debounceTime\n                                    \n                                \n                                \n                                    \n                                        debounceTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDataText\n                                    \n                                \n                                \n                                    \n                                        noDataText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onRowClick\n                                    \n                                \n                                \n                                    \n                                        onRowClick:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSelectionChange\n                                    \n                                \n                                \n                                    \n                                        onSelectionChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSizeOptions\n                                    \n                                \n                                \n                                    \n                                        pageSizeOptions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paging\n                                    \n                                \n                                \n                                    \n                                        paging:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowClass\n                                    \n                                \n                                \n                                    \n                                        rowClass:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectable\n                                    \n                                \n                                \n                                    \n                                        selectable:     \"NONE\" | \"SINGLE\" | \"MULTI\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"NONE\" | \"SINGLE\" | \"MULTI\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sticky\n                                    \n                                \n                                \n                                    \n                                        sticky:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uppercaseHeader\n                                    \n                                \n                                \n                                    \n                                        uppercaseHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {TableColumnConfigInterface} from \"./table-column-config.interface\";\n\nexport interface TableConfigInterface {\n    // sticky footer\n    // sticky header\n    paging?: boolean;\n    pageSize?: number;\n    debounceTime?: number;\n    pageSizeOptions?: number[];\n    uppercaseHeader?: boolean;\n    noDataText?: string;\n    sticky?: boolean;\n    selectable?: \"NONE\" | \"SINGLE\" | \"MULTI\";\n    onSelectionChange?: (selectedRows: any[]) => void;\n    columns: TableColumnConfigInterface[];\n    rowClass?: (row: any, rowIndex: number) => string;\n    onRowClick?: (row: any, rowIndex: number) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableFilterConfigInterface.html":{"url":"interfaces/TableFilterConfigInterface.html","title":"interface - TableFilterConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TableFilterConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/table/src/lib/interfaces/table-filter-config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        enabled\n                                \n                                \n                                            Optional\n                                        max\n                                \n                                \n                                            Optional\n                                        min\n                                \n                                \n                                            Optional\n                                        selectValues\n                                \n                                \n                                            Optional\n                                        template\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Enable / Disable filtering\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                    \n                                \n                                \n                                    \n                                        max:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                    \n                                \n                                \n                                    \n                                        min:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectValues\n                                    \n                                \n                                \n                                    \n                                        selectValues:     KeyValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     KeyValue[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Values used in select input\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                    \n                                \n                                \n                                    \n                                        template:     TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A template for a custom filter element\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"STRING\" | \"NUMBER\" | \"BOOLEAN\" | \"SELECT\" | \"DATE_RANGE\" | \"NUMBER_RANGE\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"STRING\" | \"NUMBER\" | \"BOOLEAN\" | \"SELECT\" | \"DATE_RANGE\" | \"NUMBER_RANGE\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of filtering\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from \"@angular/core\";\nimport { KeyValue } from \"gtools\";\n\nexport interface TableFilterConfigInterface {\n    /**\n     * Type of filtering\n     *\n     */\n    type: \"STRING\" | \"NUMBER\" | \"BOOLEAN\" | \"SELECT\" | \"DATE_RANGE\" | \"NUMBER_RANGE\";\n\n    /**\n     * Values used in select input\n     */\n    selectValues?: KeyValue[];\n\n    /**\n     * Enable / Disable filtering\n     *\n     */\n    enabled?: boolean;\n\n    min?: string;\n\n    max?: string;\n\n    /**\n     * A template for a custom filter element\n     */\n    template?: TemplateRef;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableMaker.html":{"url":"classes/TableMaker.html","title":"class - TableMaker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableMaker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/table/src/lib/models/table-maker.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                filters\n                            \n                            \n                                    Private\n                                realData\n                            \n                            \n                                    Private\n                                sort\n                            \n                            \n                                    Private\n                                sortColumn\n                            \n                            \n                                    Private\n                                    Readonly\n                                tableBody\n                            \n                            \n                                    Private\n                                    Readonly\n                                tableFooter\n                            \n                            \n                                    Private\n                                    Readonly\n                                tableHeader\n                            \n                            \n                                    Private\n                                    Readonly\n                                utils\n                            \n                            \n                                    Private\n                                    Readonly\n                                wrapper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBody\n                            \n                            \n                                    Private\n                                createFooter\n                            \n                            \n                                    Private\n                                createHeader\n                            \n                            \n                                    Private\n                                getText\n                            \n                            \n                                    Private\n                                setFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(selector: string, config: TableConfigInterface, defaultData: T[])\n                    \n                \n                        \n                            \n                                Defined in projects/table/src/lib/models/table-maker.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        TableConfigInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultData\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/models/table-maker.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            realData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/models/table-maker.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"\" | \"DESC\" | \"ASC\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/models/table-maker.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sortColumn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/models/table-maker.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            tableBody\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLTableSectionElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/models/table-maker.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            tableFooter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLTableSectionElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/models/table-maker.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            tableHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLTableSectionElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/models/table-maker.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            utils\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        getRowName(config: TableColumnConfigInterface): string {\n            return config.columnDef;\n        },\n        createElement(elementName: string): S {\n            return document.createElement(elementName) as S;\n        }\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/models/table-maker.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            wrapper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/table/src/lib/models/table-maker.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createBody\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createBody()\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/models/table-maker.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFooter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFooter()\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/models/table-maker.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createHeader()\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/models/table-maker.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(config: TableColumnConfigInterface, rowData: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/models/table-maker.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                TableColumnConfigInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rowData\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFilter(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/table/src/lib/models/table-maker.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FooterType, TableColumnConfigInterface } from \"../interfaces/table-column-config.interface\";\nimport { TableConfigInterface } from \"../interfaces/table-config.interface\";\n\nexport class TableMaker {\n    private readonly wrapper: HTMLElement;\n    private readonly tableHeader: HTMLTableSectionElement;\n    private readonly tableBody: HTMLTableSectionElement;\n    private readonly tableFooter: HTMLTableSectionElement;\n    private sort: \"\" | \"DESC\" | \"ASC\";\n    private sortColumn: string;\n    private realData: T[] = [];\n    private readonly filters: { [key: string]: string | number } = {};\n    private readonly utils = {\n        getRowName(config: TableColumnConfigInterface): string {\n            return config.columnDef;\n        },\n        createElement(elementName: string): S {\n            return document.createElement(elementName) as S;\n        }\n    };\n\n    public constructor(selector: string, private readonly config: TableConfigInterface, private readonly defaultData: T[]) {\n        this.wrapper = document.querySelector(selector);\n        if (!this.wrapper) {\n            throw new Error(`Cannot find element \"${ selector }\"`);\n        }\n\n        const table = this.utils.createElement(\"table\");\n\n        this.tableHeader = this.utils.createElement(\"thead\");\n        this.createHeader();\n        table.appendChild(this.tableHeader);\n\n\n        const hasAnyData = defaultData.some((row) => !!row);\n        if (hasAnyData) {\n            this.tableBody = this.utils.createElement(\"tbody\");\n            this.createBody();\n            table.appendChild(this.tableBody);\n        }\n\n        const hasAnyFooter = this.config.columns.some((actConfig) => !!actConfig.footer || !actConfig.customFooter);\n        if (hasAnyFooter) {\n            this.tableFooter = this.utils.createElement(\"tfoot\");\n            this.createFooter();\n            table.appendChild(this.tableFooter);\n\n        }\n\n        this.wrapper.appendChild(table);\n    }\n\n    private getText(config: TableColumnConfigInterface, rowData: T): string | number {\n        if (typeof config.customValue === \"function\") {\n            return config.customValue(rowData);\n        }\n\n        return rowData[this.utils.getRowName(config)];\n    }\n\n    private setFilter(key: string, value: string): void {\n        this.filters[key] = value;\n        this.createBody();\n    }\n\n    private createHeader(): void {\n        const hasAnyFilter = this.config.columns.some((config) => !!config.filter);\n        const createFirstRow = (): HTMLTableRowElement => {\n            const tableRow = this.utils.createElement(\"tr\");\n\n            this.config.columns.forEach((column) => {\n                const tableHeader = this.utils.createElement(\"th\");\n\n                if (typeof column.label === \"string\") {\n                    tableHeader.innerText = column.label;\n                }\n                if (column.sort === true) {\n                    tableHeader.style.cursor = \"pointer\";\n                    tableHeader.addEventListener(\"click\", () => {\n                        if (this.sortColumn === column.columnDef) {\n                            if (this.sort === \"ASC\") {\n                                this.sort = \"DESC\";\n                            } else if (this.sort === \"DESC\") {\n                                this.sort = \"\";\n                            } else {\n                                this.sort = \"ASC\";\n                            }\n                        } else {\n                            this.sortColumn = column.columnDef;\n                            this.sort = \"ASC\";\n                        }\n                        this.createBody();\n                    });\n                }\n\n                tableRow.appendChild(tableHeader);\n            });\n\n            return tableRow;\n        };\n\n        const createFilterRow = (): HTMLTableRowElement => {\n            const tableRow = this.utils.createElement(\"tr\");\n\n            this.config.columns.forEach((column) => {\n                const tableHeader = this.utils.createElement(\"th\");\n                if (column.filter) {\n                    if (column.filter.type === \"STRING\") {\n                        const input = this.utils.createElement(\"input\");\n                        input.addEventListener(\"keyup\", (e) => this.setFilter(this.utils.getRowName(column), input.value));\n                        tableHeader.appendChild(input);\n                    }\n                    if (column.filter.type === \"NUMBER\") {\n                        const input = this.utils.createElement(\"input\");\n                        input.addEventListener(\"keyup\",\n                            (e) => e.key !== \"Enter\" && this.setFilter(this.utils.getRowName(column), input.value));\n                        input.addEventListener(\"change\", (e) => this.setFilter(this.utils.getRowName(column), input.value));\n                        input.type = \"number\";\n                        tableHeader.appendChild(input);\n                    }\n                }\n                tableRow.appendChild(tableHeader);\n            });\n\n            return tableRow;\n        };\n\n        this.tableHeader.appendChild(createFirstRow());\n        if (hasAnyFilter) {\n            this.tableHeader.appendChild(createFilterRow());\n        }\n    }\n\n    private createFooter(): void {\n        const createFooterRow = (): HTMLTableRowElement => {\n            const tableRow = this.utils.createElement(\"tr\");\n\n            this.config.columns.forEach((column) => {\n                const tableCell = this.utils.createElement(\"td\");\n                const getNumberData = (): number[] => this.realData.map((row) => Number(this.getText(column, row)));\n                if (typeof column.customFooter === \"function\") {\n                    tableCell.innerText = column.customFooter(this.realData.entries());\n                } else if (column.footer === FooterType.MAX) {\n                    tableCell.innerText = \"Max: \" + Math.max(...getNumberData());\n                } else if (column.footer === FooterType.MIN) {\n                    tableCell.innerText = \"Min: \" + Math.min(...getNumberData());\n                } else if (column.footer === FooterType.SUM) {\n                    tableCell.innerText = \"Sum: \" + getNumberData().reduce((acc, val) => acc + val);\n                } else if (column.footer === FooterType.AVG) {\n                    const data = getNumberData();\n                    tableCell.innerText = \"Avg: \" + data.reduce((acc, val) => acc + val) / data.length;\n                }\n\n                tableRow.appendChild(tableCell);\n            });\n\n            return tableRow;\n        };\n        this.tableFooter.appendChild(createFooterRow());\n    }\n\n    private createBody(): void {\n        const createCell = (rowData: T, config: TableColumnConfigInterface, cellIndex: number): HTMLTableCellElement | null => {\n            const columnTitle = this.utils.getRowName(config);\n            const text = this.getText(config, rowData);\n            const filterValue: string | number = this.filters[columnTitle];\n            if (typeof filterValue === \"string\" && String(text).indexOf(filterValue) (\"td\");\n            tableCell.innerText = String(text);\n\n            return tableCell;\n        };\n\n        const createRow = (rowData: T, rowIndex: number): HTMLTableRowElement | null => {\n            const tableRow = this.utils.createElement(\"tr\");\n\n            for (let columnIndex = 0; columnIndex  {\n            if (!this.sort || !this.sortColumn) {\n                return 0;\n            }\n            if (this.sort === \"ASC\") {\n                return String(a[this.sortColumn]).localeCompare(b[this.sortColumn]);\n            }\n\n            return String(b[this.sortColumn]).localeCompare(a[this.sortColumn]);\n\n        });\n        this.realData.forEach((row: any, index: number) => {\n            const newRow = createRow(row, index);\n            if (newRow) {\n                this.tableBody.appendChild(newRow);\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableMakerModule.html":{"url":"modules/TableMakerModule.html","title":"module - TableMakerModule","body":"\n                   \n\n\n\n\n    Modules\n    TableMakerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableMakerModule\n\n\n\ncluster_TableMakerModule_declarations\n\n\n\ncluster_TableMakerModule_exports\n\n\n\n\nCoreTableColumnComponent\n\nCoreTableColumnComponent\n\n\n\nTableMakerModule\n\nTableMakerModule\n\nTableMakerModule -->\n\nCoreTableColumnComponent->TableMakerModule\n\n\n\n\n\nCoreTableComponent\n\nCoreTableComponent\n\nTableMakerModule -->\n\nCoreTableComponent->TableMakerModule\n\n\n\n\n\nCoreTableFilterComponent\n\nCoreTableFilterComponent\n\nTableMakerModule -->\n\nCoreTableFilterComponent->TableMakerModule\n\n\n\n\n\nCoreTableColumnComponent \n\nCoreTableColumnComponent \n\nCoreTableColumnComponent  -->\n\nTableMakerModule->CoreTableColumnComponent \n\n\n\n\n\nCoreTableComponent \n\nCoreTableComponent \n\nCoreTableComponent  -->\n\nTableMakerModule->CoreTableComponent \n\n\n\n\n\nCoreTableFilterComponent \n\nCoreTableFilterComponent \n\nCoreTableFilterComponent  -->\n\nTableMakerModule->CoreTableFilterComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/table/src/lib/table-maker.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CoreTableColumnComponent\n                        \n                        \n                            CoreTableComponent\n                        \n                        \n                            CoreTableFilterComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CoreTableColumnComponent\n                        \n                        \n                            CoreTableComponent\n                        \n                        \n                            CoreTableFilterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CoreTableColumnComponent } from \"./components/core-table-column/core-table-column.component\";\nimport { CoreTableFilterComponent } from \"./components/core-table-filter/core-table-filter.component\";\nimport { CoreTableComponent } from \"./components/core-table/core-table.component\";\n\n@NgModule({\n    declarations: [\n        CoreTableComponent,\n        CoreTableFilterComponent,\n        CoreTableColumnComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n    ],\n    exports: [\n        CoreTableComponent,\n        CoreTableFilterComponent,\n        CoreTableColumnComponent,\n    ]\n})\nexport class TableMakerModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/table/src/lib/table.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in projects/table/src/lib/table.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class TableService {\n\n    public constructor() {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/common/src/lib/services/g43-notification/g43-notification.interface.ts\n            \n            interface\n            G43Notification\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/src/lib/services/g43-notification/g43-notification.interface.ts\n            \n            variable\n            G43_NOTIFICATION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/src/lib/services/g43-service/g43-core-service.service.ts\n            \n            class\n            G43CoreService\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                projects/common/src/lib/services/g43-service/g43-core-service.service.ts\n            \n            interface\n            G43ServiceParams\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/common/src/lib/services/g43-service/g43.service.ts\n            \n            class\n            G43Service\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                projects/common/src/lib/services/g43-translate/g43-translation.interface.ts\n            \n            interface\n            G43Translation\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/src/lib/services/g43-translate/g43-translation.interface.ts\n            \n            variable\n            G43_TRANSLATE_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/src/lib/shared-pipes/g43-file-size.pipe.ts\n            \n            pipe\n            G43FileSizePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/src/lib/shared-pipes/g43-file-size.pipe.ts\n            \n            variable\n            FILE_SIZE_UNITS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/src/lib/shared-pipes/g43-file-size.pipe.ts\n            \n            variable\n            FILE_SIZE_UNITS_LONG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/src/lib/shared-pipes/g43-safe.pipe.ts\n            \n            pipe\n            G43SafePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/src/lib/testing/api/g43-rest-api.handler.ts\n            \n            class\n            G43RestApiHandler\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/input/src/lib/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/input/src/lib/components/core-input/core-input.component.ts\n            \n            component\n            CoreInputComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/input/src/lib/components/core-select/core-select-option.directive.ts\n            \n            directive\n            CoreSelectOptionDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/input/src/lib/components/core-select/core-select.component.ts\n            \n            component\n            CoreSelectComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                projects/input/src/lib/components/number-input/number-input.component.ts\n            \n            component\n            NumberInputComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/input/src/lib/g43-input.component.ts\n            \n            component\n            G43InputComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/input/src/lib/g43-input.service.ts\n            \n            injectable\n            G43InputService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/input/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/input/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/menu/src/lib/menu-containter/menu-container.component.ts\n            \n            component\n            MenuContainerComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/menu/src/lib/menu-content/menu-content.component.ts\n            \n            component\n            MenuContentComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/menu/src/lib/menu-drawer/menu-drawer.component.ts\n            \n            component\n            MenuDrawerComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/menu/src/lib/menu-item/menu-item.component.ts\n            \n            component\n            MenuItemComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/menu/src/lib/menu-top/menu-top.component.ts\n            \n            component\n            MenuTopComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/menu/src/lib/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/menu/src/lib/models/menu-item.model.ts\n            \n            class\n            MenuItem\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/menu/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/menu/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/table/src/lib/components/core-table-column/core-table-column.component.ts\n            \n            component\n            CoreTableColumnComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/table/src/lib/components/core-table-filter/core-table-filter.component.ts\n            \n            component\n            CoreTableFilterComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/table/src/lib/components/core-table.service.ts\n            \n            injectable\n            CoreTableService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/table/src/lib/components/core-table.service.ts\n            \n            variable\n            counter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/table/src/lib/components/core-table/core-table.component.ts\n            \n            component\n            CoreTableComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/table/src/lib/interfaces/table-column-config.interface.ts\n            \n            interface\n            TableColumnConfigInterface\n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                projects/table/src/lib/interfaces/table-config.interface.ts\n            \n            interface\n            TableConfigInterface\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/table/src/lib/interfaces/table-filter-config.interface.ts\n            \n            interface\n            TableFilterConfigInterface\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/table/src/lib/models/filter.model.ts\n            \n            class\n            FilterModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/table/src/lib/models/table-maker.ts\n            \n            class\n            TableMaker\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/table/src/lib/table.service.ts\n            \n            injectable\n            TableService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/table/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/table/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.1\n        \n            @angular/common : ~8.2.1\n        \n            @angular/compiler : ~8.2.1\n        \n            @angular/core : ~8.2.1\n        \n            @angular/forms : ~8.2.1\n        \n            @angular/platform-browser : ~8.2.1\n        \n            @angular/platform-browser-dynamic : ~8.2.1\n        \n            @angular/router : ~8.2.1\n        \n            @g43/common : 0.0.7\n        \n            @g43/input : 0.0.2\n        \n            @g43/menu : 0.0.8\n        \n            @g43/table : 0.0.3\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            core-js : ^3.2.0\n        \n            gtools : ^0.2.8\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FooterType   (projects/.../table-column-config.interface.ts)\n                        \n                        \n                            G43NotificationType   (projects/.../g43-notification-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/table/src/lib/interfaces/table-column-config.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        FooterType\n                    \n                \n                        \n                            \n                                 SUM\n                            \n                        \n                        \n                            \n                                 AVG\n                            \n                        \n                        \n                            \n                                 MIN\n                            \n                        \n                        \n                            \n                                 MAX\n                            \n                        \n            \n        \n\n    projects/common/src/lib/services/g43-notification/g43-notification-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        G43NotificationType\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGToolsNG\nThis project was generated with Angular CLI version 7.3.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nTODO\nMenu\n\n allow add custom row in to menu\n make dynamic language switching really dynamic\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        G43CommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        G43InputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        G43SharedPipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        G43TestingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableMakerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_G43InputModule\n\n\n\ncluster_G43InputModule_declarations\n\n\n\ncluster_G43InputModule_exports\n\n\n\ncluster_G43SharedPipesModule\n\n\n\ncluster_G43SharedPipesModule_declarations\n\n\n\ncluster_G43SharedPipesModule_exports\n\n\n\ncluster_MenuModule\n\n\n\ncluster_MenuModule_declarations\n\n\n\ncluster_MenuModule_exports\n\n\n\ncluster_TableMakerModule\n\n\n\ncluster_TableMakerModule_declarations\n\n\n\ncluster_TableMakerModule_exports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nG43InputModule\n\nG43InputModule\n\nG43InputModule -->\n\nButtonComponent->G43InputModule\n\n\n\n\n\nCoreInputComponent\n\nCoreInputComponent\n\nG43InputModule -->\n\nCoreInputComponent->G43InputModule\n\n\n\n\n\nCoreSelectComponent\n\nCoreSelectComponent\n\nG43InputModule -->\n\nCoreSelectComponent->G43InputModule\n\n\n\n\n\nCoreSelectOptionDirective\n\nCoreSelectOptionDirective\n\nG43InputModule -->\n\nCoreSelectOptionDirective->G43InputModule\n\n\n\n\n\nG43InputComponent\n\nG43InputComponent\n\nG43InputModule -->\n\nG43InputComponent->G43InputModule\n\n\n\n\n\nNumberInputComponent\n\nNumberInputComponent\n\nG43InputModule -->\n\nNumberInputComponent->G43InputModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nG43InputModule->ButtonComponent \n\n\n\n\n\nCoreInputComponent \n\nCoreInputComponent \n\nCoreInputComponent  -->\n\nG43InputModule->CoreInputComponent \n\n\n\n\n\nCoreSelectComponent \n\nCoreSelectComponent \n\nCoreSelectComponent  -->\n\nG43InputModule->CoreSelectComponent \n\n\n\n\n\nG43InputComponent \n\nG43InputComponent \n\nG43InputComponent  -->\n\nG43InputModule->G43InputComponent \n\n\n\n\n\nNumberInputComponent \n\nNumberInputComponent \n\nNumberInputComponent  -->\n\nG43InputModule->NumberInputComponent \n\n\n\n\n\nG43FileSizePipe\n\nG43FileSizePipe\n\n\n\nG43SharedPipesModule\n\nG43SharedPipesModule\n\nG43SharedPipesModule -->\n\nG43FileSizePipe->G43SharedPipesModule\n\n\n\n\n\nG43SafePipe\n\nG43SafePipe\n\nG43SharedPipesModule -->\n\nG43SafePipe->G43SharedPipesModule\n\n\n\n\n\nG43FileSizePipe \n\nG43FileSizePipe \n\nG43FileSizePipe  -->\n\nG43SharedPipesModule->G43FileSizePipe \n\n\n\n\n\nG43SafePipe \n\nG43SafePipe \n\nG43SafePipe  -->\n\nG43SharedPipesModule->G43SafePipe \n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\n\n\nMenuModule\n\nMenuModule\n\nMenuModule -->\n\nMenuComponent->MenuModule\n\n\n\n\n\nMenuContainerComponent\n\nMenuContainerComponent\n\nMenuModule -->\n\nMenuContainerComponent->MenuModule\n\n\n\n\n\nMenuContentComponent\n\nMenuContentComponent\n\nMenuModule -->\n\nMenuContentComponent->MenuModule\n\n\n\n\n\nMenuDrawerComponent\n\nMenuDrawerComponent\n\nMenuModule -->\n\nMenuDrawerComponent->MenuModule\n\n\n\n\n\nMenuItemComponent\n\nMenuItemComponent\n\nMenuModule -->\n\nMenuItemComponent->MenuModule\n\n\n\n\n\nMenuTopComponent\n\nMenuTopComponent\n\nMenuModule -->\n\nMenuTopComponent->MenuModule\n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nMenuModule->MenuComponent \n\n\n\n\n\nMenuContainerComponent \n\nMenuContainerComponent \n\nMenuContainerComponent  -->\n\nMenuModule->MenuContainerComponent \n\n\n\n\n\nMenuContentComponent \n\nMenuContentComponent \n\nMenuContentComponent  -->\n\nMenuModule->MenuContentComponent \n\n\n\n\n\nMenuDrawerComponent \n\nMenuDrawerComponent \n\nMenuDrawerComponent  -->\n\nMenuModule->MenuDrawerComponent \n\n\n\n\n\nMenuItemComponent \n\nMenuItemComponent \n\nMenuItemComponent  -->\n\nMenuModule->MenuItemComponent \n\n\n\n\n\nMenuTopComponent \n\nMenuTopComponent \n\nMenuTopComponent  -->\n\nMenuModule->MenuTopComponent \n\n\n\n\n\nCoreTableColumnComponent\n\nCoreTableColumnComponent\n\n\n\nTableMakerModule\n\nTableMakerModule\n\nTableMakerModule -->\n\nCoreTableColumnComponent->TableMakerModule\n\n\n\n\n\nCoreTableComponent\n\nCoreTableComponent\n\nTableMakerModule -->\n\nCoreTableComponent->TableMakerModule\n\n\n\n\n\nCoreTableFilterComponent\n\nCoreTableFilterComponent\n\nTableMakerModule -->\n\nCoreTableFilterComponent->TableMakerModule\n\n\n\n\n\nCoreTableColumnComponent \n\nCoreTableColumnComponent \n\nCoreTableColumnComponent  -->\n\nTableMakerModule->CoreTableColumnComponent \n\n\n\n\n\nCoreTableComponent \n\nCoreTableComponent \n\nCoreTableComponent  -->\n\nTableMakerModule->CoreTableComponent \n\n\n\n\n\nCoreTableFilterComponent \n\nCoreTableFilterComponent \n\nCoreTableFilterComponent  -->\n\nTableMakerModule->CoreTableFilterComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            counter   (projects/.../core-table.service.ts)\n                        \n                        \n                            FILE_SIZE_UNITS   (projects/.../g43-file-size.pipe.ts)\n                        \n                        \n                            FILE_SIZE_UNITS_LONG   (projects/.../g43-file-size.pipe.ts)\n                        \n                        \n                            G43_NOTIFICATION_TOKEN   (projects/.../g43-notification.interface.ts)\n                        \n                        \n                            G43_TRANSLATE_TOKEN   (projects/.../g43-translation.interface.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/menu/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context(\"./\", true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/input/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context(\"./\", true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/common/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context(\"./\", true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/table/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context(\"./\", true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/table/src/lib/components/core-table.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n\n    projects/common/src/lib/shared-pipes/g43-file-size.pipe.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FILE_SIZE_UNITS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FILE_SIZE_UNITS_LONG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Bytes\", \"Kilobytes\", \"Megabytes\", \"Gigabytes\", \"Pettabytes\", \"Exabytes\", \"Zettabytes\", \"Yottabytes\"]\n                        \n                    \n\n\n            \n        \n\n    projects/common/src/lib/services/g43-notification/g43-notification.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            G43_NOTIFICATION_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\"G43Notification\")\n                        \n                    \n\n\n            \n        \n\n    projects/common/src/lib/services/g43-translate/g43-translation.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            G43_TRANSLATE_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\"G43Translation\")\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
